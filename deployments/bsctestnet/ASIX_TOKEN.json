{
  "address": "0xF637860c509e804C640C13c720d4150D5b3AC457",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldBuyTax",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldBuyMarketing",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "BuyTax",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "BuyMarketing",
          "type": "uint256"
        }
      ],
      "name": "BuyFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldSellTax",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldSellMarketing",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "SellTax",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "SellMarketing",
          "type": "uint256"
        }
      ],
      "name": "SellFeeUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_marketingAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "tax",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "marketing",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "excludeFromFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "includeInFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isExcludedFromFee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellFee",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "tax",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "marketing",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "tax",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "marketing",
          "type": "uint16"
        }
      ],
      "name": "setBuyFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "tax",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "marketing",
          "type": "uint16"
        }
      ],
      "name": "setSellFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "rAmount",
          "type": "uint256"
        }
      ],
      "name": "tokenFromReflection",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Pair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "uniswapV2Router",
      "outputs": [
        {
          "internalType": "contract IUniswapV2Router02",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "updateMarketingWallet",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x0aa6819eaea16be3997a6ccc247064d798bcb5fe6b870159a336bb32eed79d88",
  "receipt": {
    "to": null,
    "from": "0xc09eAC15f9Ba6462e8E4612af7C431E1cfe08b87",
    "contractAddress": "0xF637860c509e804C640C13c720d4150D5b3AC457",
    "transactionIndex": 6,
    "gasUsed": "5168755",
    "logsBloom": "0x00000000000000000000000000000000000000000000112000800000000000000000000000000000000000000000000000000000000000000000000000000080000000000000000000000008000004000001020000000000000000000000000000000000020000000000000000000800000000020000002000000010000000400000000000008000000000000000000001080000000000000000000000000000000000000800000000000000000000000000000000000000000000000000800000000002000000000000000000000040000000000000000000000000000021000000000000000000080000000000000000000004000000000000000008000000",
    "blockHash": "0xf32ea0165927da9ba9b686beca2d566bd75d5f1b225088199475397067f01d9b",
    "transactionHash": "0x0aa6819eaea16be3997a6ccc247064d798bcb5fe6b870159a336bb32eed79d88",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 17507002,
        "transactionHash": "0x0aa6819eaea16be3997a6ccc247064d798bcb5fe6b870159a336bb32eed79d88",
        "address": "0xF637860c509e804C640C13c720d4150D5b3AC457",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c09eac15f9ba6462e8e4612af7c431e1cfe08b87"
        ],
        "data": "0x",
        "logIndex": 20,
        "blockHash": "0xf32ea0165927da9ba9b686beca2d566bd75d5f1b225088199475397067f01d9b"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 17507002,
        "transactionHash": "0x0aa6819eaea16be3997a6ccc247064d798bcb5fe6b870159a336bb32eed79d88",
        "address": "0xB7926C0430Afb07AA7DEfDE6DA862aE0Bde767bc",
        "topics": [
          "0x0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9",
          "0x000000000000000000000000ae13d989dac2f0debff460ac112a837c89baa7cd",
          "0x000000000000000000000000f637860c509e804c640c13c720d4150d5b3ac457"
        ],
        "data": "0x000000000000000000000000b5d6275094009bbc02c889697bf7ae0fd0456f65000000000000000000000000000000000000000000000000000000000002285a",
        "logIndex": 21,
        "blockHash": "0xf32ea0165927da9ba9b686beca2d566bd75d5f1b225088199475397067f01d9b"
      },
      {
        "transactionIndex": 6,
        "blockNumber": 17507002,
        "transactionHash": "0x0aa6819eaea16be3997a6ccc247064d798bcb5fe6b870159a336bb32eed79d88",
        "address": "0xF637860c509e804C640C13c720d4150D5b3AC457",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000c09eac15f9ba6462e8e4612af7c431e1cfe08b87"
        ],
        "data": "0x00000000000000000000000000000000000000000000021e19e0c9bab2400000",
        "logIndex": 22,
        "blockHash": "0xf32ea0165927da9ba9b686beca2d566bd75d5f1b225088199475397067f01d9b"
      }
    ],
    "blockNumber": 17507002,
    "cumulativeGasUsed": "9495121",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "d2ef403d5ce85893904d98c4111ccd46",
  "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBuyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBuyMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BuyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BuyMarketing\",\"type\":\"uint256\"}],\"name\":\"BuyFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSellTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSellMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SellTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SellMarketing\",\"type\":\"uint256\"}],\"name\":\"SellFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_marketingAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"name\":\"setBuyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"name\":\"setSellFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ASIX.sol\":\"ASIX_TOKEN\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ASIX.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-01-19\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\n\\r\\n/**\\r\\n\\r\\n     \\\\      ___| _ _| \\\\ \\\\  /     __ __|  _ \\\\   |  /  ____|   \\\\  | \\r\\n    _ \\\\   \\\\___ \\\\   |   \\\\  /         |   |   |  ' /   __|      \\\\ | \\r\\n   ___ \\\\        |  |      \\\\         |   |   |  . \\\\   |      |\\\\  | \\r\\n _/    _\\\\ _____/ ___|  _/\\\\_\\\\       _|  \\\\___/  _|\\\\_\\\\ _____| _| \\\\_| \\r\\n                                                                  \\r\\n\\r\\n    Official Website\\r\\n    https://asixtoken.com/\\r\\n\\r\\n    Telegram Global Community\\r\\n    https://t.me/asixtoken\\r\\n\\r\\n    Twitter\\r\\n    https://twitter.com/AsixToken\\r\\n\\r\\n    Instagram\\r\\n    https://www.instagram.com/asixtoken/\\r\\n\\r\\n    Medium\\r\\n    https://medium.com/@asixtokenid\\r\\n\\r\\n    Reddit\\r\\n    https://www.reddit.com/user/AsixToken\\r\\n\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        external\\r\\n        returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\r\\n * in bugs, because programmers usually assume that an overflow raises an\\r\\n * error, which is the standard behavior in high level programming languages.\\r\\n * `SafeMath` restores this intuition by reverting the transaction when an\\r\\n * operation overflows.\\r\\n *\\r\\n * Using this library instead of the unchecked operations eliminates an entire\\r\\n * class of bugs, so it's recommended to use it always.\\r\\n */\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address payable) {\\r\\n        return payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\r\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\r\\n        // for accounts without code, i.e. `keccak256('')`\\r\\n        bytes32 codehash;\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly {\\r\\n            codehash := extcodehash(account)\\r\\n        }\\r\\n        return (codehash != accountHash && codehash != 0x0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Address: insufficient balance\\\"\\r\\n        );\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(\\r\\n            success,\\r\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data)\\r\\n        internal\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(\\r\\n                target,\\r\\n                data,\\r\\n                value,\\r\\n                \\\"Address: low-level call with value failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(\\r\\n            address(this).balance >= value,\\r\\n            \\\"Address: insufficient balance for call\\\"\\r\\n        );\\r\\n        return _functionCallWithValue(target, data, value, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 weiValue,\\r\\n        string memory errorMessage\\r\\n    ) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(\\r\\n            data\\r\\n        );\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(\\r\\n        address indexed token0,\\r\\n        address indexed token1,\\r\\n        address pair,\\r\\n        uint256\\r\\n    );\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        view\\r\\n        returns (address pair);\\r\\n\\r\\n    function allPairs(uint256) external view returns (address pair);\\r\\n\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n\\r\\n    function symbol() external pure returns (string memory);\\r\\n\\r\\n    function decimals() external pure returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\r\\n    function nonces(address owner) external view returns (uint256);\\r\\n\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\r\\n    event Burn(\\r\\n        address indexed sender,\\r\\n        uint256 amount0,\\r\\n        uint256 amount1,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint256 amount0In,\\r\\n        uint256 amount1In,\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\r\\n\\r\\n    function factory() external view returns (address);\\r\\n\\r\\n    function token0() external view returns (address);\\r\\n\\r\\n    function token1() external view returns (address);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112 reserve0,\\r\\n            uint112 reserve1,\\r\\n            uint32 blockTimestampLast\\r\\n        );\\r\\n\\r\\n    function price0CumulativeLast() external view returns (uint256);\\r\\n\\r\\n    function price1CumulativeLast() external view returns (uint256);\\r\\n\\r\\n    function kLast() external view returns (uint256);\\r\\n\\r\\n    function mint(address to) external returns (uint256 liquidity);\\r\\n\\r\\n    function burn(address to)\\r\\n        external\\r\\n        returns (uint256 amount0, uint256 amount1);\\r\\n\\r\\n    function swap(\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address to,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n\\r\\n    function skim(address to) external;\\r\\n\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountADesired,\\r\\n        uint256 amountBDesired,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        returns (\\r\\n            uint256 amountA,\\r\\n            uint256 amountB,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint256 amountTokenDesired,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        payable\\r\\n        returns (\\r\\n            uint256 amountToken,\\r\\n            uint256 amountETH,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\r\\n\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\r\\n\\r\\n    function swapExactTokensForTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactETHForTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactETH(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactTokensForETH(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapETHForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function quote(\\r\\n        uint256 amountA,\\r\\n        uint256 reserveA,\\r\\n        uint256 reserveB\\r\\n    ) external pure returns (uint256 amountB);\\r\\n\\r\\n    function getAmountOut(\\r\\n        uint256 amountIn,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountOut);\\r\\n\\r\\n    function getAmountIn(\\r\\n        uint256 amountOut,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountIn);\\r\\n\\r\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256[] memory amounts);\\r\\n\\r\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256[] memory amounts);\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountETH);\\r\\n\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable;\\r\\n\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract ASIX_TOKEN is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    mapping(address => uint256) private _rOwned;\\r\\n    mapping(address => uint256) private _tOwned;\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    mapping(address => bool) private _isExcludedFromFee;\\r\\n\\r\\n    mapping(address => bool) private _isExcluded;\\r\\n    address[] private _excluded;\\r\\n\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private _tTotal = 10 * 10**12 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n\\r\\n    address payable public _marketingAddress =\\r\\n        payable(address(0xabA88c90551AE60A1b5F94F677005d382248b8CF));\\r\\n\\r\\n    string private _name = \\\"ASIX Token\\\";\\r\\n    string private _symbol = \\\"ASIX\\\";\\r\\n    uint8 private _decimals = 9;\\r\\n\\r\\n    struct BuyFee {\\r\\n        uint16 tax;\\r\\n        uint16 marketing;\\r\\n    }\\r\\n\\r\\n    struct SellFee {\\r\\n        uint16 tax;\\r\\n        uint16 marketing;\\r\\n    }\\r\\n\\r\\n    BuyFee public buyFee;\\r\\n    SellFee public sellFee;\\r\\n\\r\\n    uint16 private _taxFee;\\r\\n    uint16 private _marketingFee;\\r\\n\\r\\n    IUniswapV2Router02 public immutable uniswapV2Router;\\r\\n    address public immutable uniswapV2Pair;\\r\\n\\r\\n    constructor() {\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n\\r\\n        buyFee.tax = 0;\\r\\n        buyFee.marketing = 7;\\r\\n\\r\\n        sellFee.tax = 0;\\r\\n        sellFee.marketing = 9;\\r\\n\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\r\\n            // 0x10ED43C718714eb63d5aA57B78B54704E256024E //bscmainet pancakeswap router \\r\\n            // 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D //ropsten uniswap router\\r\\n            0x9Ac64Cc6e4415144C455BD8E4837Fea55603e5c3 //pancakeswap testnet router\\r\\n        );\\r\\n        // Create a uniswap pair for this new token\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\r\\n            .createPair(address(this), _uniswapV2Router.WETH());\\r\\n\\r\\n        // set the rest of the contract variables\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n\\r\\n        // exclude owner, tax wallet, and this contract from fee\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_marketingAddress] = true;\\r\\n\\r\\n        emit Transfer(address(0), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        if (_isExcluded[account]) return _tOwned[account];\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        public\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount)\\r\\n        public\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"ERC20: transfer amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue)\\r\\n        public\\r\\n        virtual\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue)\\r\\n        public\\r\\n        virtual\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].sub(\\r\\n                subtractedValue,\\r\\n                \\\"ERC20: decreased allowance below zero\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        require(\\r\\n            rAmount <= _rTotal,\\r\\n            \\\"Amount must be less than total reflections\\\"\\r\\n        );\\r\\n        uint256 currentRate = _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function updateMarketingWallet(address payable newAddress)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        _marketingAddress = newAddress;\\r\\n    }\\r\\n\\r\\n    function excludeFromFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = true;\\r\\n    }\\r\\n\\r\\n    function includeInFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = false;\\r\\n    }\\r\\n\\r\\n    event SellFeeUpdated(\\r\\n        uint256 oldSellTax,\\r\\n        uint256 oldSellMarketing,\\r\\n        uint256 SellTax,\\r\\n        uint256 SellMarketing\\r\\n    );\\r\\n\\r\\n    function setSellFee(uint16 tax, uint16 marketing) external onlyOwner {\\r\\n        require(tax + marketing <= 100, \\\"SellFee exceed 100\\\");\\r\\n        emit SellFeeUpdated(sellFee.tax, sellFee.marketing, tax, marketing);\\r\\n\\r\\n        sellFee.tax = tax;\\r\\n        sellFee.marketing = marketing;\\r\\n    }\\r\\n\\r\\n    event BuyFeeUpdated(\\r\\n        uint256 oldBuyTax,\\r\\n        uint256 oldBuyMarketing,\\r\\n        uint256 BuyTax,\\r\\n        uint256 BuyMarketing\\r\\n    );\\r\\n\\r\\n    function setBuyFee(uint16 tax, uint16 marketing) external onlyOwner {\\r\\n        require(tax + marketing <= 100, \\\"BuyFee exceed 100\\\");\\r\\n        emit BuyFeeUpdated(buyFee.tax, buyFee.marketing, tax, marketing);\\r\\n\\r\\n        buyFee.tax = tax;\\r\\n        buyFee.marketing = marketing;\\r\\n    }\\r\\n\\r\\n    //to recieve ETH from uniswapV2Router when swapping\\r\\n    receive() external payable {}\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount)\\r\\n        private\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        uint256 tFee = calculateTaxFee(tAmount);\\r\\n        uint256 tMarketing = calculateMarketingFee(tAmount);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tMarketing);\\r\\n\\r\\n        return (tTransferAmount, tFee, tMarketing);\\r\\n    }\\r\\n\\r\\n    function _getRValues(\\r\\n        uint256 tAmount,\\r\\n        uint256 tFee,\\r\\n        uint256 tMarketing,\\r\\n        uint256 currentRate\\r\\n    )\\r\\n        private\\r\\n        pure\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rMarketing = tMarketing.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rMarketing);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n    function _getRate() private view returns (uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns (uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;\\r\\n        for (uint256 i = 0; i < _excluded.length; i++) {\\r\\n            if (\\r\\n                _rOwned[_excluded[i]] > rSupply ||\\r\\n                _tOwned[_excluded[i]] > tSupply\\r\\n            ) return (_rTotal, _tTotal);\\r\\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\\r\\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\\r\\n        }\\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n\\r\\n    function _takeMarketing(uint256 tMarketing) private {\\r\\n        uint256 currentRate = _getRate();\\r\\n        uint256 rMarketing = tMarketing.mul(currentRate);\\r\\n        _rOwned[_marketingAddress] = _rOwned[_marketingAddress].add(rMarketing);\\r\\n        if (_isExcluded[_marketingAddress])\\r\\n            _tOwned[_marketingAddress] = _tOwned[_marketingAddress].add(\\r\\n                tMarketing\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\\r\\n        return _amount.mul(_taxFee).div(10**2);\\r\\n    }\\r\\n\\r\\n    function calculateMarketingFee(uint256 _amount)\\r\\n        private\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _amount.mul(_marketingFee).div(10**2);\\r\\n    }\\r\\n\\r\\n    function removeAllFee() private {\\r\\n        _taxFee = 0;\\r\\n        _marketingFee = 0;\\r\\n    }\\r\\n\\r\\n    function setBuy() private {\\r\\n        _taxFee = buyFee.tax;\\r\\n        _marketingFee = buyFee.marketing;\\r\\n    }\\r\\n\\r\\n    function setSell() private {\\r\\n        _taxFee = sellFee.tax;\\r\\n        _marketingFee = sellFee.marketing;\\r\\n    }\\r\\n\\r\\n    function isExcludedFromFee(address account) public view returns (bool) {\\r\\n        return _isExcludedFromFee[account];\\r\\n    }\\r\\n\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n\\r\\n        //indicates if fee should be deducted from transfer\\r\\n        bool takeFee = true;\\r\\n\\r\\n        //if any account belongs to _isExcludedFromFee account then remove the fee\\r\\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\\r\\n            takeFee = false;\\r\\n        }\\r\\n\\r\\n        //transfer amount, it will take tax, burn, liquidity fee\\r\\n        _tokenTransfer(from, to, amount, takeFee);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        // generate the uniswap pair path of token -> weth\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        // make the swap\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        // approve token transfer to cover all possible scenarios\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        // add the liquidity\\r\\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //this method is responsible for taking all fee, if takeFee is true\\r\\n    function _tokenTransfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount,\\r\\n        bool takeFee\\r\\n    ) private {\\r\\n        if (takeFee) {\\r\\n            removeAllFee();\\r\\n            if (sender == uniswapV2Pair) {\\r\\n                setBuy();\\r\\n            }\\r\\n            if (recipient == uniswapV2Pair) {\\r\\n                setSell();\\r\\n            }\\r\\n\\r\\n            //take fee for inter-wallet transfer\\r\\n            if ((sender != uniswapV2Pair) && (recipient != uniswapV2Pair)) {\\r\\n                setSell();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\\r\\n            _transferFromExcluded(sender, recipient, amount);\\r\\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferToExcluded(sender, recipient, amount);\\r\\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\\r\\n            _transferStandard(sender, recipient, amount);\\r\\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferBothExcluded(sender, recipient, amount);\\r\\n        } else {\\r\\n            _transferStandard(sender, recipient, amount);\\r\\n        }\\r\\n        removeAllFee();\\r\\n    }\\r\\n\\r\\n    function _transferStandard(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferToExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferFromExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferBothExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x459684ad0c225fb99b351dd50ed453d41e6d7d00bd8d4f2f1bee2028958431dc\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405269021e19e0c9bab24000006008819055620000229060001962000437565b62000030906000196200045a565b600955600b80546001600160a01b03191673aba88c90551ae60a1b5f94f677005d382248b8cf17905560408051808201909152600a8082526920a9a4ac102a37b5b2b760b11b60209092019182526200008c91600c9162000391565b5060408051808201909152600480825263082a692b60e31b6020909201918252620000ba91600d9162000391565b50600e805460ff19166009179055348015620000d557600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506009543360009081526002602090815260409182902092909255600f805463ffffffff1990811662070000179091556010805490911662090000179055805163c45a015560e01b81529051739ac64cc6e4415144c455bd8e4837fea55603e5c392839263c45a015592600480830193928290030181865afa158015620001a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c7919062000480565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023b919062000480565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000289573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002af919062000480565b6001600160a01b0390811660a0528116608052600160056000620002db6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526005909352818320805485166001908117909155600b549091168352912080549092161790556200033a3390565b6001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6008546040516200038291815260200190565b60405180910390a350620004ef565b8280546200039f90620004b2565b90600052602060002090601f016020900481019282620003c357600085556200040e565b82601f10620003de57805160ff19168380011785556200040e565b828001600101855582156200040e579182015b828111156200040e578251825591602001919060010190620003f1565b506200041c92915062000420565b5090565b5b808211156200041c576000815560010162000421565b6000826200045557634e487b7160e01b600052601260045260246000fd5b500690565b6000828210156200047b57634e487b7160e01b600052601160045260246000fd5b500390565b6000602082840312156200049357600080fd5b81516001600160a01b0381168114620004ab57600080fd5b9392505050565b600181811c90821680620004c757607f821691505b60208210811415620004e957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051611d1a6200053160003960008181610372015281816110110152818161107c015281816110be01526110fb015260006101fe0152611d1a6000f3fe6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063dd62ed3e11610064578063dd62ed3e146104d5578063ea2f0b371461051b578063ec2a520a1461053b578063f2fde38b1461055b57600080fd5b8063a9059cbb14610475578063aacebbe314610495578063caac7934146104b557600080fd5b806370a08231146103cd578063715018a6146103ed5780637afad249146104025780638da5cb5b1461042257806395d89b4114610440578063a457c2d71461045557600080fd5b80632d8381191161013e578063437823ec11610118578063437823ec14610319578063470624021461033b57806349bd5a5e146103605780635342acb41461039457600080fd5b80632d838119146102b7578063313ce567146102d757806339509351146102f957600080fd5b806306fdde0314610191578063095ea7b3146101bc5780631694505e146101ec57806318160ddd1461023857806323b872dd146102575780632b14ca561461027757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101a661057b565b6040516101b391906119b7565b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611a24565b61060d565b60405190151581526020016101b3565b3480156101f857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b3565b34801561024457600080fd5b506008545b6040519081526020016101b3565b34801561026357600080fd5b506101dc610272366004611a50565b610624565b34801561028357600080fd5b5060105461029c9061ffff808216916201000090041682565b6040805161ffff9384168152929091166020830152016101b3565b3480156102c357600080fd5b506102496102d2366004611a91565b61068d565b3480156102e357600080fd5b50600e5460405160ff90911681526020016101b3565b34801561030557600080fd5b506101dc610314366004611a24565b610716565b34801561032557600080fd5b50610339610334366004611aaa565b61074c565b005b34801561034757600080fd5b50600f5461029c9061ffff808216916201000090041682565b34801561036c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101dc6103af366004611aaa565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103d957600080fd5b506102496103e8366004611aaa565b61079a565b3480156103f957600080fd5b506103396107f9565b34801561040e57600080fd5b5061033961041d366004611ade565b61086d565b34801561042e57600080fd5b506000546001600160a01b0316610220565b34801561044c57600080fd5b506101a6610968565b34801561046157600080fd5b506101dc610470366004611a24565b610977565b34801561048157600080fd5b506101dc610490366004611a24565b6109c6565b3480156104a157600080fd5b506103396104b0366004611aaa565b6109d3565b3480156104c157600080fd5b50600b54610220906001600160a01b031681565b3480156104e157600080fd5b506102496104f0366004611b11565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561052757600080fd5b50610339610536366004611aaa565b610a1f565b34801561054757600080fd5b50610339610556366004611ade565b610a6a565b34801561056757600080fd5b50610339610576366004611aaa565b610b66565b6060600c805461058a90611b4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611b4a565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600061061a338484610c50565b5060015b92915050565b6000610631848484610d74565b610683843361067e85604051806060016040528060288152602001611c98602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610ef9565b610c50565b5060019392505050565b60006009548211156106f95760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b6000610703610f33565b905061070f8382610f56565b9392505050565b3360008181526004602090815260408083206001600160a01b0387168452909152812054909161061a91859061067e9086610f98565b6000546001600160a01b031633146107765760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6001600160a01b03811660009081526006602052604081205460ff16156107d757506001600160a01b031660009081526003602052604090205490565b6001600160a01b03821660009081526002602052604090205461061e9061068d565b6000546001600160a01b031633146108235760405162461bcd60e51b81526004016106f090611b85565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016106f090611b85565b60646108a38284611bd0565b61ffff1611156108e95760405162461bcd60e51b81526020600482015260116024820152700427579466565206578636565642031303607c1b60448201526064016106f0565b600f546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f3d839c4d8187eded7cfbdfb38e8c68ae748d7c674400c8c3b8c837ba2933d1ac9181900360800190a1600f805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6060600d805461058a90611b4a565b600061061a338461067e85604051806060016040528060258152602001611cc0602591393360009081526004602090815260408083206001600160a01b038d1684529091529020549190610ef9565b600061061a338484610d74565b6000546001600160a01b031633146109fd5760405162461bcd60e51b81526004016106f090611b85565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016106f090611b85565b6064610aa08284611bd0565b61ffff161115610ae75760405162461bcd60e51b8152602060048201526012602482015271053656c6c46656520657863656564203130360741b60448201526064016106f0565b6010546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f5453929bc359b94bdd2542a6d8391ca15fe386d74f044db5277328a36de3c6509181900360800190a16010805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b038116610bf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610cb25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f0565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f0565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dd85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f0565b6001600160a01b038216610e3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f0565b60008111610e9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016106f0565b6001600160a01b03831660009081526005602052604090205460019060ff1680610ede57506001600160a01b03831660009081526005602052604090205460ff165b15610ee7575060005b610ef384848484610ff7565b50505050565b60008184841115610f1d5760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611bf6565b95945050505050565b6000806000610f406112a3565b9092509050610f4f8282610f56565b9250505090565b600061070f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600080610fa58385611c0d565b90508381101561070f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106f0565b801561113d5761100f6011805463ffffffff19169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316141561107a5761107a600f54601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110bc576110bc611453565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415801561113057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b1561113d5761113d611453565b6001600160a01b03841660009081526006602052604090205460ff16801561117e57506001600160a01b03831660009081526006602052604090205460ff16155b156111935761118e848484611481565b611291565b6001600160a01b03841660009081526006602052604090205460ff161580156111d457506001600160a01b03831660009081526006602052604090205460ff165b156111e45761118e8484846115ba565b6001600160a01b03841660009081526006602052604090205460ff1615801561122657506001600160a01b03831660009081526006602052604090205460ff16155b156112365761118e848484611671565b6001600160a01b03841660009081526006602052604090205460ff16801561127657506001600160a01b03831660009081526006602052604090205460ff165b156112865761118e8484846116c3565b611291848484611671565b610ef36011805463ffffffff19169055565b6009546008546000918291825b6007548110156113f5578260026000600784815481106112d2576112d2611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061133d575081600360006007848154811061131657611316611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561135357600954600854945094505050509091565b611399600260006007848154811061136d5761136d611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611740565b92506113e160036000600784815481106113b5576113b5611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611740565b9150806113ed81611c3b565b9150506112b0565b5060085460095461140591610f56565b82101561141c576009546008549350935050509091565b90939092509050565b600081836114465760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611c56565b601054601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b600080600061148f84611782565b92509250925060008060006114ad8786866114a8610f33565b6117c4565b6001600160a01b038c1660009081526003602052604090205492955090935091506114d89088611740565b6001600160a01b038a166000908152600360209081526040808320939093556002905220546115079084611740565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115369083610f98565b6001600160a01b03891660009081526002602052604090205561155884611814565b61156281866118d4565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516115a791815260200190565b60405180910390a3505050505050505050565b60008060006115c884611782565b92509250925060008060006115e18786866114a8610f33565b6001600160a01b038c16600090815260026020526040902054929550909350915061160c9084611740565b6001600160a01b03808b16600090815260026020908152604080832094909455918b168152600390915220546116429087610f98565b6001600160a01b0389166000908152600360209081526040808320939093556002905220546115369083610f98565b600080600061167f84611782565b92509250925060008060006116988786866114a8610f33565b6001600160a01b038c1660009081526002602052604090205492955090935091506115079084611740565b60008060006116d184611782565b92509250925060008060006116ea8786866114a8610f33565b6001600160a01b038c1660009081526003602052604090205492955090935091506117159088611740565b6001600160a01b038a1660009081526003602090815260408083209390935560029052205461160c90845b600061070f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ef9565b600080600080611791856118f8565b9050600061179e8661191a565b905060006117b6826117b08986611740565b90611740565b979296509094509092505050565b60008080806117d38886611938565b905060006117e18887611938565b905060006117ef8888611938565b90506000611801826117b08686611740565b939b939a50919850919650505050505050565b600061181e610f33565b9050600061182c8383611938565b600b546001600160a01b03166000908152600260205260409020549091506118549082610f98565b600b80546001600160a01b03908116600090815260026020908152604080832095909555925490911681526006909152205460ff16156118cf57600b546001600160a01b03166000908152600360205260409020546118b39084610f98565b600b546001600160a01b03166000908152600360205260409020555b505050565b6009546118e19083611740565b600955600a546118f19082610f98565b600a555050565b60115460009061061e9060649061191490859061ffff16611938565b90610f56565b60115460009061061e9060649061191490859062010000900461ffff165b6000826119475750600061061e565b60006119538385611c78565b9050826119608583611c56565b1461070f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106f0565b600060208083528351808285015260005b818110156119e4578581018301518582016040015282016119c8565b818111156119f6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060408385031215611a3757600080fd5b8235611a4281611a0c565b946020939093013593505050565b600080600060608486031215611a6557600080fd5b8335611a7081611a0c565b92506020840135611a8081611a0c565b929592945050506040919091013590565b600060208284031215611aa357600080fd5b5035919050565b600060208284031215611abc57600080fd5b813561070f81611a0c565b803561ffff81168114611ad957600080fd5b919050565b60008060408385031215611af157600080fd5b611afa83611ac7565b9150611b0860208401611ac7565b90509250929050565b60008060408385031215611b2457600080fd5b8235611b2f81611a0c565b91506020830135611b3f81611a0c565b809150509250929050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611bed57611bed611bba565b01949350505050565b600082821015611c0857611c08611bba565b500390565b60008219821115611c2057611c20611bba565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c4f57611c4f611bba565b5060010190565b600082611c7357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9257611c92611bba565b50029056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208efaeb2c73815f8cff5e3b293450cbfb82240f95bdfa87c5ad8dd6980de4254264736f6c634300080a0033",
  "deployedBytecode": "0x6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063dd62ed3e11610064578063dd62ed3e146104d5578063ea2f0b371461051b578063ec2a520a1461053b578063f2fde38b1461055b57600080fd5b8063a9059cbb14610475578063aacebbe314610495578063caac7934146104b557600080fd5b806370a08231146103cd578063715018a6146103ed5780637afad249146104025780638da5cb5b1461042257806395d89b4114610440578063a457c2d71461045557600080fd5b80632d8381191161013e578063437823ec11610118578063437823ec14610319578063470624021461033b57806349bd5a5e146103605780635342acb41461039457600080fd5b80632d838119146102b7578063313ce567146102d757806339509351146102f957600080fd5b806306fdde0314610191578063095ea7b3146101bc5780631694505e146101ec57806318160ddd1461023857806323b872dd146102575780632b14ca561461027757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101a661057b565b6040516101b391906119b7565b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611a24565b61060d565b60405190151581526020016101b3565b3480156101f857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b3565b34801561024457600080fd5b506008545b6040519081526020016101b3565b34801561026357600080fd5b506101dc610272366004611a50565b610624565b34801561028357600080fd5b5060105461029c9061ffff808216916201000090041682565b6040805161ffff9384168152929091166020830152016101b3565b3480156102c357600080fd5b506102496102d2366004611a91565b61068d565b3480156102e357600080fd5b50600e5460405160ff90911681526020016101b3565b34801561030557600080fd5b506101dc610314366004611a24565b610716565b34801561032557600080fd5b50610339610334366004611aaa565b61074c565b005b34801561034757600080fd5b50600f5461029c9061ffff808216916201000090041682565b34801561036c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101dc6103af366004611aaa565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103d957600080fd5b506102496103e8366004611aaa565b61079a565b3480156103f957600080fd5b506103396107f9565b34801561040e57600080fd5b5061033961041d366004611ade565b61086d565b34801561042e57600080fd5b506000546001600160a01b0316610220565b34801561044c57600080fd5b506101a6610968565b34801561046157600080fd5b506101dc610470366004611a24565b610977565b34801561048157600080fd5b506101dc610490366004611a24565b6109c6565b3480156104a157600080fd5b506103396104b0366004611aaa565b6109d3565b3480156104c157600080fd5b50600b54610220906001600160a01b031681565b3480156104e157600080fd5b506102496104f0366004611b11565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561052757600080fd5b50610339610536366004611aaa565b610a1f565b34801561054757600080fd5b50610339610556366004611ade565b610a6a565b34801561056757600080fd5b50610339610576366004611aaa565b610b66565b6060600c805461058a90611b4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611b4a565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600061061a338484610c50565b5060015b92915050565b6000610631848484610d74565b610683843361067e85604051806060016040528060288152602001611c98602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610ef9565b610c50565b5060019392505050565b60006009548211156106f95760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b6000610703610f33565b905061070f8382610f56565b9392505050565b3360008181526004602090815260408083206001600160a01b0387168452909152812054909161061a91859061067e9086610f98565b6000546001600160a01b031633146107765760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6001600160a01b03811660009081526006602052604081205460ff16156107d757506001600160a01b031660009081526003602052604090205490565b6001600160a01b03821660009081526002602052604090205461061e9061068d565b6000546001600160a01b031633146108235760405162461bcd60e51b81526004016106f090611b85565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016106f090611b85565b60646108a38284611bd0565b61ffff1611156108e95760405162461bcd60e51b81526020600482015260116024820152700427579466565206578636565642031303607c1b60448201526064016106f0565b600f546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f3d839c4d8187eded7cfbdfb38e8c68ae748d7c674400c8c3b8c837ba2933d1ac9181900360800190a1600f805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6060600d805461058a90611b4a565b600061061a338461067e85604051806060016040528060258152602001611cc0602591393360009081526004602090815260408083206001600160a01b038d1684529091529020549190610ef9565b600061061a338484610d74565b6000546001600160a01b031633146109fd5760405162461bcd60e51b81526004016106f090611b85565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016106f090611b85565b6064610aa08284611bd0565b61ffff161115610ae75760405162461bcd60e51b8152602060048201526012602482015271053656c6c46656520657863656564203130360741b60448201526064016106f0565b6010546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f5453929bc359b94bdd2542a6d8391ca15fe386d74f044db5277328a36de3c6509181900360800190a16010805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b038116610bf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610cb25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f0565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f0565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dd85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f0565b6001600160a01b038216610e3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f0565b60008111610e9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016106f0565b6001600160a01b03831660009081526005602052604090205460019060ff1680610ede57506001600160a01b03831660009081526005602052604090205460ff165b15610ee7575060005b610ef384848484610ff7565b50505050565b60008184841115610f1d5760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611bf6565b95945050505050565b6000806000610f406112a3565b9092509050610f4f8282610f56565b9250505090565b600061070f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600080610fa58385611c0d565b90508381101561070f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106f0565b801561113d5761100f6011805463ffffffff19169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316141561107a5761107a600f54601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110bc576110bc611453565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415801561113057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b1561113d5761113d611453565b6001600160a01b03841660009081526006602052604090205460ff16801561117e57506001600160a01b03831660009081526006602052604090205460ff16155b156111935761118e848484611481565b611291565b6001600160a01b03841660009081526006602052604090205460ff161580156111d457506001600160a01b03831660009081526006602052604090205460ff165b156111e45761118e8484846115ba565b6001600160a01b03841660009081526006602052604090205460ff1615801561122657506001600160a01b03831660009081526006602052604090205460ff16155b156112365761118e848484611671565b6001600160a01b03841660009081526006602052604090205460ff16801561127657506001600160a01b03831660009081526006602052604090205460ff165b156112865761118e8484846116c3565b611291848484611671565b610ef36011805463ffffffff19169055565b6009546008546000918291825b6007548110156113f5578260026000600784815481106112d2576112d2611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061133d575081600360006007848154811061131657611316611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561135357600954600854945094505050509091565b611399600260006007848154811061136d5761136d611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611740565b92506113e160036000600784815481106113b5576113b5611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611740565b9150806113ed81611c3b565b9150506112b0565b5060085460095461140591610f56565b82101561141c576009546008549350935050509091565b90939092509050565b600081836114465760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611c56565b601054601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b600080600061148f84611782565b92509250925060008060006114ad8786866114a8610f33565b6117c4565b6001600160a01b038c1660009081526003602052604090205492955090935091506114d89088611740565b6001600160a01b038a166000908152600360209081526040808320939093556002905220546115079084611740565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115369083610f98565b6001600160a01b03891660009081526002602052604090205561155884611814565b61156281866118d4565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516115a791815260200190565b60405180910390a3505050505050505050565b60008060006115c884611782565b92509250925060008060006115e18786866114a8610f33565b6001600160a01b038c16600090815260026020526040902054929550909350915061160c9084611740565b6001600160a01b03808b16600090815260026020908152604080832094909455918b168152600390915220546116429087610f98565b6001600160a01b0389166000908152600360209081526040808320939093556002905220546115369083610f98565b600080600061167f84611782565b92509250925060008060006116988786866114a8610f33565b6001600160a01b038c1660009081526002602052604090205492955090935091506115079084611740565b60008060006116d184611782565b92509250925060008060006116ea8786866114a8610f33565b6001600160a01b038c1660009081526003602052604090205492955090935091506117159088611740565b6001600160a01b038a1660009081526003602090815260408083209390935560029052205461160c90845b600061070f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ef9565b600080600080611791856118f8565b9050600061179e8661191a565b905060006117b6826117b08986611740565b90611740565b979296509094509092505050565b60008080806117d38886611938565b905060006117e18887611938565b905060006117ef8888611938565b90506000611801826117b08686611740565b939b939a50919850919650505050505050565b600061181e610f33565b9050600061182c8383611938565b600b546001600160a01b03166000908152600260205260409020549091506118549082610f98565b600b80546001600160a01b03908116600090815260026020908152604080832095909555925490911681526006909152205460ff16156118cf57600b546001600160a01b03166000908152600360205260409020546118b39084610f98565b600b546001600160a01b03166000908152600360205260409020555b505050565b6009546118e19083611740565b600955600a546118f19082610f98565b600a555050565b60115460009061061e9060649061191490859061ffff16611938565b90610f56565b60115460009061061e9060649061191490859062010000900461ffff165b6000826119475750600061061e565b60006119538385611c78565b9050826119608583611c56565b1461070f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106f0565b600060208083528351808285015260005b818110156119e4578581018301518582016040015282016119c8565b818111156119f6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060408385031215611a3757600080fd5b8235611a4281611a0c565b946020939093013593505050565b600080600060608486031215611a6557600080fd5b8335611a7081611a0c565b92506020840135611a8081611a0c565b929592945050506040919091013590565b600060208284031215611aa357600080fd5b5035919050565b600060208284031215611abc57600080fd5b813561070f81611a0c565b803561ffff81168114611ad957600080fd5b919050565b60008060408385031215611af157600080fd5b611afa83611ac7565b9150611b0860208401611ac7565b90509250929050565b60008060408385031215611b2457600080fd5b8235611b2f81611a0c565b91506020830135611b3f81611a0c565b809150509250929050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611bed57611bed611bba565b01949350505050565b600082821015611c0857611c08611bba565b500390565b60008219821115611c2057611c20611bba565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c4f57611c4f611bba565b5060010190565b600082611c7357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9257611c92611bba565b50029056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208efaeb2c73815f8cff5e3b293450cbfb82240f95bdfa87c5ad8dd6980de4254264736f6c634300080a0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
      },
      "approve(address,uint256)": {
        "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
      },
      "balanceOf(address)": {
        "details": "Returns the amount of tokens owned by `account`."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transfer(address,uint256)": {
        "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 500,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 502,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_previousOwner",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 1311,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_rOwned",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1315,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_tOwned",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 1321,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_allowances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 1325,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_isExcludedFromFee",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1329,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_isExcluded",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 1332,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_excluded",
        "offset": 0,
        "slot": "7",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 1350,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_tTotal",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 1359,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_rTotal",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 1361,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_tFeeTotal",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 1370,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_marketingAddress",
        "offset": 0,
        "slot": "11",
        "type": "t_address_payable"
      },
      {
        "astId": 1373,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_name",
        "offset": 0,
        "slot": "12",
        "type": "t_string_storage"
      },
      {
        "astId": 1376,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_symbol",
        "offset": 0,
        "slot": "13",
        "type": "t_string_storage"
      },
      {
        "astId": 1379,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_decimals",
        "offset": 0,
        "slot": "14",
        "type": "t_uint8"
      },
      {
        "astId": 1392,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "buyFee",
        "offset": 0,
        "slot": "15",
        "type": "t_struct(BuyFee)1384_storage"
      },
      {
        "astId": 1395,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "sellFee",
        "offset": 0,
        "slot": "16",
        "type": "t_struct(SellFee)1389_storage"
      },
      {
        "astId": 1397,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_taxFee",
        "offset": 0,
        "slot": "17",
        "type": "t_uint16"
      },
      {
        "astId": 1399,
        "contract": "contracts/ASIX.sol:ASIX_TOKEN",
        "label": "_marketingFee",
        "offset": 2,
        "slot": "17",
        "type": "t_uint16"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(BuyFee)1384_storage": {
        "encoding": "inplace",
        "label": "struct ASIX_TOKEN.BuyFee",
        "members": [
          {
            "astId": 1381,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "tax",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 1383,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "marketing",
            "offset": 2,
            "slot": "0",
            "type": "t_uint16"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_struct(SellFee)1389_storage": {
        "encoding": "inplace",
        "label": "struct ASIX_TOKEN.SellFee",
        "members": [
          {
            "astId": 1386,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "tax",
            "offset": 0,
            "slot": "0",
            "type": "t_uint16"
          },
          {
            "astId": 1388,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "marketing",
            "offset": 2,
            "slot": "0",
            "type": "t_uint16"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}