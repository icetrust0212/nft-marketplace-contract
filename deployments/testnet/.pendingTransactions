{
  "0x5c2d587e052956bd267f04fc4a3297c10383d926e43394de18b9d93ba8d98ed3": {
    "name": "ASIX_TOKEN",
    "deployment": {
      "_format": "hh-sol-artifact-1",
      "contractName": "ASIX_TOKEN",
      "sourceName": "contracts/ASIX.sol",
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldBuyTax",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldBuyMarketing",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "BuyTax",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "BuyMarketing",
              "type": "uint256"
            }
          ],
          "name": "BuyFeeUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldSellTax",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "oldSellMarketing",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "SellTax",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "SellMarketing",
              "type": "uint256"
            }
          ],
          "name": "SellFeeUpdated",
          "type": "event"
        },
        {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        {
          "inputs": [],
          "name": "_marketingAddress",
          "outputs": [
            {
              "internalType": "address payable",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "buyFee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "tax",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "marketing",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "excludeFromFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "includeInFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "name": "isExcludedFromFee",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "renounceOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "sellFee",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "tax",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "marketing",
              "type": "uint16"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "tax",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "marketing",
              "type": "uint16"
            }
          ],
          "name": "setBuyFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint16",
              "name": "tax",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "marketing",
              "type": "uint16"
            }
          ],
          "name": "setSellFee",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "rAmount",
              "type": "uint256"
            }
          ],
          "name": "tokenFromReflection",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "transferOwnership",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "uniswapV2Pair",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [],
          "name": "uniswapV2Router",
          "outputs": [
            {
              "internalType": "contract IUniswapV2Router02",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "newAddress",
              "type": "address"
            }
          ],
          "name": "updateMarketingWallet",
          "outputs": [],
          "stateMutability": "nonpayable",
          "type": "function"
        },
        {
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "bytecode": "0x60c060405269021e19e0c9bab24000006008819055620000229060001962000437565b62000030906000196200045a565b600955600b80546001600160a01b03191673aba88c90551ae60a1b5f94f677005d382248b8cf17905560408051808201909152600a8082526920a9a4ac102a37b5b2b760b11b60209092019182526200008c91600c9162000391565b5060408051808201909152600480825263082a692b60e31b6020909201918252620000ba91600d9162000391565b50600e805460ff19166009179055348015620000d557600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506009543360009081526002602090815260409182902092909255600f805463ffffffff1990811662070000179091556010805490911662090000179055805163c45a015560e01b81529051737a250d5630b4cf539739df2c5dacb4c659f2488d92839263c45a015592600480830193928290030181865afa158015620001a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c7919062000480565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023b919062000480565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000289573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002af919062000480565b6001600160a01b0390811660a0528116608052600160056000620002db6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526005909352818320805485166001908117909155600b549091168352912080549092161790556200033a3390565b6001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6008546040516200038291815260200190565b60405180910390a350620004ef565b8280546200039f90620004b2565b90600052602060002090601f016020900481019282620003c357600085556200040e565b82601f10620003de57805160ff19168380011785556200040e565b828001600101855582156200040e579182015b828111156200040e578251825591602001919060010190620003f1565b506200041c92915062000420565b5090565b5b808211156200041c576000815560010162000421565b6000826200045557634e487b7160e01b600052601260045260246000fd5b500690565b6000828210156200047b57634e487b7160e01b600052601160045260246000fd5b500390565b6000602082840312156200049357600080fd5b81516001600160a01b0381168114620004ab57600080fd5b9392505050565b600181811c90821680620004c757607f821691505b60208210811415620004e957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051611d1a6200053160003960008181610372015281816110110152818161107c015281816110be01526110fb015260006101fe0152611d1a6000f3fe6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063dd62ed3e11610064578063dd62ed3e146104d5578063ea2f0b371461051b578063ec2a520a1461053b578063f2fde38b1461055b57600080fd5b8063a9059cbb14610475578063aacebbe314610495578063caac7934146104b557600080fd5b806370a08231146103cd578063715018a6146103ed5780637afad249146104025780638da5cb5b1461042257806395d89b4114610440578063a457c2d71461045557600080fd5b80632d8381191161013e578063437823ec11610118578063437823ec14610319578063470624021461033b57806349bd5a5e146103605780635342acb41461039457600080fd5b80632d838119146102b7578063313ce567146102d757806339509351146102f957600080fd5b806306fdde0314610191578063095ea7b3146101bc5780631694505e146101ec57806318160ddd1461023857806323b872dd146102575780632b14ca561461027757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101a661057b565b6040516101b391906119b7565b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611a24565b61060d565b60405190151581526020016101b3565b3480156101f857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b3565b34801561024457600080fd5b506008545b6040519081526020016101b3565b34801561026357600080fd5b506101dc610272366004611a50565b610624565b34801561028357600080fd5b5060105461029c9061ffff808216916201000090041682565b6040805161ffff9384168152929091166020830152016101b3565b3480156102c357600080fd5b506102496102d2366004611a91565b61068d565b3480156102e357600080fd5b50600e5460405160ff90911681526020016101b3565b34801561030557600080fd5b506101dc610314366004611a24565b610716565b34801561032557600080fd5b50610339610334366004611aaa565b61074c565b005b34801561034757600080fd5b50600f5461029c9061ffff808216916201000090041682565b34801561036c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101dc6103af366004611aaa565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103d957600080fd5b506102496103e8366004611aaa565b61079a565b3480156103f957600080fd5b506103396107f9565b34801561040e57600080fd5b5061033961041d366004611ade565b61086d565b34801561042e57600080fd5b506000546001600160a01b0316610220565b34801561044c57600080fd5b506101a6610968565b34801561046157600080fd5b506101dc610470366004611a24565b610977565b34801561048157600080fd5b506101dc610490366004611a24565b6109c6565b3480156104a157600080fd5b506103396104b0366004611aaa565b6109d3565b3480156104c157600080fd5b50600b54610220906001600160a01b031681565b3480156104e157600080fd5b506102496104f0366004611b11565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561052757600080fd5b50610339610536366004611aaa565b610a1f565b34801561054757600080fd5b50610339610556366004611ade565b610a6a565b34801561056757600080fd5b50610339610576366004611aaa565b610b66565b6060600c805461058a90611b4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611b4a565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600061061a338484610c50565b5060015b92915050565b6000610631848484610d74565b610683843361067e85604051806060016040528060288152602001611c98602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610ef9565b610c50565b5060019392505050565b60006009548211156106f95760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b6000610703610f33565b905061070f8382610f56565b9392505050565b3360008181526004602090815260408083206001600160a01b0387168452909152812054909161061a91859061067e9086610f98565b6000546001600160a01b031633146107765760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6001600160a01b03811660009081526006602052604081205460ff16156107d757506001600160a01b031660009081526003602052604090205490565b6001600160a01b03821660009081526002602052604090205461061e9061068d565b6000546001600160a01b031633146108235760405162461bcd60e51b81526004016106f090611b85565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016106f090611b85565b60646108a38284611bd0565b61ffff1611156108e95760405162461bcd60e51b81526020600482015260116024820152700427579466565206578636565642031303607c1b60448201526064016106f0565b600f546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f3d839c4d8187eded7cfbdfb38e8c68ae748d7c674400c8c3b8c837ba2933d1ac9181900360800190a1600f805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6060600d805461058a90611b4a565b600061061a338461067e85604051806060016040528060258152602001611cc0602591393360009081526004602090815260408083206001600160a01b038d1684529091529020549190610ef9565b600061061a338484610d74565b6000546001600160a01b031633146109fd5760405162461bcd60e51b81526004016106f090611b85565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016106f090611b85565b6064610aa08284611bd0565b61ffff161115610ae75760405162461bcd60e51b8152602060048201526012602482015271053656c6c46656520657863656564203130360741b60448201526064016106f0565b6010546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f5453929bc359b94bdd2542a6d8391ca15fe386d74f044db5277328a36de3c6509181900360800190a16010805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b038116610bf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610cb25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f0565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f0565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dd85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f0565b6001600160a01b038216610e3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f0565b60008111610e9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016106f0565b6001600160a01b03831660009081526005602052604090205460019060ff1680610ede57506001600160a01b03831660009081526005602052604090205460ff165b15610ee7575060005b610ef384848484610ff7565b50505050565b60008184841115610f1d5760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611bf6565b95945050505050565b6000806000610f406112a3565b9092509050610f4f8282610f56565b9250505090565b600061070f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600080610fa58385611c0d565b90508381101561070f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106f0565b801561113d5761100f6011805463ffffffff19169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316141561107a5761107a600f54601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110bc576110bc611453565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415801561113057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b1561113d5761113d611453565b6001600160a01b03841660009081526006602052604090205460ff16801561117e57506001600160a01b03831660009081526006602052604090205460ff16155b156111935761118e848484611481565b611291565b6001600160a01b03841660009081526006602052604090205460ff161580156111d457506001600160a01b03831660009081526006602052604090205460ff165b156111e45761118e8484846115ba565b6001600160a01b03841660009081526006602052604090205460ff1615801561122657506001600160a01b03831660009081526006602052604090205460ff16155b156112365761118e848484611671565b6001600160a01b03841660009081526006602052604090205460ff16801561127657506001600160a01b03831660009081526006602052604090205460ff165b156112865761118e8484846116c3565b611291848484611671565b610ef36011805463ffffffff19169055565b6009546008546000918291825b6007548110156113f5578260026000600784815481106112d2576112d2611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061133d575081600360006007848154811061131657611316611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561135357600954600854945094505050509091565b611399600260006007848154811061136d5761136d611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611740565b92506113e160036000600784815481106113b5576113b5611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611740565b9150806113ed81611c3b565b9150506112b0565b5060085460095461140591610f56565b82101561141c576009546008549350935050509091565b90939092509050565b600081836114465760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611c56565b601054601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b600080600061148f84611782565b92509250925060008060006114ad8786866114a8610f33565b6117c4565b6001600160a01b038c1660009081526003602052604090205492955090935091506114d89088611740565b6001600160a01b038a166000908152600360209081526040808320939093556002905220546115079084611740565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115369083610f98565b6001600160a01b03891660009081526002602052604090205561155884611814565b61156281866118d4565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516115a791815260200190565b60405180910390a3505050505050505050565b60008060006115c884611782565b92509250925060008060006115e18786866114a8610f33565b6001600160a01b038c16600090815260026020526040902054929550909350915061160c9084611740565b6001600160a01b03808b16600090815260026020908152604080832094909455918b168152600390915220546116429087610f98565b6001600160a01b0389166000908152600360209081526040808320939093556002905220546115369083610f98565b600080600061167f84611782565b92509250925060008060006116988786866114a8610f33565b6001600160a01b038c1660009081526002602052604090205492955090935091506115079084611740565b60008060006116d184611782565b92509250925060008060006116ea8786866114a8610f33565b6001600160a01b038c1660009081526003602052604090205492955090935091506117159088611740565b6001600160a01b038a1660009081526003602090815260408083209390935560029052205461160c90845b600061070f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ef9565b600080600080611791856118f8565b9050600061179e8661191a565b905060006117b6826117b08986611740565b90611740565b979296509094509092505050565b60008080806117d38886611938565b905060006117e18887611938565b905060006117ef8888611938565b90506000611801826117b08686611740565b939b939a50919850919650505050505050565b600061181e610f33565b9050600061182c8383611938565b600b546001600160a01b03166000908152600260205260409020549091506118549082610f98565b600b80546001600160a01b03908116600090815260026020908152604080832095909555925490911681526006909152205460ff16156118cf57600b546001600160a01b03166000908152600360205260409020546118b39084610f98565b600b546001600160a01b03166000908152600360205260409020555b505050565b6009546118e19083611740565b600955600a546118f19082610f98565b600a555050565b60115460009061061e9060649061191490859061ffff16611938565b90610f56565b60115460009061061e9060649061191490859062010000900461ffff165b6000826119475750600061061e565b60006119538385611c78565b9050826119608583611c56565b1461070f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106f0565b600060208083528351808285015260005b818110156119e4578581018301518582016040015282016119c8565b818111156119f6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060408385031215611a3757600080fd5b8235611a4281611a0c565b946020939093013593505050565b600080600060608486031215611a6557600080fd5b8335611a7081611a0c565b92506020840135611a8081611a0c565b929592945050506040919091013590565b600060208284031215611aa357600080fd5b5035919050565b600060208284031215611abc57600080fd5b813561070f81611a0c565b803561ffff81168114611ad957600080fd5b919050565b60008060408385031215611af157600080fd5b611afa83611ac7565b9150611b0860208401611ac7565b90509250929050565b60008060408385031215611b2457600080fd5b8235611b2f81611a0c565b91506020830135611b3f81611a0c565b809150509250929050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611bed57611bed611bba565b01949350505050565b600082821015611c0857611c08611bba565b500390565b60008219821115611c2057611c20611bba565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c4f57611c4f611bba565b5060010190565b600082611c7357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9257611c92611bba565b50029056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206a61ce250d4ea20d50385394c7170095b998742700698fbe2fa2866ea707f09164736f6c634300080a0033",
      "deployedBytecode": "0x6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063dd62ed3e11610064578063dd62ed3e146104d5578063ea2f0b371461051b578063ec2a520a1461053b578063f2fde38b1461055b57600080fd5b8063a9059cbb14610475578063aacebbe314610495578063caac7934146104b557600080fd5b806370a08231146103cd578063715018a6146103ed5780637afad249146104025780638da5cb5b1461042257806395d89b4114610440578063a457c2d71461045557600080fd5b80632d8381191161013e578063437823ec11610118578063437823ec14610319578063470624021461033b57806349bd5a5e146103605780635342acb41461039457600080fd5b80632d838119146102b7578063313ce567146102d757806339509351146102f957600080fd5b806306fdde0314610191578063095ea7b3146101bc5780631694505e146101ec57806318160ddd1461023857806323b872dd146102575780632b14ca561461027757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101a661057b565b6040516101b391906119b7565b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611a24565b61060d565b60405190151581526020016101b3565b3480156101f857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b3565b34801561024457600080fd5b506008545b6040519081526020016101b3565b34801561026357600080fd5b506101dc610272366004611a50565b610624565b34801561028357600080fd5b5060105461029c9061ffff808216916201000090041682565b6040805161ffff9384168152929091166020830152016101b3565b3480156102c357600080fd5b506102496102d2366004611a91565b61068d565b3480156102e357600080fd5b50600e5460405160ff90911681526020016101b3565b34801561030557600080fd5b506101dc610314366004611a24565b610716565b34801561032557600080fd5b50610339610334366004611aaa565b61074c565b005b34801561034757600080fd5b50600f5461029c9061ffff808216916201000090041682565b34801561036c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101dc6103af366004611aaa565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103d957600080fd5b506102496103e8366004611aaa565b61079a565b3480156103f957600080fd5b506103396107f9565b34801561040e57600080fd5b5061033961041d366004611ade565b61086d565b34801561042e57600080fd5b506000546001600160a01b0316610220565b34801561044c57600080fd5b506101a6610968565b34801561046157600080fd5b506101dc610470366004611a24565b610977565b34801561048157600080fd5b506101dc610490366004611a24565b6109c6565b3480156104a157600080fd5b506103396104b0366004611aaa565b6109d3565b3480156104c157600080fd5b50600b54610220906001600160a01b031681565b3480156104e157600080fd5b506102496104f0366004611b11565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561052757600080fd5b50610339610536366004611aaa565b610a1f565b34801561054757600080fd5b50610339610556366004611ade565b610a6a565b34801561056757600080fd5b50610339610576366004611aaa565b610b66565b6060600c805461058a90611b4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611b4a565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600061061a338484610c50565b5060015b92915050565b6000610631848484610d74565b610683843361067e85604051806060016040528060288152602001611c98602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610ef9565b610c50565b5060019392505050565b60006009548211156106f95760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b6000610703610f33565b905061070f8382610f56565b9392505050565b3360008181526004602090815260408083206001600160a01b0387168452909152812054909161061a91859061067e9086610f98565b6000546001600160a01b031633146107765760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6001600160a01b03811660009081526006602052604081205460ff16156107d757506001600160a01b031660009081526003602052604090205490565b6001600160a01b03821660009081526002602052604090205461061e9061068d565b6000546001600160a01b031633146108235760405162461bcd60e51b81526004016106f090611b85565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016106f090611b85565b60646108a38284611bd0565b61ffff1611156108e95760405162461bcd60e51b81526020600482015260116024820152700427579466565206578636565642031303607c1b60448201526064016106f0565b600f546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f3d839c4d8187eded7cfbdfb38e8c68ae748d7c674400c8c3b8c837ba2933d1ac9181900360800190a1600f805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6060600d805461058a90611b4a565b600061061a338461067e85604051806060016040528060258152602001611cc0602591393360009081526004602090815260408083206001600160a01b038d1684529091529020549190610ef9565b600061061a338484610d74565b6000546001600160a01b031633146109fd5760405162461bcd60e51b81526004016106f090611b85565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016106f090611b85565b6064610aa08284611bd0565b61ffff161115610ae75760405162461bcd60e51b8152602060048201526012602482015271053656c6c46656520657863656564203130360741b60448201526064016106f0565b6010546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f5453929bc359b94bdd2542a6d8391ca15fe386d74f044db5277328a36de3c6509181900360800190a16010805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b038116610bf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610cb25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f0565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f0565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dd85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f0565b6001600160a01b038216610e3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f0565b60008111610e9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016106f0565b6001600160a01b03831660009081526005602052604090205460019060ff1680610ede57506001600160a01b03831660009081526005602052604090205460ff165b15610ee7575060005b610ef384848484610ff7565b50505050565b60008184841115610f1d5760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611bf6565b95945050505050565b6000806000610f406112a3565b9092509050610f4f8282610f56565b9250505090565b600061070f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600080610fa58385611c0d565b90508381101561070f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106f0565b801561113d5761100f6011805463ffffffff19169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316141561107a5761107a600f54601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110bc576110bc611453565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415801561113057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b1561113d5761113d611453565b6001600160a01b03841660009081526006602052604090205460ff16801561117e57506001600160a01b03831660009081526006602052604090205460ff16155b156111935761118e848484611481565b611291565b6001600160a01b03841660009081526006602052604090205460ff161580156111d457506001600160a01b03831660009081526006602052604090205460ff165b156111e45761118e8484846115ba565b6001600160a01b03841660009081526006602052604090205460ff1615801561122657506001600160a01b03831660009081526006602052604090205460ff16155b156112365761118e848484611671565b6001600160a01b03841660009081526006602052604090205460ff16801561127657506001600160a01b03831660009081526006602052604090205460ff165b156112865761118e8484846116c3565b611291848484611671565b610ef36011805463ffffffff19169055565b6009546008546000918291825b6007548110156113f5578260026000600784815481106112d2576112d2611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061133d575081600360006007848154811061131657611316611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561135357600954600854945094505050509091565b611399600260006007848154811061136d5761136d611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611740565b92506113e160036000600784815481106113b5576113b5611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611740565b9150806113ed81611c3b565b9150506112b0565b5060085460095461140591610f56565b82101561141c576009546008549350935050509091565b90939092509050565b600081836114465760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611c56565b601054601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b600080600061148f84611782565b92509250925060008060006114ad8786866114a8610f33565b6117c4565b6001600160a01b038c1660009081526003602052604090205492955090935091506114d89088611740565b6001600160a01b038a166000908152600360209081526040808320939093556002905220546115079084611740565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115369083610f98565b6001600160a01b03891660009081526002602052604090205561155884611814565b61156281866118d4565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516115a791815260200190565b60405180910390a3505050505050505050565b60008060006115c884611782565b92509250925060008060006115e18786866114a8610f33565b6001600160a01b038c16600090815260026020526040902054929550909350915061160c9084611740565b6001600160a01b03808b16600090815260026020908152604080832094909455918b168152600390915220546116429087610f98565b6001600160a01b0389166000908152600360209081526040808320939093556002905220546115369083610f98565b600080600061167f84611782565b92509250925060008060006116988786866114a8610f33565b6001600160a01b038c1660009081526002602052604090205492955090935091506115079084611740565b60008060006116d184611782565b92509250925060008060006116ea8786866114a8610f33565b6001600160a01b038c1660009081526003602052604090205492955090935091506117159088611740565b6001600160a01b038a1660009081526003602090815260408083209390935560029052205461160c90845b600061070f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ef9565b600080600080611791856118f8565b9050600061179e8661191a565b905060006117b6826117b08986611740565b90611740565b979296509094509092505050565b60008080806117d38886611938565b905060006117e18887611938565b905060006117ef8888611938565b90506000611801826117b08686611740565b939b939a50919850919650505050505050565b600061181e610f33565b9050600061182c8383611938565b600b546001600160a01b03166000908152600260205260409020549091506118549082610f98565b600b80546001600160a01b03908116600090815260026020908152604080832095909555925490911681526006909152205460ff16156118cf57600b546001600160a01b03166000908152600360205260409020546118b39084610f98565b600b546001600160a01b03166000908152600360205260409020555b505050565b6009546118e19083611740565b600955600a546118f19082610f98565b600a555050565b60115460009061061e9060649061191490859061ffff16611938565b90610f56565b60115460009061061e9060649061191490859062010000900461ffff165b6000826119475750600061061e565b60006119538385611c78565b9050826119608583611c56565b1461070f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106f0565b600060208083528351808285015260005b818110156119e4578581018301518582016040015282016119c8565b818111156119f6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060408385031215611a3757600080fd5b8235611a4281611a0c565b946020939093013593505050565b600080600060608486031215611a6557600080fd5b8335611a7081611a0c565b92506020840135611a8081611a0c565b929592945050506040919091013590565b600060208284031215611aa357600080fd5b5035919050565b600060208284031215611abc57600080fd5b813561070f81611a0c565b803561ffff81168114611ad957600080fd5b919050565b60008060408385031215611af157600080fd5b611afa83611ac7565b9150611b0860208401611ac7565b90509250929050565b60008060408385031215611b2457600080fd5b8235611b2f81611a0c565b91506020830135611b3f81611a0c565b809150509250929050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611bed57611bed611bba565b01949350505050565b600082821015611c0857611c08611bba565b500390565b60008219821115611c2057611c20611bba565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c4f57611c4f611bba565b5060010190565b600082611c7357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9257611c92611bba565b50029056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206a61ce250d4ea20d50385394c7170095b998742700698fbe2fa2866ea707f09164736f6c634300080a0033",
      "linkReferences": {},
      "deployedLinkReferences": {},
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
          },
          "approve(address,uint256)": {
            "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
          },
          "balanceOf(address)": {
            "details": "Returns the amount of tokens owned by `account`."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "transfer(address,uint256)": {
            "details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "transferFrom(address,address,uint256)": {
            "details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "evm": {
        "bytecode": {
          "functionDebugData": {
            "@_1499": {
              "entryPoint": null,
              "id": 1499,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_530": {
              "entryPoint": null,
              "id": 530,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_msgSender_281": {
              "entryPoint": null,
              "id": 281,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@owner_539": {
              "entryPoint": null,
              "id": 539,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address_fromMemory": {
              "entryPoint": 1152,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_uint256": {
              "entryPoint": 1114,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "extract_byte_array_length": {
              "entryPoint": 1202,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "mod_t_uint256": {
              "entryPoint": 1079,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:1623:1",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:1",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "52:171:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "83:111:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "104:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "111:3:1",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "116:10:1",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "107:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "107:20:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "97:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "97:31:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "97:31:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "148:1:1",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "151:4:1",
                                      "type": "",
                                      "value": "0x12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "141:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "141:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "141:15:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "176:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "179:4:1",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "169:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "169:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "169:15:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "72:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "65:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "65:9:1"
                          },
                          "nodeType": "YulIf",
                          "src": "62:132:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "203:14:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "212:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "215:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "mod",
                              "nodeType": "YulIdentifier",
                              "src": "208:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "208:9:1"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "203:1:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "mod_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "37:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "40:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "46:1:1",
                        "type": ""
                      }
                    ],
                    "src": "14:209:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "277:173:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "307:111:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "328:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "335:3:1",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "340:10:1",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "331:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "331:20:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "321:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "321:31:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "321:31:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "372:1:1",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "375:4:1",
                                      "type": "",
                                      "value": "0x11"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "365:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "365:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "365:15:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "400:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "403:4:1",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "393:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "393:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "393:15:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "293:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "296:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "290:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "290:8:1"
                          },
                          "nodeType": "YulIf",
                          "src": "287:131:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "427:17:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "439:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "442:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "435:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "435:9:1"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "427:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "259:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "262:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "268:4:1",
                        "type": ""
                      }
                    ],
                    "src": "228:222:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "536:209:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "582:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "591:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "594:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "584:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "584:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "584:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "557:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "566:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "553:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "553:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "578:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "549:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "549:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "546:52:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "607:29:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "626:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "620:5:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "620:16:1"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "611:5:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "699:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "708:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "711:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "701:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "701:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "701:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "658:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "669:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "684:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "689:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "680:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "680:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "693:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "676:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "676:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "665:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "665:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "655:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "655:42:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "648:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "648:50:1"
                          },
                          "nodeType": "YulIf",
                          "src": "645:70:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "724:15:1",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "734:5:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "724:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address_fromMemory",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "502:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "513:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "525:6:1",
                        "type": ""
                      }
                    ],
                    "src": "455:290:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "879:175:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "889:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "901:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "912:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "897:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "897:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "889:4:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "924:29:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "942:3:1",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "947:1:1",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "938:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "938:11:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "951:1:1",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "934:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "934:19:1"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "928:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "969:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "984:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "992:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "980:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "980:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "962:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "962:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "962:34:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1016:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1027:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1012:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1012:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1036:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1044:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1032:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1032:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1005:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1005:43:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1005:43:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "840:9:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "851:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "859:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "870:4:1",
                        "type": ""
                      }
                    ],
                    "src": "750:304:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1160:76:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1170:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1182:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1193:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1178:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1178:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1170:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1212:9:1"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1223:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1205:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1205:25:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1205:25:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1129:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1140:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "1151:4:1",
                        "type": ""
                      }
                    ],
                    "src": "1059:177:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1296:325:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1306:22:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1320:1:1",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "1323:4:1"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nodeType": "YulIdentifier",
                              "src": "1316:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1316:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1306:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1337:38:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "1367:4:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1373:1:1",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "1363:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1363:12:1"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "1341:18:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1414:31:1",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "1416:27:1",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "1430:6:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1438:4:1",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "1426:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1426:17:1"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1416:6:1"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "1394:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1387:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1387:26:1"
                          },
                          "nodeType": "YulIf",
                          "src": "1384:61:1"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1504:111:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1525:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1532:3:1",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1537:10:1",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "1528:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1528:20:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "1518:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1518:31:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1518:31:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1569:1:1",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1572:4:1",
                                      "type": "",
                                      "value": "0x22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "1562:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1562:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1562:15:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1597:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1600:4:1",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1590:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1590:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1590:15:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "1460:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1483:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1491:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1480:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1480:14:1"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "1457:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1457:38:1"
                          },
                          "nodeType": "YulIf",
                          "src": "1454:161:1"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "1276:4:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "1285:6:1",
                        "type": ""
                      }
                    ],
                    "src": "1241:380:1"
                  }
                ]
              },
              "contents": "{\n    { }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := mod(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        diff := sub(x, y)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
              "id": 1,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "linkReferences": {},
          "object": "60c060405269021e19e0c9bab24000006008819055620000229060001962000437565b62000030906000196200045a565b600955600b80546001600160a01b03191673aba88c90551ae60a1b5f94f677005d382248b8cf17905560408051808201909152600a8082526920a9a4ac102a37b5b2b760b11b60209092019182526200008c91600c9162000391565b5060408051808201909152600480825263082a692b60e31b6020909201918252620000ba91600d9162000391565b50600e805460ff19166009179055348015620000d557600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506009543360009081526002602090815260409182902092909255600f805463ffffffff1990811662070000179091556010805490911662090000179055805163c45a015560e01b81529051737a250d5630b4cf539739df2c5dacb4c659f2488d92839263c45a015592600480830193928290030181865afa158015620001a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c7919062000480565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023b919062000480565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000289573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002af919062000480565b6001600160a01b0390811660a0528116608052600160056000620002db6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526005909352818320805485166001908117909155600b549091168352912080549092161790556200033a3390565b6001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6008546040516200038291815260200190565b60405180910390a350620004ef565b8280546200039f90620004b2565b90600052602060002090601f016020900481019282620003c357600085556200040e565b82601f10620003de57805160ff19168380011785556200040e565b828001600101855582156200040e579182015b828111156200040e578251825591602001919060010190620003f1565b506200041c92915062000420565b5090565b5b808211156200041c576000815560010162000421565b6000826200045557634e487b7160e01b600052601260045260246000fd5b500690565b6000828210156200047b57634e487b7160e01b600052601160045260246000fd5b500390565b6000602082840312156200049357600080fd5b81516001600160a01b0381168114620004ab57600080fd5b9392505050565b600181811c90821680620004c757607f821691505b60208210811415620004e957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051611d1a6200053160003960008181610372015281816110110152818161107c015281816110be01526110fb015260006101fe0152611d1a6000f3fe6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063dd62ed3e11610064578063dd62ed3e146104d5578063ea2f0b371461051b578063ec2a520a1461053b578063f2fde38b1461055b57600080fd5b8063a9059cbb14610475578063aacebbe314610495578063caac7934146104b557600080fd5b806370a08231146103cd578063715018a6146103ed5780637afad249146104025780638da5cb5b1461042257806395d89b4114610440578063a457c2d71461045557600080fd5b80632d8381191161013e578063437823ec11610118578063437823ec14610319578063470624021461033b57806349bd5a5e146103605780635342acb41461039457600080fd5b80632d838119146102b7578063313ce567146102d757806339509351146102f957600080fd5b806306fdde0314610191578063095ea7b3146101bc5780631694505e146101ec57806318160ddd1461023857806323b872dd146102575780632b14ca561461027757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101a661057b565b6040516101b391906119b7565b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611a24565b61060d565b60405190151581526020016101b3565b3480156101f857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b3565b34801561024457600080fd5b506008545b6040519081526020016101b3565b34801561026357600080fd5b506101dc610272366004611a50565b610624565b34801561028357600080fd5b5060105461029c9061ffff808216916201000090041682565b6040805161ffff9384168152929091166020830152016101b3565b3480156102c357600080fd5b506102496102d2366004611a91565b61068d565b3480156102e357600080fd5b50600e5460405160ff90911681526020016101b3565b34801561030557600080fd5b506101dc610314366004611a24565b610716565b34801561032557600080fd5b50610339610334366004611aaa565b61074c565b005b34801561034757600080fd5b50600f5461029c9061ffff808216916201000090041682565b34801561036c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101dc6103af366004611aaa565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103d957600080fd5b506102496103e8366004611aaa565b61079a565b3480156103f957600080fd5b506103396107f9565b34801561040e57600080fd5b5061033961041d366004611ade565b61086d565b34801561042e57600080fd5b506000546001600160a01b0316610220565b34801561044c57600080fd5b506101a6610968565b34801561046157600080fd5b506101dc610470366004611a24565b610977565b34801561048157600080fd5b506101dc610490366004611a24565b6109c6565b3480156104a157600080fd5b506103396104b0366004611aaa565b6109d3565b3480156104c157600080fd5b50600b54610220906001600160a01b031681565b3480156104e157600080fd5b506102496104f0366004611b11565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561052757600080fd5b50610339610536366004611aaa565b610a1f565b34801561054757600080fd5b50610339610556366004611ade565b610a6a565b34801561056757600080fd5b50610339610576366004611aaa565b610b66565b6060600c805461058a90611b4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611b4a565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600061061a338484610c50565b5060015b92915050565b6000610631848484610d74565b610683843361067e85604051806060016040528060288152602001611c98602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610ef9565b610c50565b5060019392505050565b60006009548211156106f95760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b6000610703610f33565b905061070f8382610f56565b9392505050565b3360008181526004602090815260408083206001600160a01b0387168452909152812054909161061a91859061067e9086610f98565b6000546001600160a01b031633146107765760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6001600160a01b03811660009081526006602052604081205460ff16156107d757506001600160a01b031660009081526003602052604090205490565b6001600160a01b03821660009081526002602052604090205461061e9061068d565b6000546001600160a01b031633146108235760405162461bcd60e51b81526004016106f090611b85565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016106f090611b85565b60646108a38284611bd0565b61ffff1611156108e95760405162461bcd60e51b81526020600482015260116024820152700427579466565206578636565642031303607c1b60448201526064016106f0565b600f546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f3d839c4d8187eded7cfbdfb38e8c68ae748d7c674400c8c3b8c837ba2933d1ac9181900360800190a1600f805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6060600d805461058a90611b4a565b600061061a338461067e85604051806060016040528060258152602001611cc0602591393360009081526004602090815260408083206001600160a01b038d1684529091529020549190610ef9565b600061061a338484610d74565b6000546001600160a01b031633146109fd5760405162461bcd60e51b81526004016106f090611b85565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016106f090611b85565b6064610aa08284611bd0565b61ffff161115610ae75760405162461bcd60e51b8152602060048201526012602482015271053656c6c46656520657863656564203130360741b60448201526064016106f0565b6010546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f5453929bc359b94bdd2542a6d8391ca15fe386d74f044db5277328a36de3c6509181900360800190a16010805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b038116610bf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610cb25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f0565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f0565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dd85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f0565b6001600160a01b038216610e3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f0565b60008111610e9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016106f0565b6001600160a01b03831660009081526005602052604090205460019060ff1680610ede57506001600160a01b03831660009081526005602052604090205460ff165b15610ee7575060005b610ef384848484610ff7565b50505050565b60008184841115610f1d5760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611bf6565b95945050505050565b6000806000610f406112a3565b9092509050610f4f8282610f56565b9250505090565b600061070f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600080610fa58385611c0d565b90508381101561070f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106f0565b801561113d5761100f6011805463ffffffff19169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316141561107a5761107a600f54601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110bc576110bc611453565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415801561113057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b1561113d5761113d611453565b6001600160a01b03841660009081526006602052604090205460ff16801561117e57506001600160a01b03831660009081526006602052604090205460ff16155b156111935761118e848484611481565b611291565b6001600160a01b03841660009081526006602052604090205460ff161580156111d457506001600160a01b03831660009081526006602052604090205460ff165b156111e45761118e8484846115ba565b6001600160a01b03841660009081526006602052604090205460ff1615801561122657506001600160a01b03831660009081526006602052604090205460ff16155b156112365761118e848484611671565b6001600160a01b03841660009081526006602052604090205460ff16801561127657506001600160a01b03831660009081526006602052604090205460ff165b156112865761118e8484846116c3565b611291848484611671565b610ef36011805463ffffffff19169055565b6009546008546000918291825b6007548110156113f5578260026000600784815481106112d2576112d2611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061133d575081600360006007848154811061131657611316611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561135357600954600854945094505050509091565b611399600260006007848154811061136d5761136d611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611740565b92506113e160036000600784815481106113b5576113b5611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611740565b9150806113ed81611c3b565b9150506112b0565b5060085460095461140591610f56565b82101561141c576009546008549350935050509091565b90939092509050565b600081836114465760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611c56565b601054601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b600080600061148f84611782565b92509250925060008060006114ad8786866114a8610f33565b6117c4565b6001600160a01b038c1660009081526003602052604090205492955090935091506114d89088611740565b6001600160a01b038a166000908152600360209081526040808320939093556002905220546115079084611740565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115369083610f98565b6001600160a01b03891660009081526002602052604090205561155884611814565b61156281866118d4565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516115a791815260200190565b60405180910390a3505050505050505050565b60008060006115c884611782565b92509250925060008060006115e18786866114a8610f33565b6001600160a01b038c16600090815260026020526040902054929550909350915061160c9084611740565b6001600160a01b03808b16600090815260026020908152604080832094909455918b168152600390915220546116429087610f98565b6001600160a01b0389166000908152600360209081526040808320939093556002905220546115369083610f98565b600080600061167f84611782565b92509250925060008060006116988786866114a8610f33565b6001600160a01b038c1660009081526002602052604090205492955090935091506115079084611740565b60008060006116d184611782565b92509250925060008060006116ea8786866114a8610f33565b6001600160a01b038c1660009081526003602052604090205492955090935091506117159088611740565b6001600160a01b038a1660009081526003602090815260408083209390935560029052205461160c90845b600061070f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ef9565b600080600080611791856118f8565b9050600061179e8661191a565b905060006117b6826117b08986611740565b90611740565b979296509094509092505050565b60008080806117d38886611938565b905060006117e18887611938565b905060006117ef8888611938565b90506000611801826117b08686611740565b939b939a50919850919650505050505050565b600061181e610f33565b9050600061182c8383611938565b600b546001600160a01b03166000908152600260205260409020549091506118549082610f98565b600b80546001600160a01b03908116600090815260026020908152604080832095909555925490911681526006909152205460ff16156118cf57600b546001600160a01b03166000908152600360205260409020546118b39084610f98565b600b546001600160a01b03166000908152600360205260409020555b505050565b6009546118e19083611740565b600955600a546118f19082610f98565b600a555050565b60115460009061061e9060649061191490859061ffff16611938565b90610f56565b60115460009061061e9060649061191490859062010000900461ffff165b6000826119475750600061061e565b60006119538385611c78565b9050826119608583611c56565b1461070f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106f0565b600060208083528351808285015260005b818110156119e4578581018301518582016040015282016119c8565b818111156119f6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060408385031215611a3757600080fd5b8235611a4281611a0c565b946020939093013593505050565b600080600060608486031215611a6557600080fd5b8335611a7081611a0c565b92506020840135611a8081611a0c565b929592945050506040919091013590565b600060208284031215611aa357600080fd5b5035919050565b600060208284031215611abc57600080fd5b813561070f81611a0c565b803561ffff81168114611ad957600080fd5b919050565b60008060408385031215611af157600080fd5b611afa83611ac7565b9150611b0860208401611ac7565b90509250929050565b60008060408385031215611b2457600080fd5b8235611b2f81611a0c565b91506020830135611b3f81611a0c565b809150509250929050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611bed57611bed611bba565b01949350505050565b600082821015611c0857611c08611bba565b500390565b60008219821115611c2057611c20611bba565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c4f57611c4f611bba565b5060010190565b600082611c7357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9257611c92611bba565b50029056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206a61ce250d4ea20d50385394c7170095b998742700698fbe2fa2866ea707f09164736f6c634300080a0033",
          "opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE PUSH10 0x21E19E0C9BAB2400000 PUSH1 0x8 DUP2 SWAP1 SSTORE PUSH3 0x22 SWAP1 PUSH1 0x0 NOT PUSH3 0x437 JUMP JUMPDEST PUSH3 0x30 SWAP1 PUSH1 0x0 NOT PUSH3 0x45A JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH20 0xABA88C90551AE60A1B5F94F677005D382248B8CF OR SWAP1 SSTORE PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xA DUP1 DUP3 MSTORE PUSH10 0x20A9A4AC102A37B5B2B7 PUSH1 0xB1 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0x8C SWAP2 PUSH1 0xC SWAP2 PUSH3 0x391 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x4 DUP1 DUP3 MSTORE PUSH4 0x82A692B PUSH1 0xE3 SHL PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 DUP3 MSTORE PUSH3 0xBA SWAP2 PUSH1 0xD SWAP2 PUSH3 0x391 JUMP JUMPDEST POP PUSH1 0xE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x9 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0xD5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 DUP3 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x9 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xF DUP1 SLOAD PUSH4 0xFFFFFFFF NOT SWAP1 DUP2 AND PUSH3 0x70000 OR SWAP1 SWAP2 SSTORE PUSH1 0x10 DUP1 SLOAD SWAP1 SWAP2 AND PUSH3 0x90000 OR SWAP1 SSTORE DUP1 MLOAD PUSH4 0xC45A0155 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH20 0x7A250D5630B4CF539739DF2C5DACB4C659F2488D SWAP3 DUP4 SWAP3 PUSH4 0xC45A0155 SWAP3 PUSH1 0x4 DUP1 DUP4 ADD SWAP4 SWAP3 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x1A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1C7 SWAP2 SWAP1 PUSH3 0x480 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xC9C65396 ADDRESS DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xAD5C4648 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x215 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x23B SWAP2 SWAP1 PUSH3 0x480 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH3 0x289 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2AF SWAP2 SWAP1 PUSH3 0x480 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xA0 MSTORE DUP2 AND PUSH1 0x80 MSTORE PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 PUSH3 0x2DB PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP6 ISZERO ISZERO PUSH1 0xFF NOT SWAP7 DUP8 AND OR SWAP1 SSTORE ADDRESS DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP4 MSTORE DUP2 DUP4 KECCAK256 DUP1 SLOAD DUP6 AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0xB SLOAD SWAP1 SWAP2 AND DUP4 MSTORE SWAP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH3 0x33A CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH3 0x382 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH3 0x4EF JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x39F SWAP1 PUSH3 0x4B2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x3C3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x40E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x3DE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x40E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x40E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x40E JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x3F1 JUMP JUMPDEST POP PUSH3 0x41C SWAP3 SWAP2 POP PUSH3 0x420 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x41C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x421 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x455 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH3 0x47B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x493 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x4C7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x1D1A PUSH3 0x531 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x372 ADD MSTORE DUP2 DUP2 PUSH2 0x1011 ADD MSTORE DUP2 DUP2 PUSH2 0x107C ADD MSTORE DUP2 DUP2 PUSH2 0x10BE ADD MSTORE PUSH2 0x10FB ADD MSTORE PUSH1 0x0 PUSH2 0x1FE ADD MSTORE PUSH2 0x1D1A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xEC2A520A EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xAACEBBE3 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xCAAC7934 EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x7AFAD249 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D838119 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x437823EC GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x47062402 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D838119 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x29C SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x29C SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x7F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x968 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x220 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD PUSH2 0x58A SWAP1 PUSH2 0x1B4A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B6 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x603 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x603 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A CALLER DUP5 DUP5 PUSH2 0xC50 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x631 DUP5 DUP5 DUP5 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x683 DUP5 CALLER PUSH2 0x67E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C98 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x703 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH2 0x70F DUP4 DUP3 PUSH2 0xF56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x61A SWAP2 DUP6 SWAP1 PUSH2 0x67E SWAP1 DUP7 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x61E SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x8A3 DUP3 DUP5 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x427579466565206578636565642031303 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH3 0x10000 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 DUP4 AND DUP2 DUP4 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH32 0x3D839C4D8187EDED7CFBDFB38E8C68AE748D7C674400C8C3B8C837BA2933D1AC SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0xF DUP1 SLOAD PUSH2 0xFFFF SWAP3 DUP4 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x58A SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A CALLER DUP5 PUSH2 0x67E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC0 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A CALLER DUP5 DUP5 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xAA0 DUP3 DUP5 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53656C6C466565206578636565642031303 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH3 0x10000 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 DUP4 AND DUP2 DUP4 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH32 0x5453929BC359B94BDD2542A6D8391CA15FE386D74F044DB5277328A36DE3C650 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x10 DUP1 SLOAD PUSH2 0xFFFF SWAP3 DUP4 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xEDE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xEE7 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0xEF3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xF2A DUP5 DUP7 PUSH2 0x1BF6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF40 PUSH2 0x12A3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xF4F DUP3 DUP3 PUSH2 0xF56 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFA5 DUP4 DUP6 PUSH2 0x1C0D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x113D JUMPI PUSH2 0x100F PUSH1 0x11 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x107A JUMPI PUSH2 0x107A PUSH1 0xF SLOAD PUSH1 0x11 DUP1 SLOAD PUSH3 0x10000 DUP1 DUP5 DIV PUSH2 0xFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BC PUSH2 0x1453 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1130 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x113D JUMPI PUSH2 0x113D PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x117E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1193 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1481 JUMP JUMPDEST PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x11D4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11E4 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1226 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1236 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1276 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1286 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x1291 DUP5 DUP5 DUP5 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0xEF3 PUSH1 0x11 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x13F5 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12D2 JUMPI PUSH2 0x12D2 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x133D JUMPI POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1316 JUMPI PUSH2 0x1316 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1353 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x2 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x136D JUMPI PUSH2 0x136D PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH2 0x1740 JUMP JUMPDEST SWAP3 POP PUSH2 0x13E1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x13B5 JUMPI PUSH2 0x13B5 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x1740 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x13ED DUP2 PUSH2 0x1C3B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12B0 JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x1405 SWAP2 PUSH2 0xF56 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x141C JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xF2A DUP5 DUP7 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x11 DUP1 SLOAD PUSH3 0x10000 DUP1 DUP5 DIV PUSH2 0xFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x148F DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x14AD DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x14D8 SWAP1 DUP9 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1507 SWAP1 DUP5 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1536 SWAP1 DUP4 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1558 DUP5 PUSH2 0x1814 JUMP JUMPDEST PUSH2 0x1562 DUP2 DUP7 PUSH2 0x18D4 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP9 PUSH1 0x40 MLOAD PUSH2 0x15A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x15C8 DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x15E1 DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x160C SWAP1 DUP5 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP12 AND DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x1642 SWAP1 DUP8 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1536 SWAP1 DUP4 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167F DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1698 DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x1507 SWAP1 DUP5 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16D1 DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16EA DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x1715 SWAP1 DUP9 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x160C SWAP1 DUP5 JUMPDEST PUSH1 0x0 PUSH2 0x70F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1791 DUP6 PUSH2 0x18F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x179E DUP7 PUSH2 0x191A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17B6 DUP3 PUSH2 0x17B0 DUP10 DUP7 PUSH2 0x1740 JUMP JUMPDEST SWAP1 PUSH2 0x1740 JUMP JUMPDEST SWAP8 SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x17D3 DUP9 DUP7 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17E1 DUP9 DUP8 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17EF DUP9 DUP9 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1801 DUP3 PUSH2 0x17B0 DUP7 DUP7 PUSH2 0x1740 JUMP JUMPDEST SWAP4 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181E PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x182C DUP4 DUP4 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1854 SWAP1 DUP3 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18CF JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18B3 SWAP1 DUP5 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x18E1 SWAP1 DUP4 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xA SLOAD PUSH2 0x18F1 SWAP1 DUP3 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0xA SSTORE POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x61E SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1914 SWAP1 DUP6 SWAP1 PUSH2 0xFFFF AND PUSH2 0x1938 JUMP JUMPDEST SWAP1 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x61E SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1914 SWAP1 DUP6 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1947 JUMPI POP PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP4 DUP6 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1960 DUP6 DUP4 PUSH2 0x1C56 JUMP JUMPDEST EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19E4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x19C8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x19F6 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1A42 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A70 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A80 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x70F DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AFA DUP4 PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 PUSH1 0x20 DUP5 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B2F DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B3F DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1BED JUMPI PUSH2 0x1BED PUSH2 0x1BBA JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C08 PUSH2 0x1BBA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C20 PUSH2 0x1BBA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4F PUSH2 0x1BBA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C92 PUSH2 0x1BBA JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 PUSH11 0x61CE250D4EA20D50385394 0xC7 OR STOP SWAP6 0xB9 SWAP9 PUSH21 0x2700698FBE2FA2866EA707F09164736F6C63430008 EXP STOP CALLER ",
          "sourceMap": "27647:16103:0:-:0;;;28167:19;28141:45;;;;28227:13;;-1:-1:-1;;28227:13:0;:::i;:::-;28220:21;;-1:-1:-1;;28220:21:0;:::i;:::-;28193:49;;28284:112;;;-1:-1:-1;;;;;;28284:112:0;28352:42;28284:112;;;28405:35;;;;;;;;;;;;;-1:-1:-1;;;28405:35:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28447:31:0;;;;;;;;;;;;;-1:-1:-1;;;28447:31:0;;;;;;;;;;;;:::i;:::-;-1:-1:-1;28485:27:0;;;-1:-1:-1;;28485:27:0;28511:1;28485:27;;;28907:947;;;;;;;;;-1:-1:-1;16738:17:0;16781:18;;-1:-1:-1;;;;;;16781:18:0;9033:10;16781:18;;;;;16815:43;;9033:10;;;;16815:43;;16738:17;;16815:43;-1:-1:-1;28956:7:0;;9033:10;28932:21;;;;:7;:21;;;;;;;;;:31;;;;28976:6;:14;;-1:-1:-1;;29001:20:0;;;;;;;;29034:7;:15;;29060:21;;;;;;;29376:26;;-1:-1:-1;;;29376:26:0;;;;29224:42;;;;29376:24;;:26;;;;;28932:21;29376:26;;;;;29224:42;29376:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;29358:70:0;;29437:4;29444:16;-1:-1:-1;;;;;29444:21:0;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;29358:110;;-1:-1:-1;;;;;;29358:110:0;;;;;;;-1:-1:-1;;;;;980:15:1;;;29358:110:0;;;962:34:1;1032:15;;1012:18;;;1005:43;897:18;;29358:110:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;29342:126:0;;;;;29532:34;;;;29675:4;29645:18;:27;29664:7;16985;17012:6;-1:-1:-1;;;;;17012:6:0;;16947:79;29664:7;-1:-1:-1;;;;;29645:27:0;;;;;;;;;;;;;;;;;-1:-1:-1;29645:27:0;;;:34;;;;;-1:-1:-1;;29645:34:0;;;;;;29717:4;29690:33;;:18;:33;;;;;;:40;;;;29645:34;29690:40;;;;;;29760:17;;;;;29741:37;;;;:44;;;;;;;;29824:12;9033:10;;8937:115;29824:12;-1:-1:-1;;;;;29803:43:0;29820:1;-1:-1:-1;;;;;29803:43:0;;29838:7;;29803:43;;;;1205:25:1;;1193:2;1178:18;;1059:177;29803:43:0;;;;;;;;28921:933;27647:16103;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27647:16103:0;;;-1:-1:-1;27647:16103:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:209:1;46:1;72;62:132;;116:10;111:3;107:20;104:1;97:31;151:4;148:1;141:15;179:4;176:1;169:15;62:132;-1:-1:-1;208:9:1;;14:209::o;228:222::-;268:4;296:1;293;290:8;287:131;;;340:10;335:3;331:20;328:1;321:31;375:4;372:1;365:15;403:4;400:1;393:15;287:131;-1:-1:-1;435:9:1;;228:222::o;455:290::-;525:6;578:2;566:9;557:7;553:23;549:32;546:52;;;594:1;591;584:12;546:52;620:16;;-1:-1:-1;;;;;665:31:1;;655:42;;645:70;;711:1;708;701:12;645:70;734:5;455:290;-1:-1:-1;;;455:290:1:o;1241:380::-;1320:1;1316:12;;;;1363;;;1384:61;;1438:4;1430:6;1426:17;1416:27;;1384:61;1491:2;1483:6;1480:14;1460:18;1457:38;1454:161;;;1537:10;1532:3;1528:20;1525:1;1518:31;1572:4;1569:1;1562:15;1600:4;1597:1;1590:15;1454:161;;1241:380;;;:::o;:::-;27647:16103:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
        },
        "deployedBytecode": {
          "functionDebugData": {
            "@_1873": {
              "entryPoint": null,
              "id": 1873,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_approve_2268": {
              "entryPoint": 3152,
              "id": 2268,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_getCurrentSupply_2092": {
              "entryPoint": 4771,
              "id": 2092,
              "parameterSlots": 0,
              "returnSlots": 2
            },
            "@_getRValues_1988": {
              "entryPoint": 6084,
              "id": 1988,
              "parameterSlots": 4,
              "returnSlots": 3
            },
            "@_getRate_2006": {
              "entryPoint": 3891,
              "id": 2006,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_getTValues_1934": {
              "entryPoint": 6018,
              "id": 1934,
              "parameterSlots": 1,
              "returnSlots": 3
            },
            "@_marketingAddress_1370": {
              "entryPoint": null,
              "id": 1370,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@_msgSender_281": {
              "entryPoint": null,
              "id": 281,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@_reflectFee_1895": {
              "entryPoint": 6356,
              "id": 1895,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@_takeMarketing_2136": {
              "entryPoint": 6164,
              "id": 2136,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@_tokenTransfer_2551": {
              "entryPoint": 4087,
              "id": 2551,
              "parameterSlots": 4,
              "returnSlots": 0
            },
            "@_transferBothExcluded_2879": {
              "entryPoint": 5827,
              "id": 2879,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_transferFromExcluded_2786": {
              "entryPoint": 5249,
              "id": 2786,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_transferStandard_2622": {
              "entryPoint": 5745,
              "id": 2622,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_transferToExcluded_2704": {
              "entryPoint": 5562,
              "id": 2704,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@_transfer_2329": {
              "entryPoint": 3444,
              "id": 2329,
              "parameterSlots": 3,
              "returnSlots": 0
            },
            "@add_102": {
              "entryPoint": 3992,
              "id": 102,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@allowance_1592": {
              "entryPoint": null,
              "id": 1592,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@approve_1612": {
              "entryPoint": 1549,
              "id": 1612,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@balanceOf_1555": {
              "entryPoint": 1946,
              "id": 1555,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@buyFee_1392": {
              "entryPoint": null,
              "id": 1392,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@calculateMarketingFee_2172": {
              "entryPoint": 6426,
              "id": 2172,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@calculateTaxFee_2154": {
              "entryPoint": 6392,
              "id": 2154,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@decimals_1523": {
              "entryPoint": null,
              "id": 1523,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@decreaseAllowance_1704": {
              "entryPoint": 2423,
              "id": 1704,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@div_199": {
              "entryPoint": 3926,
              "id": 199,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@div_227": {
              "entryPoint": 5157,
              "id": 227,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@excludeFromFee_1755": {
              "entryPoint": 1868,
              "id": 1755,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@includeInFee_1769": {
              "entryPoint": 2591,
              "id": 1769,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@increaseAllowance_1676": {
              "entryPoint": 1814,
              "id": 1676,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@isExcludedFromFee_2224": {
              "entryPoint": null,
              "id": 2224,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@mul_182": {
              "entryPoint": 6456,
              "id": 182,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@name_1507": {
              "entryPoint": 1403,
              "id": 1507,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@owner_539": {
              "entryPoint": null,
              "id": 539,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@removeAllFee_2184": {
              "entryPoint": null,
              "id": 2184,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@renounceOwnership_574": {
              "entryPoint": 2041,
              "id": 574,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@sellFee_1395": {
              "entryPoint": null,
              "id": 1395,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@setBuyFee_1869": {
              "entryPoint": 2157,
              "id": 1869,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@setBuy_2198": {
              "entryPoint": null,
              "id": 2198,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@setSellFee_1819": {
              "entryPoint": 2666,
              "id": 1819,
              "parameterSlots": 2,
              "returnSlots": 0
            },
            "@setSell_2212": {
              "entryPoint": 5203,
              "id": 2212,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@sub_119": {
              "entryPoint": 5952,
              "id": 119,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@sub_147": {
              "entryPoint": 3833,
              "id": 147,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@symbol_1515": {
              "entryPoint": 2408,
              "id": 1515,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@tokenFromReflection_1729": {
              "entryPoint": 1677,
              "id": 1729,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "@totalSupply_1532": {
              "entryPoint": null,
              "id": 1532,
              "parameterSlots": 0,
              "returnSlots": 1
            },
            "@transferFrom_1649": {
              "entryPoint": 1572,
              "id": 1649,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "@transferOwnership_602": {
              "entryPoint": 2918,
              "id": 602,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "@transfer_1575": {
              "entryPoint": 2502,
              "id": 1575,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "@uniswapV2Pair_1404": {
              "entryPoint": null,
              "id": 1404,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@uniswapV2Router_1402": {
              "entryPoint": null,
              "id": 1402,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "@updateMarketingWallet_1741": {
              "entryPoint": 2515,
              "id": 1741,
              "parameterSlots": 1,
              "returnSlots": 0
            },
            "abi_decode_tuple_t_address": {
              "entryPoint": 6826,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_address_payable": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_tuple_t_addresst_address": {
              "entryPoint": 6929,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_addresst_addresst_uint256": {
              "entryPoint": 6736,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 3
            },
            "abi_decode_tuple_t_addresst_uint256": {
              "entryPoint": 6692,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_uint16t_uint16": {
              "entryPoint": 6878,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 2
            },
            "abi_decode_tuple_t_uint256": {
              "entryPoint": 6801,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_decode_uint16": {
              "entryPoint": 6855,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1295__to_t_address__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 6583,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_1dea3157af7095fdce80490fd438637a6cb8b37c6f85afff34b749f2cdff11a4__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_4949c5b66ee3eafb414a51c4689a6e2050ba3bf05c76b50d4de91646e8337d4d__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": 7045,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 3,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 5,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
              "entryPoint": null,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint16": {
              "entryPoint": 7120,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_add_t_uint256": {
              "entryPoint": 7181,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_div_t_uint256": {
              "entryPoint": 7254,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_mul_t_uint256": {
              "entryPoint": 7288,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "checked_sub_t_uint256": {
              "entryPoint": 7158,
              "id": null,
              "parameterSlots": 2,
              "returnSlots": 1
            },
            "extract_byte_array_length": {
              "entryPoint": 6986,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "increment_t_uint256": {
              "entryPoint": 7227,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 1
            },
            "panic_error_0x11": {
              "entryPoint": 7098,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "panic_error_0x32": {
              "entryPoint": 7205,
              "id": null,
              "parameterSlots": 0,
              "returnSlots": 0
            },
            "validator_revert_address": {
              "entryPoint": 6668,
              "id": null,
              "parameterSlots": 1,
              "returnSlots": 0
            }
          },
          "generatedSources": [
            {
              "ast": {
                "nodeType": "YulBlock",
                "src": "0:11354:1",
                "statements": [
                  {
                    "nodeType": "YulBlock",
                    "src": "6:3:1",
                    "statements": []
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "135:476:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "145:12:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "155:2:1",
                            "type": "",
                            "value": "32"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "149:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "173:9:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "184:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "166:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "166:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "166:21:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "196:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "216:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "210:5:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "210:13:1"
                          },
                          "variables": [
                            {
                              "name": "length",
                              "nodeType": "YulTypedName",
                              "src": "200:6:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "243:9:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "254:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "239:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "239:18:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "259:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "232:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "232:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "232:34:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "275:10:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "284:1:1",
                            "type": "",
                            "value": "0"
                          },
                          "variables": [
                            {
                              "name": "i",
                              "nodeType": "YulTypedName",
                              "src": "279:1:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "344:90:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "373:9:1"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "384:1:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "369:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "369:17:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "388:2:1",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "365:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "365:26:1"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value0",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "407:6:1"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "415:1:1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "403:3:1"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "403:14:1"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "419:2:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "399:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "399:23:1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "393:5:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "393:30:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "358:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "358:66:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "358:66:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "305:1:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "308:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "302:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "302:13:1"
                          },
                          "nodeType": "YulForLoop",
                          "post": {
                            "nodeType": "YulBlock",
                            "src": "316:19:1",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "318:15:1",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "327:1:1"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "330:2:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "323:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "323:10:1"
                                },
                                "variableNames": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "318:1:1"
                                  }
                                ]
                              }
                            ]
                          },
                          "pre": {
                            "nodeType": "YulBlock",
                            "src": "298:3:1",
                            "statements": []
                          },
                          "src": "294:140:1"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "468:66:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "headStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "497:9:1"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "508:6:1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "493:3:1"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "493:22:1"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "517:2:1",
                                          "type": "",
                                          "value": "64"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "489:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "489:31:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "522:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "482:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "482:42:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "482:42:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "449:1:1"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "452:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "446:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "446:13:1"
                          },
                          "nodeType": "YulIf",
                          "src": "443:91:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "543:62:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "559:9:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "578:6:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "586:2:1",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "574:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "574:15:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "595:2:1",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "591:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "591:7:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "570:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "570:29:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "555:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "555:45:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "602:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "551:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "551:54:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "543:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "104:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "115:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "126:4:1",
                        "type": ""
                      }
                    ],
                    "src": "14:597:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "661:86:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "725:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "734:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "737:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "727:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "727:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "727:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "684:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "695:5:1"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "710:3:1",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "715:1:1",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "706:3:1"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "706:11:1"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "719:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "702:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "702:19:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "691:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "691:31:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "681:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "681:42:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "674:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "674:50:1"
                          },
                          "nodeType": "YulIf",
                          "src": "671:70:1"
                        }
                      ]
                    },
                    "name": "validator_revert_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "650:5:1",
                        "type": ""
                      }
                    ],
                    "src": "616:131:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "839:228:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "885:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "894:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "897:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "887:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "887:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "887:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "860:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "869:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "856:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "856:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "881:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "852:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "852:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "849:52:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "910:36:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "936:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "923:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "923:23:1"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "914:5:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "980:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "955:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "955:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "955:31:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "995:15:1",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1005:5:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "995:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1019:42:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1046:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1057:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1042:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1042:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1029:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1029:32:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "1019:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "797:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "808:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "820:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "828:6:1",
                        "type": ""
                      }
                    ],
                    "src": "752:315:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1167:92:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1177:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1189:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1200:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1185:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1185:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1177:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1219:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1244:6:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1237:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1237:14:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1230:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1230:22:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1212:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1212:41:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1212:41:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1136:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1147:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "1158:4:1",
                        "type": ""
                      }
                    ],
                    "src": "1072:187:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1392:102:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1402:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1414:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1425:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1410:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1410:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1402:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1444:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1459:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1475:3:1",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1480:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "1471:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1471:11:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1484:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1467:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1467:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1455:32:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1437:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1437:51:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1437:51:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_contract$_IUniswapV2Router02_$1295__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1361:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1372:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "1383:4:1",
                        "type": ""
                      }
                    ],
                    "src": "1264:230:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1600:76:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "1610:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1622:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1633:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1618:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1618:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "1610:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1652:9:1"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1663:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "1645:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1645:25:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1645:25:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1569:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1580:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "1591:4:1",
                        "type": ""
                      }
                    ],
                    "src": "1499:177:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "1785:352:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "1831:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1840:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1843:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "1833:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1833:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "1833:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1806:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1815:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1802:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1802:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1827:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "1798:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1798:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "1795:52:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1856:36:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1882:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1869:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1869:23:1"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "1860:5:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1926:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "1901:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1901:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "1901:31:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "1941:15:1",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1951:5:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1941:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "1965:47:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1997:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2008:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1993:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1993:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "1980:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1980:32:1"
                          },
                          "variables": [
                            {
                              "name": "value_1",
                              "nodeType": "YulTypedName",
                              "src": "1969:7:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "2046:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "2021:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2021:33:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2021:33:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2063:17:1",
                          "value": {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "2073:7:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "2063:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2089:42:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2116:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2127:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2112:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2112:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2099:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2099:32:1"
                          },
                          "variableNames": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "2089:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "1735:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "1746:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "1758:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "1766:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "1774:6:1",
                        "type": ""
                      }
                    ],
                    "src": "1681:456:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2267:162:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2277:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2289:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2300:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2285:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2285:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2277:4:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2312:16:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2322:6:1",
                            "type": "",
                            "value": "0xffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "2316:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2344:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2359:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2367:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2355:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2355:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2337:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2337:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2337:34:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2391:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2402:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2387:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2387:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2411:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2419:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2407:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2407:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2380:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2380:43:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2380:43:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2228:9:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "2239:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2247:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "2258:4:1",
                        "type": ""
                      }
                    ],
                    "src": "2142:287:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2504:110:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2550:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2559:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2562:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2552:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2552:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2552:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2525:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2534:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2521:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2521:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2546:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2517:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2517:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "2514:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "2575:33:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2598:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2585:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2585:23:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2575:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2470:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2481:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2493:6:1",
                        "type": ""
                      }
                    ],
                    "src": "2434:180:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2716:87:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "2726:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2738:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2749:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2734:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2734:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "2726:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2768:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2783:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2791:4:1",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "2779:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2779:17:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "2761:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2761:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2761:36:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2685:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2696:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "2707:4:1",
                        "type": ""
                      }
                    ],
                    "src": "2619:184:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "2878:177:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "2924:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2933:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2936:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "2926:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2926:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "2926:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2899:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2908:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "2895:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2895:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2920:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2891:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2891:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "2888:52:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "2949:36:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2975:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2962:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2962:23:1"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "2953:5:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3019:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "2994:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2994:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "2994:31:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3034:15:1",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3044:5:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3034:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "2844:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "2855:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "2867:6:1",
                        "type": ""
                      }
                    ],
                    "src": "2808:247:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3161:102:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3171:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3183:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3194:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3179:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3179:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "3171:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3213:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3228:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3244:3:1",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3249:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "3240:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3240:11:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3253:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3236:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3236:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "3224:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3224:32:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "3206:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3206:51:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3206:51:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3130:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3141:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "3152:4:1",
                        "type": ""
                      }
                    ],
                    "src": "3060:203:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3316:111:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "3326:29:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3348:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3335:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3335:20:1"
                          },
                          "variableNames": [
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "3326:5:1"
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3405:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3414:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3417:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3407:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3407:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3407:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3377:5:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3388:5:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3395:6:1",
                                        "type": "",
                                        "value": "0xffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "3384:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3384:18:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "3374:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3374:29:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3367:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3367:37:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3364:57:1"
                        }
                      ]
                    },
                    "name": "abi_decode_uint16",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "offset",
                        "nodeType": "YulTypedName",
                        "src": "3295:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "3306:5:1",
                        "type": ""
                      }
                    ],
                    "src": "3268:159:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3517:171:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3563:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3572:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3575:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3565:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3565:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3565:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3538:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3547:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3534:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3534:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3559:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3530:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3530:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3527:52:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3588:38:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3616:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_uint16",
                              "nodeType": "YulIdentifier",
                              "src": "3598:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3598:28:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3588:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3635:47:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3667:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3678:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3663:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3663:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "abi_decode_uint16",
                              "nodeType": "YulIdentifier",
                              "src": "3645:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3645:37:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "3635:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_uint16t_uint16",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3475:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3486:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3498:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "3506:6:1",
                        "type": ""
                      }
                    ],
                    "src": "3432:256:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "3771:177:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "3817:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3826:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3829:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "3819:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3819:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "3819:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3792:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3801:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "3788:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3788:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3813:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3784:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3784:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "3781:52:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "3842:36:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3868:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3855:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3855:23:1"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "3846:5:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3912:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "3887:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3887:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "3887:31:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "3927:15:1",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3937:5:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "3927:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_address_payable",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "3737:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "3748:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "3760:6:1",
                        "type": ""
                      }
                    ],
                    "src": "3693:255:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4070:102:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4080:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4092:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4103:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4088:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4088:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "4080:4:1"
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4122:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4137:6:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4153:3:1",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4158:1:1",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "4149:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4149:11:1"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4162:1:1",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4145:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4145:19:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4133:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4133:32:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "4115:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4115:51:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4115:51:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4039:9:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4050:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "4061:4:1",
                        "type": ""
                      }
                    ],
                    "src": "3953:219:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4264:301:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4310:16:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4319:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4322:1:1",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4312:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4312:12:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4312:12:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4285:7:1"
                                  },
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4294:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "4281:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4281:23:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4306:2:1",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "4277:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4277:32:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4274:52:1"
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4335:36:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4361:9:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4348:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4348:23:1"
                          },
                          "variables": [
                            {
                              "name": "value",
                              "nodeType": "YulTypedName",
                              "src": "4339:5:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4405:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "4380:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4380:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4380:31:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4420:15:1",
                          "value": {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4430:5:1"
                          },
                          "variableNames": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "4420:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4444:47:1",
                          "value": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4476:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4487:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4472:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4472:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "4459:12:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4459:32:1"
                          },
                          "variables": [
                            {
                              "name": "value_1",
                              "nodeType": "YulTypedName",
                              "src": "4448:7:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "value_1",
                                "nodeType": "YulIdentifier",
                                "src": "4525:7:1"
                              }
                            ],
                            "functionName": {
                              "name": "validator_revert_address",
                              "nodeType": "YulIdentifier",
                              "src": "4500:24:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4500:33:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "4500:33:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "4542:17:1",
                          "value": {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "4552:7:1"
                          },
                          "variableNames": [
                            {
                              "name": "value1",
                              "nodeType": "YulIdentifier",
                              "src": "4542:6:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_decode_tuple_t_addresst_address",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "4222:9:1",
                        "type": ""
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulTypedName",
                        "src": "4233:7:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "4245:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "4253:6:1",
                        "type": ""
                      }
                    ],
                    "src": "4177:388:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "4625:325:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "4635:22:1",
                          "value": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4649:1:1",
                                "type": "",
                                "value": "1"
                              },
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "4652:4:1"
                              }
                            ],
                            "functionName": {
                              "name": "shr",
                              "nodeType": "YulIdentifier",
                              "src": "4645:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4645:12:1"
                          },
                          "variableNames": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4635:6:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "4666:38:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "data",
                                "nodeType": "YulIdentifier",
                                "src": "4696:4:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4702:1:1",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4692:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4692:12:1"
                          },
                          "variables": [
                            {
                              "name": "outOfPlaceEncoding",
                              "nodeType": "YulTypedName",
                              "src": "4670:18:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4743:31:1",
                            "statements": [
                              {
                                "nodeType": "YulAssignment",
                                "src": "4745:27:1",
                                "value": {
                                  "arguments": [
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "4759:6:1"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4767:4:1",
                                      "type": "",
                                      "value": "0x7f"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "4755:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4755:17:1"
                                },
                                "variableNames": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4745:6:1"
                                  }
                                ]
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "4723:18:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4716:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4716:26:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4713:61:1"
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "4833:111:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4854:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4861:3:1",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "4866:10:1",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "4857:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4857:20:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "4847:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4847:31:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4847:31:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4898:1:1",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4901:4:1",
                                      "type": "",
                                      "value": "0x22"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "4891:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4891:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4891:15:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4926:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "4929:4:1",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "4919:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "4919:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "4919:15:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "outOfPlaceEncoding",
                                "nodeType": "YulIdentifier",
                                "src": "4789:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4812:6:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4820:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4809:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4809:14:1"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "4786:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4786:38:1"
                          },
                          "nodeType": "YulIf",
                          "src": "4783:161:1"
                        }
                      ]
                    },
                    "name": "extract_byte_array_length",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "data",
                        "nodeType": "YulTypedName",
                        "src": "4605:4:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "length",
                        "nodeType": "YulTypedName",
                        "src": "4614:6:1",
                        "type": ""
                      }
                    ],
                    "src": "4570:380:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5129:232:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5146:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5157:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5139:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5139:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5139:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5180:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5191:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5176:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5176:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5196:2:1",
                                "type": "",
                                "value": "42"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5169:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5169:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5169:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5219:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5230:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5215:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5215:18:1"
                              },
                              {
                                "hexValue": "416d6f756e74206d757374206265206c657373207468616e20746f74616c2072",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "5235:34:1",
                                "type": "",
                                "value": "Amount must be less than total r"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5208:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5208:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5208:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5290:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5301:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5286:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5286:18:1"
                              },
                              {
                                "hexValue": "65666c656374696f6e73",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "5306:12:1",
                                "type": "",
                                "value": "eflections"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5279:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5279:40:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5279:40:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5328:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5340:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5351:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5336:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5336:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5328:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5106:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "5120:4:1",
                        "type": ""
                      }
                    ],
                    "src": "4955:406:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5540:182:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5557:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5568:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5550:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5550:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5550:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5591:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5602:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5587:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5587:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5607:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5580:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5580:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5580:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5630:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5641:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5626:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5626:18:1"
                              },
                              {
                                "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "5646:34:1",
                                "type": "",
                                "value": "Ownable: caller is not the owner"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5619:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5619:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5619:62:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "5690:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5702:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5713:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5698:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5698:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "5690:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "5517:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "5531:4:1",
                        "type": ""
                      }
                    ],
                    "src": "5366:356:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5759:95:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5776:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5783:3:1",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5788:10:1",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5779:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5779:20:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5769:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5769:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5769:31:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5816:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5819:4:1",
                                "type": "",
                                "value": "0x11"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "5809:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5809:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5809:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5840:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5843:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "5833:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5833:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "5833:15:1"
                        }
                      ]
                    },
                    "name": "panic_error_0x11",
                    "nodeType": "YulFunctionDefinition",
                    "src": "5727:127:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "5906:177:1",
                      "statements": [
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5916:16:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5926:6:1",
                            "type": "",
                            "value": "0xffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "5920:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5941:21:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5956:1:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5959:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5952:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5952:10:1"
                          },
                          "variables": [
                            {
                              "name": "x_1",
                              "nodeType": "YulTypedName",
                              "src": "5945:3:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "5971:21:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "5986:1:1"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5989:2:1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5982:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5982:10:1"
                          },
                          "variables": [
                            {
                              "name": "y_1",
                              "nodeType": "YulTypedName",
                              "src": "5975:3:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "6026:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "6028:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "6028:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "6028:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x_1",
                                "nodeType": "YulIdentifier",
                                "src": "6007:3:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6016:2:1"
                                  },
                                  {
                                    "name": "y_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6020:3:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "6012:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6012:12:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "6004:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6004:21:1"
                          },
                          "nodeType": "YulIf",
                          "src": "6001:47:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6057:20:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x_1",
                                "nodeType": "YulIdentifier",
                                "src": "6068:3:1"
                              },
                              {
                                "name": "y_1",
                                "nodeType": "YulIdentifier",
                                "src": "6073:3:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6064:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6064:13:1"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "6057:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_add_t_uint16",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "5889:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "5892:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "5898:3:1",
                        "type": ""
                      }
                    ],
                    "src": "5859:224:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6262:167:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6279:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6290:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6272:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6272:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6272:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6313:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6324:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6309:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6309:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6329:2:1",
                                "type": "",
                                "value": "17"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6302:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6302:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6302:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6352:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6363:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6348:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6348:18:1"
                              },
                              {
                                "hexValue": "4275794665652065786365656420313030",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "6368:19:1",
                                "type": "",
                                "value": "BuyFee exceed 100"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6341:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6341:47:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6341:47:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "6397:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6409:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6420:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6405:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6405:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6397:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_4949c5b66ee3eafb414a51c4689a6e2050ba3bf05c76b50d4de91646e8337d4d__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6239:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6253:4:1",
                        "type": ""
                      }
                    ],
                    "src": "6088:341:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "6615:267:1",
                      "statements": [
                        {
                          "nodeType": "YulAssignment",
                          "src": "6625:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6637:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6648:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6633:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6633:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "6625:4:1"
                            }
                          ]
                        },
                        {
                          "nodeType": "YulVariableDeclaration",
                          "src": "6661:16:1",
                          "value": {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6671:6:1",
                            "type": "",
                            "value": "0xffff"
                          },
                          "variables": [
                            {
                              "name": "_1",
                              "nodeType": "YulTypedName",
                              "src": "6665:2:1",
                              "type": ""
                            }
                          ]
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6693:9:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "6708:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6716:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6704:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6704:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6686:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6686:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6686:34:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6740:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6751:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6736:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6736:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6760:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6768:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6756:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6756:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6729:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6729:43:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6729:43:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6792:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6803:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6788:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6788:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6812:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6820:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6808:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6808:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6781:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6781:43:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6781:43:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6844:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6855:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6840:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6840:18:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "6864:6:1"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6872:2:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "6860:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6860:15:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "6833:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6833:43:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "6833:43:1"
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "6560:9:1",
                        "type": ""
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulTypedName",
                        "src": "6571:6:1",
                        "type": ""
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulTypedName",
                        "src": "6579:6:1",
                        "type": ""
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulTypedName",
                        "src": "6587:6:1",
                        "type": ""
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulTypedName",
                        "src": "6595:6:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "6606:4:1",
                        "type": ""
                      }
                    ],
                    "src": "6434:448:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7061:168:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7078:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7089:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7071:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7071:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7071:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7112:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7123:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7108:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7108:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7128:2:1",
                                "type": "",
                                "value": "18"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7101:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7101:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7101:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7151:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7162:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7147:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7147:18:1"
                              },
                              {
                                "hexValue": "53656c6c4665652065786365656420313030",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7167:20:1",
                                "type": "",
                                "value": "SellFee exceed 100"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7140:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7140:48:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7140:48:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7197:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7209:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7220:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7205:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7205:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7197:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_1dea3157af7095fdce80490fd438637a6cb8b37c6f85afff34b749f2cdff11a4__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7038:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7052:4:1",
                        "type": ""
                      }
                    ],
                    "src": "6887:342:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7408:228:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7425:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7436:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7418:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7418:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7418:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7459:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7470:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7455:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7455:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7475:2:1",
                                "type": "",
                                "value": "38"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7448:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7448:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7448:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7498:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7509:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7494:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7494:18:1"
                              },
                              {
                                "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7514:34:1",
                                "type": "",
                                "value": "Ownable: new owner is the zero a"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7487:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7487:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7487:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7569:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7580:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7565:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7565:18:1"
                              },
                              {
                                "hexValue": "646472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7585:8:1",
                                "type": "",
                                "value": "ddress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7558:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7558:36:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7558:36:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "7603:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7615:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7626:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7611:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7611:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "7603:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7385:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7399:4:1",
                        "type": ""
                      }
                    ],
                    "src": "7234:402:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "7815:226:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7832:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7843:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7825:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7825:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7825:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7866:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7877:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7862:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7862:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7882:2:1",
                                "type": "",
                                "value": "36"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7855:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7855:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7855:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7905:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7916:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7901:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7901:18:1"
                              },
                              {
                                "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7921:34:1",
                                "type": "",
                                "value": "ERC20: approve from the zero add"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7894:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7894:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7894:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7976:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7987:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7972:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7972:18:1"
                              },
                              {
                                "hexValue": "72657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "7992:6:1",
                                "type": "",
                                "value": "ress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "7965:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7965:34:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "7965:34:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8008:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8020:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8031:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8016:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8016:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8008:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "7792:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "7806:4:1",
                        "type": ""
                      }
                    ],
                    "src": "7641:400:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8220:224:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8237:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8248:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8230:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8230:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8230:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8271:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8282:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8267:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8267:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8287:2:1",
                                "type": "",
                                "value": "34"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8260:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8260:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8260:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8310:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8321:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8306:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8306:18:1"
                              },
                              {
                                "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8326:34:1",
                                "type": "",
                                "value": "ERC20: approve to the zero addre"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8299:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8299:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8299:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8381:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8392:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8377:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8377:18:1"
                              },
                              {
                                "hexValue": "7373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8397:4:1",
                                "type": "",
                                "value": "ss"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8370:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8370:32:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8370:32:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8411:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8423:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8434:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8419:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8419:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8411:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8197:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8211:4:1",
                        "type": ""
                      }
                    ],
                    "src": "8046:398:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "8623:227:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8640:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8651:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8633:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8633:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8633:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8674:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8685:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8670:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8670:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8690:2:1",
                                "type": "",
                                "value": "37"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8663:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8663:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8663:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8713:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8724:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8709:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8709:18:1"
                              },
                              {
                                "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8729:34:1",
                                "type": "",
                                "value": "ERC20: transfer from the zero ad"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8702:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8702:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8702:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8784:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8795:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8780:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8780:18:1"
                              },
                              {
                                "hexValue": "6472657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "8800:7:1",
                                "type": "",
                                "value": "dress"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "8773:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8773:35:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "8773:35:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "8817:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8829:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8840:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8825:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8825:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "8817:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "8600:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "8614:4:1",
                        "type": ""
                      }
                    ],
                    "src": "8449:401:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9029:225:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9046:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9057:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9039:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9039:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9039:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9080:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9091:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9076:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9076:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9096:2:1",
                                "type": "",
                                "value": "35"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9069:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9069:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9069:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9119:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9130:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9115:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9115:18:1"
                              },
                              {
                                "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9135:34:1",
                                "type": "",
                                "value": "ERC20: transfer to the zero addr"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9108:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9108:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9108:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9190:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9201:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9186:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9186:18:1"
                              },
                              {
                                "hexValue": "657373",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9206:5:1",
                                "type": "",
                                "value": "ess"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9179:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9179:33:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9179:33:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9221:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9233:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9244:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9229:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9229:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9221:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9006:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9020:4:1",
                        "type": ""
                      }
                    ],
                    "src": "8855:399:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9433:231:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9450:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9461:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9443:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9443:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9443:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9484:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9495:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9480:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9480:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9500:2:1",
                                "type": "",
                                "value": "41"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9473:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9473:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9473:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9523:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9534:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9519:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9519:18:1"
                              },
                              {
                                "hexValue": "5472616e7366657220616d6f756e74206d757374206265206772656174657220",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9539:34:1",
                                "type": "",
                                "value": "Transfer amount must be greater "
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9512:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9512:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9512:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9594:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9605:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9590:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9590:18:1"
                              },
                              {
                                "hexValue": "7468616e207a65726f",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "9610:11:1",
                                "type": "",
                                "value": "than zero"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "9583:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9583:39:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "9583:39:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9631:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9643:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9654:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9639:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9639:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "9631:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "9410:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "9424:4:1",
                        "type": ""
                      }
                    ],
                    "src": "9259:405:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9718:76:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9740:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "9742:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9742:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9742:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9734:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "9737:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9731:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9731:8:1"
                          },
                          "nodeType": "YulIf",
                          "src": "9728:34:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9771:17:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9783:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "9786:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9779:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9779:9:1"
                          },
                          "variableNames": [
                            {
                              "name": "diff",
                              "nodeType": "YulIdentifier",
                              "src": "9771:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_sub_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "9700:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "9703:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "diff",
                        "nodeType": "YulTypedName",
                        "src": "9709:4:1",
                        "type": ""
                      }
                    ],
                    "src": "9669:125:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "9847:80:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "9874:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "9876:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "9876:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "9876:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9863:1:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "9870:1:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "9866:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9866:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "9860:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9860:13:1"
                          },
                          "nodeType": "YulIf",
                          "src": "9857:39:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "9905:16:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "9916:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "9919:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9912:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9912:9:1"
                          },
                          "variableNames": [
                            {
                              "name": "sum",
                              "nodeType": "YulIdentifier",
                              "src": "9905:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_add_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "9830:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "9833:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "sum",
                        "nodeType": "YulTypedName",
                        "src": "9839:3:1",
                        "type": ""
                      }
                    ],
                    "src": "9799:128:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10106:177:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10123:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10134:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10116:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10116:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10116:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10157:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10168:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10153:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10153:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10173:2:1",
                                "type": "",
                                "value": "27"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10146:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10146:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10146:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10196:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10207:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10192:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10192:18:1"
                              },
                              {
                                "hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "10212:29:1",
                                "type": "",
                                "value": "SafeMath: addition overflow"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10185:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10185:57:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10185:57:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10251:26:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10263:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10274:2:1",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10259:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10259:18:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "10251:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "10083:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "10097:4:1",
                        "type": ""
                      }
                    ],
                    "src": "9932:351:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10320:95:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10337:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10344:3:1",
                                    "type": "",
                                    "value": "224"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10349:10:1",
                                    "type": "",
                                    "value": "0x4e487b71"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10340:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10340:20:1"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10330:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10330:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10330:31:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10377:1:1",
                                "type": "",
                                "value": "4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10380:4:1",
                                "type": "",
                                "value": "0x32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "10370:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10370:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10370:15:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10401:1:1",
                                "type": "",
                                "value": "0"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10404:4:1",
                                "type": "",
                                "value": "0x24"
                              }
                            ],
                            "functionName": {
                              "name": "revert",
                              "nodeType": "YulIdentifier",
                              "src": "10394:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10394:15:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "10394:15:1"
                        }
                      ]
                    },
                    "name": "panic_error_0x32",
                    "nodeType": "YulFunctionDefinition",
                    "src": "10288:127:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10467:88:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10498:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "10500:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10500:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10500:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10483:5:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10494:1:1",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "10490:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10490:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "10480:2:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10480:17:1"
                          },
                          "nodeType": "YulIf",
                          "src": "10477:43:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10529:20:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "10540:5:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10547:1:1",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10536:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10536:13:1"
                          },
                          "variableNames": [
                            {
                              "name": "ret",
                              "nodeType": "YulIdentifier",
                              "src": "10529:3:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "increment_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "value",
                        "nodeType": "YulTypedName",
                        "src": "10449:5:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "ret",
                        "nodeType": "YulTypedName",
                        "src": "10459:3:1",
                        "type": ""
                      }
                    ],
                    "src": "10420:135:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10606:171:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10637:111:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10658:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10665:3:1",
                                          "type": "",
                                          "value": "224"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10670:10:1",
                                          "type": "",
                                          "value": "0x4e487b71"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "shl",
                                        "nodeType": "YulIdentifier",
                                        "src": "10661:3:1"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10661:20:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10651:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10651:31:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10651:31:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10702:1:1",
                                      "type": "",
                                      "value": "4"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10705:4:1",
                                      "type": "",
                                      "value": "0x12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mstore",
                                    "nodeType": "YulIdentifier",
                                    "src": "10695:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10695:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10695:15:1"
                              },
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10730:1:1",
                                      "type": "",
                                      "value": "0"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10733:4:1",
                                      "type": "",
                                      "value": "0x24"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "revert",
                                    "nodeType": "YulIdentifier",
                                    "src": "10723:6:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10723:15:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10723:15:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "10626:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "10619:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10619:9:1"
                          },
                          "nodeType": "YulIf",
                          "src": "10616:132:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10757:14:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10766:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "10769:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "10762:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10762:9:1"
                          },
                          "variableNames": [
                            {
                              "name": "r",
                              "nodeType": "YulIdentifier",
                              "src": "10757:1:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_div_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "10591:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "10594:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "r",
                        "nodeType": "YulTypedName",
                        "src": "10600:1:1",
                        "type": ""
                      }
                    ],
                    "src": "10560:217:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "10834:116:1",
                      "statements": [
                        {
                          "body": {
                            "nodeType": "YulBlock",
                            "src": "10893:22:1",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "panic_error_0x11",
                                    "nodeType": "YulIdentifier",
                                    "src": "10895:16:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10895:18:1"
                                },
                                "nodeType": "YulExpressionStatement",
                                "src": "10895:18:1"
                              }
                            ]
                          },
                          "condition": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "10865:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "10858:6:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10858:9:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "10851:6:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10851:17:1"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "10873:1:1"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "10884:1:1",
                                            "type": "",
                                            "value": "0"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "10880:3:1"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "10880:6:1"
                                      },
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "10888:1:1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "div",
                                      "nodeType": "YulIdentifier",
                                      "src": "10876:3:1"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10876:14:1"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10870:2:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10870:21:1"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "10847:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10847:45:1"
                          },
                          "nodeType": "YulIf",
                          "src": "10844:71:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "10924:20:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "10939:1:1"
                              },
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "10942:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "10935:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10935:9:1"
                          },
                          "variableNames": [
                            {
                              "name": "product",
                              "nodeType": "YulIdentifier",
                              "src": "10924:7:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "checked_mul_t_uint256",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "x",
                        "nodeType": "YulTypedName",
                        "src": "10813:1:1",
                        "type": ""
                      },
                      {
                        "name": "y",
                        "nodeType": "YulTypedName",
                        "src": "10816:1:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "product",
                        "nodeType": "YulTypedName",
                        "src": "10822:7:1",
                        "type": ""
                      }
                    ],
                    "src": "10782:168:1"
                  },
                  {
                    "body": {
                      "nodeType": "YulBlock",
                      "src": "11129:223:1",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11146:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11157:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11139:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11139:21:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11139:21:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11180:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11191:2:1",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11176:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11176:18:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11196:2:1",
                                "type": "",
                                "value": "33"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11169:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11169:30:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11169:30:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11219:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11230:2:1",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11215:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11215:18:1"
                              },
                              {
                                "hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "11235:34:1",
                                "type": "",
                                "value": "SafeMath: multiplication overflo"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11208:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11208:62:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11208:62:1"
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11290:9:1"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11301:2:1",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11286:3:1"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11286:18:1"
                              },
                              {
                                "hexValue": "77",
                                "kind": "string",
                                "nodeType": "YulLiteral",
                                "src": "11306:3:1",
                                "type": "",
                                "value": "w"
                              }
                            ],
                            "functionName": {
                              "name": "mstore",
                              "nodeType": "YulIdentifier",
                              "src": "11279:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11279:31:1"
                          },
                          "nodeType": "YulExpressionStatement",
                          "src": "11279:31:1"
                        },
                        {
                          "nodeType": "YulAssignment",
                          "src": "11319:27:1",
                          "value": {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11331:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11342:3:1",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11327:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11327:19:1"
                          },
                          "variableNames": [
                            {
                              "name": "tail",
                              "nodeType": "YulIdentifier",
                              "src": "11319:4:1"
                            }
                          ]
                        }
                      ]
                    },
                    "name": "abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed",
                    "nodeType": "YulFunctionDefinition",
                    "parameters": [
                      {
                        "name": "headStart",
                        "nodeType": "YulTypedName",
                        "src": "11106:9:1",
                        "type": ""
                      }
                    ],
                    "returnVariables": [
                      {
                        "name": "tail",
                        "nodeType": "YulTypedName",
                        "src": "11120:4:1",
                        "type": ""
                      }
                    ],
                    "src": "10955:397:1"
                  }
                ]
              },
              "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV2Router02_$1295__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint16_t_uint16__to_t_uint16_t_uint16__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint16(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint16t_uint16(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_uint16(headStart)\n        value1 := abi_decode_uint16(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_22f7af55a509c3b14f0d528f087748dec8a8bf425135e3f5dc28c6a31ec6d812__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Amount must be less than total r\")\n        mstore(add(headStart, 96), \"eflections\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint16(x, y) -> sum\n    {\n        let _1 := 0xffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function abi_encode_tuple_t_stringliteral_4949c5b66ee3eafb414a51c4689a6e2050ba3bf05c76b50d4de91646e8337d4d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"BuyFee exceed 100\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint16_t_uint16_t_uint16_t_uint16__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := 0xffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_1dea3157af7095fdce80490fd438637a6cb8b37c6f85afff34b749f2cdff11a4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"SellFee exceed 100\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9edb5ab58321f35d2386ea65721c9b107daa2c273610fc16d394af2a320ba785__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Transfer amount must be greater \")\n        mstore(add(headStart, 96), \"than zero\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"SafeMath: addition overflow\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"SafeMath: multiplication overflo\")\n        mstore(add(headStart, 96), \"w\")\n        tail := add(headStart, 128)\n    }\n}",
              "id": 1,
              "language": "Yul",
              "name": "#utility.yul"
            }
          ],
          "immutableReferences": {
            "1402": [
              {
                "length": 32,
                "start": 510
              }
            ],
            "1404": [
              {
                "length": 32,
                "start": 882
              },
              {
                "length": 32,
                "start": 4113
              },
              {
                "length": 32,
                "start": 4220
              },
              {
                "length": 32,
                "start": 4286
              },
              {
                "length": 32,
                "start": 4347
              }
            ]
          },
          "linkReferences": {},
          "object": "6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063dd62ed3e11610064578063dd62ed3e146104d5578063ea2f0b371461051b578063ec2a520a1461053b578063f2fde38b1461055b57600080fd5b8063a9059cbb14610475578063aacebbe314610495578063caac7934146104b557600080fd5b806370a08231146103cd578063715018a6146103ed5780637afad249146104025780638da5cb5b1461042257806395d89b4114610440578063a457c2d71461045557600080fd5b80632d8381191161013e578063437823ec11610118578063437823ec14610319578063470624021461033b57806349bd5a5e146103605780635342acb41461039457600080fd5b80632d838119146102b7578063313ce567146102d757806339509351146102f957600080fd5b806306fdde0314610191578063095ea7b3146101bc5780631694505e146101ec57806318160ddd1461023857806323b872dd146102575780632b14ca561461027757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101a661057b565b6040516101b391906119b7565b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611a24565b61060d565b60405190151581526020016101b3565b3480156101f857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b3565b34801561024457600080fd5b506008545b6040519081526020016101b3565b34801561026357600080fd5b506101dc610272366004611a50565b610624565b34801561028357600080fd5b5060105461029c9061ffff808216916201000090041682565b6040805161ffff9384168152929091166020830152016101b3565b3480156102c357600080fd5b506102496102d2366004611a91565b61068d565b3480156102e357600080fd5b50600e5460405160ff90911681526020016101b3565b34801561030557600080fd5b506101dc610314366004611a24565b610716565b34801561032557600080fd5b50610339610334366004611aaa565b61074c565b005b34801561034757600080fd5b50600f5461029c9061ffff808216916201000090041682565b34801561036c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101dc6103af366004611aaa565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103d957600080fd5b506102496103e8366004611aaa565b61079a565b3480156103f957600080fd5b506103396107f9565b34801561040e57600080fd5b5061033961041d366004611ade565b61086d565b34801561042e57600080fd5b506000546001600160a01b0316610220565b34801561044c57600080fd5b506101a6610968565b34801561046157600080fd5b506101dc610470366004611a24565b610977565b34801561048157600080fd5b506101dc610490366004611a24565b6109c6565b3480156104a157600080fd5b506103396104b0366004611aaa565b6109d3565b3480156104c157600080fd5b50600b54610220906001600160a01b031681565b3480156104e157600080fd5b506102496104f0366004611b11565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561052757600080fd5b50610339610536366004611aaa565b610a1f565b34801561054757600080fd5b50610339610556366004611ade565b610a6a565b34801561056757600080fd5b50610339610576366004611aaa565b610b66565b6060600c805461058a90611b4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611b4a565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600061061a338484610c50565b5060015b92915050565b6000610631848484610d74565b610683843361067e85604051806060016040528060288152602001611c98602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610ef9565b610c50565b5060019392505050565b60006009548211156106f95760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b6000610703610f33565b905061070f8382610f56565b9392505050565b3360008181526004602090815260408083206001600160a01b0387168452909152812054909161061a91859061067e9086610f98565b6000546001600160a01b031633146107765760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6001600160a01b03811660009081526006602052604081205460ff16156107d757506001600160a01b031660009081526003602052604090205490565b6001600160a01b03821660009081526002602052604090205461061e9061068d565b6000546001600160a01b031633146108235760405162461bcd60e51b81526004016106f090611b85565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016106f090611b85565b60646108a38284611bd0565b61ffff1611156108e95760405162461bcd60e51b81526020600482015260116024820152700427579466565206578636565642031303607c1b60448201526064016106f0565b600f546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f3d839c4d8187eded7cfbdfb38e8c68ae748d7c674400c8c3b8c837ba2933d1ac9181900360800190a1600f805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6060600d805461058a90611b4a565b600061061a338461067e85604051806060016040528060258152602001611cc0602591393360009081526004602090815260408083206001600160a01b038d1684529091529020549190610ef9565b600061061a338484610d74565b6000546001600160a01b031633146109fd5760405162461bcd60e51b81526004016106f090611b85565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016106f090611b85565b6064610aa08284611bd0565b61ffff161115610ae75760405162461bcd60e51b8152602060048201526012602482015271053656c6c46656520657863656564203130360741b60448201526064016106f0565b6010546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f5453929bc359b94bdd2542a6d8391ca15fe386d74f044db5277328a36de3c6509181900360800190a16010805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b038116610bf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610cb25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f0565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f0565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dd85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f0565b6001600160a01b038216610e3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f0565b60008111610e9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016106f0565b6001600160a01b03831660009081526005602052604090205460019060ff1680610ede57506001600160a01b03831660009081526005602052604090205460ff165b15610ee7575060005b610ef384848484610ff7565b50505050565b60008184841115610f1d5760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611bf6565b95945050505050565b6000806000610f406112a3565b9092509050610f4f8282610f56565b9250505090565b600061070f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600080610fa58385611c0d565b90508381101561070f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106f0565b801561113d5761100f6011805463ffffffff19169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316141561107a5761107a600f54601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110bc576110bc611453565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415801561113057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b1561113d5761113d611453565b6001600160a01b03841660009081526006602052604090205460ff16801561117e57506001600160a01b03831660009081526006602052604090205460ff16155b156111935761118e848484611481565b611291565b6001600160a01b03841660009081526006602052604090205460ff161580156111d457506001600160a01b03831660009081526006602052604090205460ff165b156111e45761118e8484846115ba565b6001600160a01b03841660009081526006602052604090205460ff1615801561122657506001600160a01b03831660009081526006602052604090205460ff16155b156112365761118e848484611671565b6001600160a01b03841660009081526006602052604090205460ff16801561127657506001600160a01b03831660009081526006602052604090205460ff165b156112865761118e8484846116c3565b611291848484611671565b610ef36011805463ffffffff19169055565b6009546008546000918291825b6007548110156113f5578260026000600784815481106112d2576112d2611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061133d575081600360006007848154811061131657611316611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561135357600954600854945094505050509091565b611399600260006007848154811061136d5761136d611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611740565b92506113e160036000600784815481106113b5576113b5611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611740565b9150806113ed81611c3b565b9150506112b0565b5060085460095461140591610f56565b82101561141c576009546008549350935050509091565b90939092509050565b600081836114465760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611c56565b601054601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b600080600061148f84611782565b92509250925060008060006114ad8786866114a8610f33565b6117c4565b6001600160a01b038c1660009081526003602052604090205492955090935091506114d89088611740565b6001600160a01b038a166000908152600360209081526040808320939093556002905220546115079084611740565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115369083610f98565b6001600160a01b03891660009081526002602052604090205561155884611814565b61156281866118d4565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516115a791815260200190565b60405180910390a3505050505050505050565b60008060006115c884611782565b92509250925060008060006115e18786866114a8610f33565b6001600160a01b038c16600090815260026020526040902054929550909350915061160c9084611740565b6001600160a01b03808b16600090815260026020908152604080832094909455918b168152600390915220546116429087610f98565b6001600160a01b0389166000908152600360209081526040808320939093556002905220546115369083610f98565b600080600061167f84611782565b92509250925060008060006116988786866114a8610f33565b6001600160a01b038c1660009081526002602052604090205492955090935091506115079084611740565b60008060006116d184611782565b92509250925060008060006116ea8786866114a8610f33565b6001600160a01b038c1660009081526003602052604090205492955090935091506117159088611740565b6001600160a01b038a1660009081526003602090815260408083209390935560029052205461160c90845b600061070f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ef9565b600080600080611791856118f8565b9050600061179e8661191a565b905060006117b6826117b08986611740565b90611740565b979296509094509092505050565b60008080806117d38886611938565b905060006117e18887611938565b905060006117ef8888611938565b90506000611801826117b08686611740565b939b939a50919850919650505050505050565b600061181e610f33565b9050600061182c8383611938565b600b546001600160a01b03166000908152600260205260409020549091506118549082610f98565b600b80546001600160a01b03908116600090815260026020908152604080832095909555925490911681526006909152205460ff16156118cf57600b546001600160a01b03166000908152600360205260409020546118b39084610f98565b600b546001600160a01b03166000908152600360205260409020555b505050565b6009546118e19083611740565b600955600a546118f19082610f98565b600a555050565b60115460009061061e9060649061191490859061ffff16611938565b90610f56565b60115460009061061e9060649061191490859062010000900461ffff165b6000826119475750600061061e565b60006119538385611c78565b9050826119608583611c56565b1461070f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106f0565b600060208083528351808285015260005b818110156119e4578581018301518582016040015282016119c8565b818111156119f6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060408385031215611a3757600080fd5b8235611a4281611a0c565b946020939093013593505050565b600080600060608486031215611a6557600080fd5b8335611a7081611a0c565b92506020840135611a8081611a0c565b929592945050506040919091013590565b600060208284031215611aa357600080fd5b5035919050565b600060208284031215611abc57600080fd5b813561070f81611a0c565b803561ffff81168114611ad957600080fd5b919050565b60008060408385031215611af157600080fd5b611afa83611ac7565b9150611b0860208401611ac7565b90509250929050565b60008060408385031215611b2457600080fd5b8235611b2f81611a0c565b91506020830135611b3f81611a0c565b809150509250929050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611bed57611bed611bba565b01949350505050565b600082821015611c0857611c08611bba565b500390565b60008219821115611c2057611c20611bba565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c4f57611c4f611bba565b5060010190565b600082611c7357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9257611c92611bba565b50029056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206a61ce250d4ea20d50385394c7170095b998742700698fbe2fa2866ea707f09164736f6c634300080a0033",
          "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x185 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x4D5 JUMPI DUP1 PUSH4 0xEA2F0B37 EQ PUSH2 0x51B JUMPI DUP1 PUSH4 0xEC2A520A EQ PUSH2 0x53B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x475 JUMPI DUP1 PUSH4 0xAACEBBE3 EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xCAAC7934 EQ PUSH2 0x4B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3CD JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x7AFAD249 EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x440 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D838119 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x437823EC GT PUSH2 0x118 JUMPI DUP1 PUSH4 0x437823EC EQ PUSH2 0x319 JUMPI DUP1 PUSH4 0x47062402 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x49BD5A5E EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x5342ACB4 EQ PUSH2 0x394 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D838119 EQ PUSH2 0x2B7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x2D7 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x2F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x1694505E EQ PUSH2 0x1EC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x257 JUMPI DUP1 PUSH4 0x2B14CA56 EQ PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x18C JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x57B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B3 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x8 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A50 JUMP JUMPDEST PUSH2 0x624 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x29C SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2D2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A91 JUMP JUMPDEST PUSH2 0x68D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x305 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x314 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x334 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x347 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x29C SWAP1 PUSH2 0xFFFF DUP1 DUP3 AND SWAP2 PUSH3 0x10000 SWAP1 DIV AND DUP3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x220 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x3E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x79A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x7F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x41D CALLDATASIZE PUSH1 0x4 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0x86D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x220 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x44C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A6 PUSH2 0x968 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x470 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x977 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x481 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x490 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A24 JUMP JUMPDEST PUSH2 0x9C6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x4B0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0x9D3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xB SLOAD PUSH2 0x220 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x4F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B11 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x536 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0xA1F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x547 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x556 CALLDATASIZE PUSH1 0x4 PUSH2 0x1ADE JUMP JUMPDEST PUSH2 0xA6A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x339 PUSH2 0x576 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AAA JUMP JUMPDEST PUSH2 0xB66 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xC DUP1 SLOAD PUSH2 0x58A SWAP1 PUSH2 0x1B4A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5B6 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x603 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5D8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x603 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5E6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A CALLER DUP5 DUP5 PUSH2 0xC50 JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x631 DUP5 DUP5 DUP5 PUSH2 0xD74 JUMP JUMPDEST PUSH2 0x683 DUP5 CALLER PUSH2 0x67E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1C98 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH2 0xC50 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x9 SLOAD DUP3 GT ISZERO PUSH2 0x6F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206C657373207468616E20746F74616C2072 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x65666C656374696F6E73 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x703 PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH2 0x70F DUP4 DUP3 PUSH2 0xF56 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD SWAP1 SWAP2 PUSH2 0x61A SWAP2 DUP6 SWAP1 PUSH2 0x67E SWAP1 DUP7 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x776 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x7D7 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x61E SWAP1 PUSH2 0x68D JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x823 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x897 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x8A3 DUP3 DUP5 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0x8E9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x427579466565206578636565642031303 PUSH1 0x7C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH3 0x10000 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 DUP4 AND DUP2 DUP4 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH32 0x3D839C4D8187EDED7CFBDFB38E8C68AE748D7C674400C8C3B8C837BA2933D1AC SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0xF DUP1 SLOAD PUSH2 0xFFFF SWAP3 DUP4 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH1 0xD DUP1 SLOAD PUSH2 0x58A SWAP1 PUSH2 0x1B4A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A CALLER DUP5 PUSH2 0x67E DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CC0 PUSH1 0x25 SWAP2 CODECOPY CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A CALLER DUP5 DUP5 PUSH2 0xD74 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA49 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x64 PUSH2 0xAA0 DUP3 DUP5 PUSH2 0x1BD0 JUMP JUMPDEST PUSH2 0xFFFF AND GT ISZERO PUSH2 0xAE7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x53656C6C466565206578636565642031303 PUSH1 0x74 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH2 0xFFFF DUP1 DUP5 AND DUP3 MSTORE PUSH3 0x10000 SWAP1 SWAP4 DIV DUP4 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 DUP4 AND DUP2 DUP4 ADD MSTORE SWAP2 DUP4 AND PUSH1 0x60 DUP4 ADD MSTORE MLOAD PUSH32 0x5453929BC359B94BDD2542A6D8391CA15FE386D74F044DB5277328A36DE3C650 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 PUSH1 0x10 DUP1 SLOAD PUSH2 0xFFFF SWAP3 DUP4 AND PUSH3 0x10000 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP2 AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xBF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD13 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDD8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xE3A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0xE9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657220616D6F756E74206D757374206265206772656174657220 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x7468616E207A65726F PUSH1 0xB8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 SWAP1 PUSH1 0xFF AND DUP1 PUSH2 0xEDE JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0xEE7 JUMPI POP PUSH1 0x0 JUMPDEST PUSH2 0xEF3 DUP5 DUP5 DUP5 DUP5 PUSH2 0xFF7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0xF1D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xF2A DUP5 DUP7 PUSH2 0x1BF6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xF40 PUSH2 0x12A3 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0xF4F DUP3 DUP3 PUSH2 0xF56 JUMP JUMPDEST SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x70F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 DUP2 MSTORE POP PUSH2 0x1425 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xFA5 DUP4 DUP6 PUSH2 0x1C0D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x113D JUMPI PUSH2 0x100F PUSH1 0x11 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x107A JUMPI PUSH2 0x107A PUSH1 0xF SLOAD PUSH1 0x11 DUP1 SLOAD PUSH3 0x10000 DUP1 DUP5 DIV PUSH2 0xFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x10BC JUMPI PUSH2 0x10BC PUSH2 0x1453 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO DUP1 ISZERO PUSH2 0x1130 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x113D JUMPI PUSH2 0x113D PUSH2 0x1453 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x117E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1193 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1481 JUMP JUMPDEST PUSH2 0x1291 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x11D4 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x11E4 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x15BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x1226 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x1236 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x1671 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1276 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1286 JUMPI PUSH2 0x118E DUP5 DUP5 DUP5 PUSH2 0x16C3 JUMP JUMPDEST PUSH2 0x1291 DUP5 DUP5 DUP5 PUSH2 0x1671 JUMP JUMPDEST PUSH2 0xEF3 PUSH1 0x11 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 DUP3 JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x13F5 JUMPI DUP3 PUSH1 0x2 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12D2 JUMPI PUSH2 0x12D2 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT DUP1 PUSH2 0x133D JUMPI POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1316 JUMPI PUSH2 0x1316 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD GT JUMPDEST ISZERO PUSH2 0x1353 JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD SWAP5 POP SWAP5 POP POP POP POP SWAP1 SWAP2 JUMP JUMPDEST PUSH2 0x1399 PUSH1 0x2 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x136D JUMPI PUSH2 0x136D PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP5 SWAP1 PUSH2 0x1740 JUMP JUMPDEST SWAP3 POP PUSH2 0x13E1 PUSH1 0x3 PUSH1 0x0 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x13B5 JUMPI PUSH2 0x13B5 PUSH2 0x1C25 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH2 0x1740 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0x13ED DUP2 PUSH2 0x1C3B JUMP JUMPDEST SWAP2 POP POP PUSH2 0x12B0 JUMP JUMPDEST POP PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x1405 SWAP2 PUSH2 0xF56 JUMP JUMPDEST DUP3 LT ISZERO PUSH2 0x141C JUMPI PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD SWAP4 POP SWAP4 POP POP POP SWAP1 SWAP2 JUMP JUMPDEST SWAP1 SWAP4 SWAP1 SWAP3 POP SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 PUSH2 0x1446 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F0 SWAP2 SWAP1 PUSH2 0x19B7 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0xF2A DUP5 DUP7 PUSH2 0x1C56 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH1 0x11 DUP1 SLOAD PUSH3 0x10000 DUP1 DUP5 DIV PUSH2 0xFFFF SWAP1 DUP2 AND SWAP1 SWAP2 MUL PUSH4 0xFFFFFFFF NOT SWAP1 SWAP3 AND SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x148F DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x14AD DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH2 0x17C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x14D8 SWAP1 DUP9 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1507 SWAP1 DUP5 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP11 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x1536 SWAP1 DUP4 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x1558 DUP5 PUSH2 0x1814 JUMP JUMPDEST PUSH2 0x1562 DUP2 DUP7 PUSH2 0x18D4 JUMP JUMPDEST DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP9 PUSH1 0x40 MLOAD PUSH2 0x15A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x15C8 DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x15E1 DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x160C SWAP1 DUP5 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP2 DUP12 AND DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH2 0x1642 SWAP1 DUP8 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x1536 SWAP1 DUP4 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x167F DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1698 DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x1507 SWAP1 DUP5 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16D1 DUP5 PUSH2 0x1782 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x16EA DUP8 DUP7 DUP7 PUSH2 0x14A8 PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 SWAP6 POP SWAP1 SWAP4 POP SWAP2 POP PUSH2 0x1715 SWAP1 DUP9 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE PUSH1 0x2 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x160C SWAP1 DUP5 JUMPDEST PUSH1 0x0 PUSH2 0x70F DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 DUP2 MSTORE POP PUSH2 0xEF9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1791 DUP6 PUSH2 0x18F8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x179E DUP7 PUSH2 0x191A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17B6 DUP3 PUSH2 0x17B0 DUP10 DUP7 PUSH2 0x1740 JUMP JUMPDEST SWAP1 PUSH2 0x1740 JUMP JUMPDEST SWAP8 SWAP3 SWAP7 POP SWAP1 SWAP5 POP SWAP1 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 DUP1 PUSH2 0x17D3 DUP9 DUP7 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17E1 DUP9 DUP8 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x17EF DUP9 DUP9 PUSH2 0x1938 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1801 DUP3 PUSH2 0x17B0 DUP7 DUP7 PUSH2 0x1740 JUMP JUMPDEST SWAP4 SWAP12 SWAP4 SWAP11 POP SWAP2 SWAP9 POP SWAP2 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x181E PUSH2 0xF33 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x182C DUP4 DUP4 PUSH2 0x1938 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x1854 SWAP1 DUP3 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP6 SWAP1 SWAP6 SSTORE SWAP3 SLOAD SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x18CF JUMPI PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x18B3 SWAP1 DUP5 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x18E1 SWAP1 DUP4 PUSH2 0x1740 JUMP JUMPDEST PUSH1 0x9 SSTORE PUSH1 0xA SLOAD PUSH2 0x18F1 SWAP1 DUP3 PUSH2 0xF98 JUMP JUMPDEST PUSH1 0xA SSTORE POP POP JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x61E SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1914 SWAP1 DUP6 SWAP1 PUSH2 0xFFFF AND PUSH2 0x1938 JUMP JUMPDEST SWAP1 PUSH2 0xF56 JUMP JUMPDEST PUSH1 0x11 SLOAD PUSH1 0x0 SWAP1 PUSH2 0x61E SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x1914 SWAP1 DUP6 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH2 0xFFFF AND JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1947 JUMPI POP PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1953 DUP4 DUP6 PUSH2 0x1C78 JUMP JUMPDEST SWAP1 POP DUP3 PUSH2 0x1960 DUP6 DUP4 PUSH2 0x1C56 JUMP JUMPDEST EQ PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206D756C7469706C69636174696F6E206F766572666C6F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x77 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x19E4 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x19C8 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x19F6 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1A21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1A42 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1A70 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x1A80 DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1AA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x70F DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x1AD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AFA DUP4 PUSH2 0x1AC7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B08 PUSH1 0x20 DUP5 ADD PUSH2 0x1AC7 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1B2F DUP2 PUSH2 0x1A0C JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1B3F DUP2 PUSH2 0x1A0C JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B5E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1B7F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1BED JUMPI PUSH2 0x1BED PUSH2 0x1BBA JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1C08 JUMPI PUSH2 0x1C08 PUSH2 0x1BBA JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1C20 JUMPI PUSH2 0x1C20 PUSH2 0x1BBA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1C4F JUMPI PUSH2 0x1C4F PUSH2 0x1BBA JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1C73 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C92 PUSH2 0x1BBA JUMP JUMPDEST POP MUL SWAP1 JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20646563 PUSH19 0x656173656420616C6C6F77616E63652062656C PUSH16 0x77207A65726FA2646970667358221220 PUSH11 0x61CE250D4EA20D50385394 0xC7 OR STOP SWAP6 0xB9 SWAP9 PUSH21 0x2700698FBE2FA2866EA707F09164736F6C63430008 EXP STOP CALLER ",
          "sourceMap": "27647:16103:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29862:83;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;30847:193;;;;;;;;;;-1:-1:-1;30847:193:0;;;;;:::i;:::-;;:::i;:::-;;;1237:14:1;;1230:22;1212:41;;1200:2;1185:18;30847:193:0;1072:187:1;28802:51:0;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1455:32:1;;;1437:51;;1425:2;1410:18;28802:51:0;1264:230:1;30139:95:0;;;;;;;;;;-1:-1:-1;30219:7:0;;30139:95;;;1645:25:1;;;1633:2;1618:18;30139:95:0;1499:177:1;31048:446:0;;;;;;;;;;-1:-1:-1;31048:446:0;;;;;:::i;:::-;;:::i;28705:22::-;;;;;;;;;;-1:-1:-1;28705:22:0;;;;;;;;;;;;;;;;;;;2322:6:1;2355:15;;;2337:34;;2407:15;;;;2402:2;2387:18;;2380:43;2285:18;28705:22:0;2142:287:1;32218:322:0;;;;;;;;;;-1:-1:-1;32218:322:0;;;;;:::i;:::-;;:::i;30048:83::-;;;;;;;;;;-1:-1:-1;30114:9:0;;30048:83;;30114:9;;;;2761:36:1;;2749:2;2734:18;30048:83:0;2619:184:1;31502:300:0;;;;;;;;;;-1:-1:-1;31502:300:0;;;;;:::i;:::-;;:::i;32706:111::-;;;;;;;;;;-1:-1:-1;32706:111:0;;;;;:::i;:::-;;:::i;:::-;;28678:20;;;;;;;;;;-1:-1:-1;28678:20:0;;;;;;;;;;;;;;;28860:38;;;;;;;;;;;;;;;36927:124;;;;;;;;;;-1:-1:-1;36927:124:0;;;;;:::i;:::-;-1:-1:-1;;;;;37016:27:0;36992:4;37016:27;;;:18;:27;;;;;;;;;36927:124;30242:198;;;;;;;;;;-1:-1:-1;30242:198:0;;;;;:::i;:::-;;:::i;17589:148::-;;;;;;;;;;;;;:::i;33551:282::-;;;;;;;;;;-1:-1:-1;33551:282:0;;;;;:::i;:::-;;:::i;16947:79::-;;;;;;;;;;-1:-1:-1;16985:7:0;17012:6;-1:-1:-1;;;;;17012:6:0;16947:79;;29953:87;;;;;;;;;;;;;:::i;31810:400::-;;;;;;;;;;-1:-1:-1;31810:400:0;;;;;:::i;:::-;;:::i;30448:199::-;;;;;;;;;;-1:-1:-1;30448:199:0;;;;;:::i;:::-;;:::i;32548:150::-;;;;;;;;;;-1:-1:-1;32548:150:0;;;;;:::i;:::-;;:::i;28284:112::-;;;;;;;;;;-1:-1:-1;28284:112:0;;;;-1:-1:-1;;;;;28284:112:0;;;30655:184;;;;;;;;;;-1:-1:-1;30655:184:0;;;;;:::i;:::-;-1:-1:-1;;;;;30804:18:0;;;30772:7;30804:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;30655:184;32825:110;;;;;;;;;;-1:-1:-1;32825:110:0;;;;;:::i;:::-;;:::i;33101:289::-;;;;;;;;;;-1:-1:-1;33101:289:0;;;;;:::i;:::-;;:::i;17892:281::-;;;;;;;;;;-1:-1:-1;17892:281:0;;;;;:::i;:::-;;:::i;29862:83::-;29899:13;29932:5;29925:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29862:83;:::o;30847:193::-;30949:4;30971:39;9033:10;30994:7;31003:6;30971:8;:39::i;:::-;-1:-1:-1;31028:4:0;30847:193;;;;;:::o;31048:446::-;31180:4;31197:36;31207:6;31215:9;31226:6;31197:9;:36::i;:::-;31244:220;31267:6;9033:10;31315:138;31371:6;31315:138;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;31315:19:0;;;;;;:11;:19;;;;;;;;9033:10;31315:33;;;;;;;;;;:37;:138::i;:::-;31244:8;:220::i;:::-;-1:-1:-1;31482:4:0;31048:446;;;;;:::o;32218:322::-;32312:7;32370;;32359;:18;;32337:110;;;;-1:-1:-1;;;32337:110:0;;5157:2:1;32337:110:0;;;5139:21:1;5196:2;5176:18;;;5169:30;5235:34;5215:18;;;5208:62;-1:-1:-1;;;5286:18:1;;;5279:40;5336:19;;32337:110:0;;;;;;;;;32458:19;32480:10;:8;:10::i;:::-;32458:32;-1:-1:-1;32508:24:0;:7;32458:32;32508:11;:24::i;:::-;32501:31;32218:322;-1:-1:-1;;;32218:322:0:o;31502:300::-;9033:10;31617:4;31711:25;;;:11;:25;;;;;;;;-1:-1:-1;;;;;31711:34:0;;;;;;;;;;31617:4;;31639:133;;31689:7;;31711:50;;31750:10;31711:38;:50::i;32706:111::-;17159:6;;-1:-1:-1;;;;;17159:6:0;9033:10;17159:22;17151:67;;;;-1:-1:-1;;;17151:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;32775:27:0::1;;::::0;;;:18:::1;:27;::::0;;;;:34;;-1:-1:-1;;32775:34:0::1;32805:4;32775:34;::::0;;32706:111::o;30242:198::-;-1:-1:-1;;;;;30332:20:0;;30308:7;30332:20;;;:11;:20;;;;;;;;30328:49;;;-1:-1:-1;;;;;;30361:16:0;;;;;:7;:16;;;;;;;30242:198::o;30328:49::-;-1:-1:-1;;;;;30415:16:0;;;;;;:7;:16;;;;;;30395:37;;:19;:37::i;17589:148::-;17159:6;;-1:-1:-1;;;;;17159:6:0;9033:10;17159:22;17151:67;;;;-1:-1:-1;;;17151:67:0;;;;;;;:::i;:::-;17696:1:::1;17680:6:::0;;17659:40:::1;::::0;-1:-1:-1;;;;;17680:6:0;;::::1;::::0;17659:40:::1;::::0;17696:1;;17659:40:::1;17727:1;17710:19:::0;;-1:-1:-1;;;;;;17710:19:0::1;::::0;;17589:148::o;33551:282::-;17159:6;;-1:-1:-1;;;;;17159:6:0;9033:10;17159:22;17151:67;;;;-1:-1:-1;;;17151:67:0;;;;;;;:::i;:::-;33657:3:::1;33638:15;33644:9:::0;33638:3;:15:::1;:::i;:::-;:22;;;;33630:52;;;::::0;-1:-1:-1;;;33630:52:0;;6290:2:1;33630:52:0::1;::::0;::::1;6272:21:1::0;6329:2;6309:18;;;6302:30;-1:-1:-1;;;6348:18:1;;;6341:47;6405:18;;33630:52:0::1;6088:341:1::0;33630:52:0::1;33712:6;:10:::0;33698:59:::1;::::0;;33712:10:::1;::::0;;::::1;6686:34:1::0;;33724:16:0;;;::::1;::::0;::::1;6751:2:1::0;6736:18;;6729:43;6808:15;;;6788:18;;;6781:43;6860:15;;;6855:2;6840:18;;6833:43;33698:59:0;::::1;::::0;;;;6648:3:1;33698:59:0;;::::1;33770:6;:16:::0;;::::1;33797:28:::0;;::::1;::::0;::::1;-1:-1:-1::0;;33797:28:0;;;33770:16;;;::::1;33797:28:::0;;;;;;;::::1;::::0;;33551:282::o;29953:87::-;29992:13;30025:7;30018:14;;;;;:::i;31810:400::-;31930:4;31952:228;9033:10;32002:7;32024:145;32081:15;32024:145;;;;;;;;;;;;;;;;;9033:10;32024:25;;;;:11;:25;;;;;;;;-1:-1:-1;;;;;32024:34:0;;;;;;;;;;;;:38;:145::i;30448:199::-;30553:4;30575:42;9033:10;30599:9;30610:6;30575:9;:42::i;32548:150::-;17159:6;;-1:-1:-1;;;;;17159:6:0;9033:10;17159:22;17151:67;;;;-1:-1:-1;;;17151:67:0;;;;;;;:::i;:::-;32660:17:::1;:30:::0;;-1:-1:-1;;;;;;32660:30:0::1;-1:-1:-1::0;;;;;32660:30:0;;;::::1;::::0;;;::::1;::::0;;32548:150::o;32825:110::-;17159:6;;-1:-1:-1;;;;;17159:6:0;9033:10;17159:22;17151:67;;;;-1:-1:-1;;;17151:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;32892:27:0::1;32922:5;32892:27:::0;;;:18:::1;:27;::::0;;;;:35;;-1:-1:-1;;32892:35:0::1;::::0;;32825:110::o;33101:289::-;17159:6;;-1:-1:-1;;;;;17159:6:0;9033:10;17159:22;17151:67;;;;-1:-1:-1;;;17151:67:0;;;;;;;:::i;:::-;33208:3:::1;33189:15;33195:9:::0;33189:3;:15:::1;:::i;:::-;:22;;;;33181:53;;;::::0;-1:-1:-1;;;33181:53:0;;7089:2:1;33181:53:0::1;::::0;::::1;7071:21:1::0;7128:2;7108:18;;;7101:30;-1:-1:-1;;;7147:18:1;;;7140:48;7205:18;;33181:53:0::1;6887:342:1::0;33181:53:0::1;33265:7;:11:::0;33250:62:::1;::::0;;33265:11:::1;::::0;;::::1;6686:34:1::0;;33278:17:0;;;::::1;::::0;::::1;6751:2:1::0;6736:18;;6729:43;6808:15;;;6788:18;;;6781:43;6860:15;;;6855:2;6840:18;;6833:43;33250:62:0;::::1;::::0;;;;6648:3:1;33250:62:0;;::::1;33325:7;:17:::0;;::::1;33353:29:::0;;::::1;::::0;::::1;-1:-1:-1::0;;33353:29:0;;;33325:17;;;::::1;33353:29:::0;;;;;;;::::1;::::0;;33101:289::o;17892:281::-;17159:6;;-1:-1:-1;;;;;17159:6:0;9033:10;17159:22;17151:67;;;;-1:-1:-1;;;17151:67:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;17995:22:0;::::1;17973:110;;;::::0;-1:-1:-1;;;17973:110:0;;7436:2:1;17973:110:0::1;::::0;::::1;7418:21:1::0;7475:2;7455:18;;;7448:30;7514:34;7494:18;;;7487:62;-1:-1:-1;;;7565:18:1;;;7558:36;7611:19;;17973:110:0::1;7234:402:1::0;17973:110:0::1;18120:6;::::0;;18099:38:::1;::::0;-1:-1:-1;;;;;18099:38:0;;::::1;::::0;18120:6;::::1;::::0;18099:38:::1;::::0;::::1;18148:6;:17:::0;;-1:-1:-1;;;;;;18148:17:0::1;-1:-1:-1::0;;;;;18148:17:0;;;::::1;::::0;;;::::1;::::0;;17892:281::o;37059:371::-;-1:-1:-1;;;;;37186:19:0;;37178:68;;;;-1:-1:-1;;;37178:68:0;;7843:2:1;37178:68:0;;;7825:21:1;7882:2;7862:18;;;7855:30;7921:34;7901:18;;;7894:62;-1:-1:-1;;;7972:18:1;;;7965:34;8016:19;;37178:68:0;7641:400:1;37178:68:0;-1:-1:-1;;;;;37265:21:0;;37257:68;;;;-1:-1:-1;;;37257:68:0;;8248:2:1;37257:68:0;;;8230:21:1;8287:2;8267:18;;;8260:30;8326:34;8306:18;;;8299:62;-1:-1:-1;;;8377:18:1;;;8370:32;8419:19;;37257:68:0;8046:398:1;37257:68:0;-1:-1:-1;;;;;37338:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;37390:32;;1645:25:1;;;37390:32:0;;1618:18:1;37390:32:0;;;;;;;37059:371;;;:::o;37438:747::-;-1:-1:-1;;;;;37560:18:0;;37552:68;;;;-1:-1:-1;;;37552:68:0;;8651:2:1;37552:68:0;;;8633:21:1;8690:2;8670:18;;;8663:30;8729:34;8709:18;;;8702:62;-1:-1:-1;;;8780:18:1;;;8773:35;8825:19;;37552:68:0;8449:401:1;37552:68:0;-1:-1:-1;;;;;37639:16:0;;37631:64;;;;-1:-1:-1;;;37631:64:0;;9057:2:1;37631:64:0;;;9039:21:1;9096:2;9076:18;;;9069:30;9135:34;9115:18;;;9108:62;-1:-1:-1;;;9186:18:1;;;9179:33;9229:19;;37631:64:0;8855:399:1;37631:64:0;37723:1;37714:6;:10;37706:64;;;;-1:-1:-1;;;37706:64:0;;9461:2:1;37706:64:0;;;9443:21:1;9500:2;9480:18;;;9473:30;9539:34;9519:18;;;9512:62;-1:-1:-1;;;9590:18:1;;;9583:39;9639:19;;37706:64:0;9259:405:1;37706:64:0;-1:-1:-1;;;;;37964:24:0;;37844:12;37964:24;;;:18;:24;;;;;;37859:4;;37964:24;;;:50;;-1:-1:-1;;;;;;37992:22:0;;;;;;:18;:22;;;;;;;;37964:50;37960:98;;;-1:-1:-1;38041:5:0;37960:98;38136:41;38151:4;38157:2;38161:6;38169:7;38136:14;:41::i;:::-;37541:644;37438:747;;;:::o;5245:226::-;5365:7;5401:12;5393:6;;;;5385:29;;;;-1:-1:-1;;;5385:29:0;;;;;;;;:::i;:::-;-1:-1:-1;5425:9:0;5437:5;5441:1;5437;:5;:::i;:::-;5425:17;5245:226;-1:-1:-1;;;;;5245:226:0:o;35074:164::-;35116:7;35137:15;35154;35173:19;:17;:19::i;:::-;35136:56;;-1:-1:-1;35136:56:0;-1:-1:-1;35210:20:0;35136:56;;35210:11;:20::i;:::-;35203:27;;;;35074:164;:::o;6677:132::-;6735:7;6762:39;6766:1;6769;6762:39;;;;;;;;;;;;;;;;;:3;:39::i;4342:181::-;4400:7;;4432:5;4436:1;4432;:5;:::i;:::-;4420:17;;4461:1;4456;:6;;4448:46;;;;-1:-1:-1;;;4448:46:0;;10134:2:1;4448:46:0;;;10116:21:1;10173:2;10153:18;;;10146:30;10212:29;10192:18;;;10185:57;10259:18;;4448:46:0;9932:351:1;39390:1195:0;39545:7;39541:403;;;39569:14;36637:7;:11;;-1:-1:-1;;36659:17:0;;;36594:90;39569:14;39612:13;-1:-1:-1;;;;;39602:23:0;:6;-1:-1:-1;;;;;39602:23:0;;39598:72;;;39646:8;36739:6;:10;36729:7;:20;;36776:16;;;;36739:10;36776:16;;;36760:32;;;-1:-1:-1;;36760:32:0;;;36739:10;;36760:32;;;;;;;;;;36692:108;39646:8;39701:13;-1:-1:-1;;;;;39688:26:0;:9;-1:-1:-1;;;;;39688:26:0;;39684:76;;;39735:9;:7;:9::i;:::-;39841:13;-1:-1:-1;;;;;39831:23:0;:6;-1:-1:-1;;;;;39831:23:0;;;39830:57;;;;;39873:13;-1:-1:-1;;;;;39860:26:0;:9;-1:-1:-1;;;;;39860:26:0;;;39830:57;39826:107;;;39908:9;:7;:9::i;:::-;-1:-1:-1;;;;;39960:19:0;;;;;;:11;:19;;;;;;;;:46;;;;-1:-1:-1;;;;;;39984:22:0;;;;;;:11;:22;;;;;;;;39983:23;39960:46;39956:597;;;40023:48;40045:6;40053:9;40064:6;40023:21;:48::i;:::-;39956:597;;;-1:-1:-1;;;;;40094:19:0;;;;;;:11;:19;;;;;;;;40093:20;:46;;;;-1:-1:-1;;;;;;40117:22:0;;;;;;:11;:22;;;;;;;;40093:46;40089:464;;;40156:46;40176:6;40184:9;40195:6;40156:19;:46::i;40089:464::-;-1:-1:-1;;;;;40225:19:0;;;;;;:11;:19;;;;;;;;40224:20;:47;;;;-1:-1:-1;;;;;;40249:22:0;;;;;;:11;:22;;;;;;;;40248:23;40224:47;40220:333;;;40288:44;40306:6;40314:9;40325:6;40288:17;:44::i;40220:333::-;-1:-1:-1;;;;;40354:19:0;;;;;;:11;:19;;;;;;;;:45;;;;-1:-1:-1;;;;;;40377:22:0;;;;;;:11;:22;;;;;;;;40354:45;40350:203;;;40416:48;40438:6;40446:9;40457:6;40416:21;:48::i;40350:203::-;40497:44;40515:6;40523:9;40534:6;40497:17;:44::i;:::-;40563:14;36637:7;:11;;-1:-1:-1;;36659:17:0;;;36594:90;35246:605;35344:7;;35380;;35297;;;;;35398:338;35422:9;:16;35418:20;;35398:338;;;35506:7;35482;:21;35490:9;35500:1;35490:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;35490:12:0;35482:21;;;;;;;;;;;;;:31;;:83;;;35558:7;35534;:21;35542:9;35552:1;35542:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;35542:12:0;35534:21;;;;;;;;;;;;;:31;35482:83;35460:146;;;35589:7;;35598;;35581:25;;;;;;;35246:605;;:::o;35460:146::-;35631:34;35643:7;:21;35651:9;35661:1;35651:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;35651:12:0;35643:21;;;;;;;;;;;;;35631:7;;:11;:34::i;:::-;35621:44;;35690:34;35702:7;:21;35710:9;35720:1;35710:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;35710:12:0;35702:21;;;;;;;;;;;;;35690:7;;:11;:34::i;:::-;35680:44;-1:-1:-1;35440:3:0;;;;:::i;:::-;;;;35398:338;;;-1:-1:-1;35772:7:0;;35760;;:20;;:11;:20::i;:::-;35750:7;:30;35746:61;;;35790:7;;35799;;35782:25;;;;;;35246:605;;:::o;35746:61::-;35826:7;;35835;;-1:-1:-1;35246:605:0;-1:-1:-1;35246:605:0:o;7305:312::-;7425:7;7460:12;7453:5;7445:28;;;;-1:-1:-1;;;7445:28:0;;;;;;;;:::i;:::-;-1:-1:-1;7484:9:0;7496:5;7500:1;7496;:5;:::i;36808:111::-;36856:7;:11;36846:7;:21;;36894:17;;;;36856:11;36894:17;;;36878:33;;;-1:-1:-1;;36878:33:0;;;36856:11;;36878:33;;;;;;;;;;36808:111::o;42114:777::-;42265:23;42303:12;42330:18;42362:20;42374:7;42362:11;:20::i;:::-;42250:132;;;;;;42394:15;42411:23;42436:12;42452:113;42478:7;42500:4;42519:10;42544;:8;:10::i;:::-;42452:11;:113::i;:::-;-1:-1:-1;;;;;42596:15:0;;;;;;:7;:15;;;;;;42393:172;;-1:-1:-1;42393:172:0;;-1:-1:-1;42393:172:0;-1:-1:-1;42596:28:0;;42616:7;42596:19;:28::i;:::-;-1:-1:-1;;;;;42578:15:0;;;;;;:7;:15;;;;;;;;:46;;;;42653:7;:15;;;;:28;;42673:7;42653:19;:28::i;:::-;-1:-1:-1;;;;;42635:15:0;;;;;;;:7;:15;;;;;;:46;;;;42713:18;;;;;;;:39;;42736:15;42713:22;:39::i;:::-;-1:-1:-1;;;;;42692:18:0;;;;;;:7;:18;;;;;:60;42763:26;42778:10;42763:14;:26::i;:::-;42800:23;42812:4;42818;42800:11;:23::i;:::-;42856:9;-1:-1:-1;;;;;42839:44:0;42848:6;-1:-1:-1;;;;;42839:44:0;;42867:15;42839:44;;;;1645:25:1;;1633:2;1618:18;;1499:177;42839:44:0;;;;;;;;42239:652;;;;;;42114:777;;;:::o;41317:789::-;41466:23;41504:12;41531:18;41563:20;41575:7;41563:11;:20::i;:::-;41451:132;;;;;;41595:15;41612:23;41637:12;41653:113;41679:7;41701:4;41720:10;41745;:8;:10::i;41653:113::-;-1:-1:-1;;;;;41797:15:0;;;;;;:7;:15;;;;;;41594:172;;-1:-1:-1;41594:172:0;;-1:-1:-1;41594:172:0;-1:-1:-1;41797:28:0;;41594:172;41797:19;:28::i;:::-;-1:-1:-1;;;;;41779:15:0;;;;;;;:7;:15;;;;;;;;:46;;;;41857:18;;;;;:7;:18;;;;;:39;;41880:15;41857:22;:39::i;:::-;-1:-1:-1;;;;;41836:18:0;;;;;;:7;:18;;;;;;;;:60;;;;41928:7;:18;;;;:39;;41951:15;41928:22;:39::i;40593:716::-;40740:23;40778:12;40805:18;40837:20;40849:7;40837:11;:20::i;:::-;40725:132;;;;;;40869:15;40886:23;40911:12;40927:113;40953:7;40975:4;40994:10;41019;:8;:10::i;40927:113::-;-1:-1:-1;;;;;41071:15:0;;;;;;:7;:15;;;;;;40868:172;;-1:-1:-1;40868:172:0;;-1:-1:-1;40868:172:0;-1:-1:-1;41071:28:0;;40868:172;41071:19;:28::i;42899:848::-;43050:23;43088:12;43115:18;43147:20;43159:7;43147:11;:20::i;:::-;43035:132;;;;;;43179:15;43196:23;43221:12;43237:113;43263:7;43285:4;43304:10;43329;:8;:10::i;43237:113::-;-1:-1:-1;;;;;43381:15:0;;;;;;:7;:15;;;;;;43178:172;;-1:-1:-1;43178:172:0;;-1:-1:-1;43178:172:0;-1:-1:-1;43381:28:0;;43401:7;43381:19;:28::i;:::-;-1:-1:-1;;;;;43363:15:0;;;;;;:7;:15;;;;;;;;:46;;;;43438:7;:15;;;;:28;;43458:7;4806:136;4864:7;4891:43;4895:1;4898;4891:43;;;;;;;;;;;;;;;;;:3;:43::i;34090:414::-;34191:7;34213;34235;34270:12;34285:24;34301:7;34285:15;:24::i;:::-;34270:39;;34320:18;34341:30;34363:7;34341:21;:30::i;:::-;34320:51;-1:-1:-1;34382:23:0;34408:33;34320:51;34408:17;:7;34420:4;34408:11;:17::i;:::-;:21;;:33::i;:::-;34382:59;34479:4;;-1:-1:-1;34485:10:0;;-1:-1:-1;34090:414:0;;-1:-1:-1;;;34090:414:0:o;34512:554::-;34711:7;;;;34808:24;:7;34820:11;34808;:24::i;:::-;34790:42;-1:-1:-1;34843:12:0;34858:21;:4;34867:11;34858:8;:21::i;:::-;34843:36;-1:-1:-1;34890:18:0;34911:27;:10;34926:11;34911:14;:27::i;:::-;34890:48;-1:-1:-1;34949:23:0;34975:33;34890:48;34975:17;:7;34987:4;34975:11;:17::i;:33::-;35027:7;;;;-1:-1:-1;35053:4:0;;-1:-1:-1;34512:554:0;;-1:-1:-1;;;;;;;34512:554:0:o;35859:407::-;35922:19;35944:10;:8;:10::i;:::-;35922:32;-1:-1:-1;35965:18:0;35986:27;:10;35922:32;35986:14;:27::i;:::-;36061:17;;-1:-1:-1;;;;;36061:17:0;36053:26;;;;:7;:26;;;;;;35965:48;;-1:-1:-1;36053:42:0;;35965:48;36053:30;:42::i;:::-;36032:17;;;-1:-1:-1;;;;;36032:17:0;;;36024:26;;;;:7;:26;;;;;;;;:71;;;;36122:17;;;;;36110:30;;:11;:30;;;;;;;36106:152;;;36192:17;;-1:-1:-1;;;;;36192:17:0;36184:26;;;;:7;:26;;;;;;:74;;36233:10;36184:30;:74::i;:::-;36163:17;;-1:-1:-1;;;;;36163:17:0;36155:26;;;;:7;:26;;;;;:103;36106:152;35911:355;;35859:407;:::o;33935:147::-;34013:7;;:17;;34025:4;34013:11;:17::i;:::-;34003:7;:27;34054:10;;:20;;34069:4;34054:14;:20::i;:::-;34041:10;:33;-1:-1:-1;;33935:147:0:o;36274:130::-;36377:7;;36338;;36365:31;;36390:5;;36365:20;;:7;;36377;;36365:11;:20::i;:::-;:24;;:31::i;36412:174::-;36553:13;;36509:7;;36541:37;;36572:5;;36541:26;;:7;;36553:13;;;;;5730:471;5788:7;6033:6;6029:47;;-1:-1:-1;6063:1:0;6056:8;;6029:47;6088:9;6100:5;6104:1;6100;:5;:::i;:::-;6088:17;-1:-1:-1;6133:1:0;6124:5;6128:1;6088:17;6124:5;:::i;:::-;:10;6116:56;;;;-1:-1:-1;;;6116:56:0;;11157:2:1;6116:56:0;;;11139:21:1;11196:2;11176:18;;;11169:30;11235:34;11215:18;;;11208:62;-1:-1:-1;;;11286:18:1;;;11279:31;11327:19;;6116:56:0;10955:397:1;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:1;574:15;-1:-1:-1;;570:29:1;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:1:o;616:131::-;-1:-1:-1;;;;;691:31:1;;681:42;;671:70;;737:1;734;727:12;671:70;616:131;:::o;752:315::-;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:1:o;1681:456::-;1758:6;1766;1774;1827:2;1815:9;1806:7;1802:23;1798:32;1795:52;;;1843:1;1840;1833:12;1795:52;1882:9;1869:23;1901:31;1926:5;1901:31;:::i;:::-;1951:5;-1:-1:-1;2008:2:1;1993:18;;1980:32;2021:33;1980:32;2021:33;:::i;:::-;1681:456;;2073:7;;-1:-1:-1;;;2127:2:1;2112:18;;;;2099:32;;1681:456::o;2434:180::-;2493:6;2546:2;2534:9;2525:7;2521:23;2517:32;2514:52;;;2562:1;2559;2552:12;2514:52;-1:-1:-1;2585:23:1;;2434:180;-1:-1:-1;2434:180:1:o;2808:247::-;2867:6;2920:2;2908:9;2899:7;2895:23;2891:32;2888:52;;;2936:1;2933;2926:12;2888:52;2975:9;2962:23;2994:31;3019:5;2994:31;:::i;3268:159::-;3335:20;;3395:6;3384:18;;3374:29;;3364:57;;3417:1;3414;3407:12;3364:57;3268:159;;;:::o;3432:256::-;3498:6;3506;3559:2;3547:9;3538:7;3534:23;3530:32;3527:52;;;3575:1;3572;3565:12;3527:52;3598:28;3616:9;3598:28;:::i;:::-;3588:38;;3645:37;3678:2;3667:9;3663:18;3645:37;:::i;:::-;3635:47;;3432:256;;;;;:::o;4177:388::-;4245:6;4253;4306:2;4294:9;4285:7;4281:23;4277:32;4274:52;;;4322:1;4319;4312:12;4274:52;4361:9;4348:23;4380:31;4405:5;4380:31;:::i;:::-;4430:5;-1:-1:-1;4487:2:1;4472:18;;4459:32;4500:33;4459:32;4500:33;:::i;:::-;4552:7;4542:17;;;4177:388;;;;;:::o;4570:380::-;4649:1;4645:12;;;;4692;;;4713:61;;4767:4;4759:6;4755:17;4745:27;;4713:61;4820:2;4812:6;4809:14;4789:18;4786:38;4783:161;;;4866:10;4861:3;4857:20;4854:1;4847:31;4901:4;4898:1;4891:15;4929:4;4926:1;4919:15;4783:161;;4570:380;;;:::o;5366:356::-;5568:2;5550:21;;;5587:18;;;5580:30;5646:34;5641:2;5626:18;;5619:62;5713:2;5698:18;;5366:356::o;5727:127::-;5788:10;5783:3;5779:20;5776:1;5769:31;5819:4;5816:1;5809:15;5843:4;5840:1;5833:15;5859:224;5898:3;5926:6;5959:2;5956:1;5952:10;5989:2;5986:1;5982:10;6020:3;6016:2;6012:12;6007:3;6004:21;6001:47;;;6028:18;;:::i;:::-;6064:13;;5859:224;-1:-1:-1;;;;5859:224:1:o;9669:125::-;9709:4;9737:1;9734;9731:8;9728:34;;;9742:18;;:::i;:::-;-1:-1:-1;9779:9:1;;9669:125::o;9799:128::-;9839:3;9870:1;9866:6;9863:1;9860:13;9857:39;;;9876:18;;:::i;:::-;-1:-1:-1;9912:9:1;;9799:128::o;10288:127::-;10349:10;10344:3;10340:20;10337:1;10330:31;10380:4;10377:1;10370:15;10404:4;10401:1;10394:15;10420:135;10459:3;-1:-1:-1;;10480:17:1;;10477:43;;;10500:18;;:::i;:::-;-1:-1:-1;10547:1:1;10536:13;;10420:135::o;10560:217::-;10600:1;10626;10616:132;;10670:10;10665:3;10661:20;10658:1;10651:31;10705:4;10702:1;10695:15;10733:4;10730:1;10723:15;10616:132;-1:-1:-1;10762:9:1;;10560:217::o;10782:168::-;10822:7;10888:1;10884;10880:6;10876:14;10873:1;10870:21;10865:1;10858:9;10851:17;10847:45;10844:71;;;10895:18;;:::i;:::-;-1:-1:-1;10935:9:1;;10782:168::o"
        },
        "gasEstimates": {
          "creation": {
            "codeDepositCost": "1490000",
            "executionCost": "infinite",
            "totalCost": "infinite"
          },
          "external": {
            "_marketingAddress()": "2426",
            "allowance(address,address)": "infinite",
            "approve(address,uint256)": "24637",
            "balanceOf(address)": "infinite",
            "buyFee()": "2430",
            "decimals()": "2357",
            "decreaseAllowance(address,uint256)": "infinite",
            "excludeFromFee(address)": "26789",
            "includeInFee(address)": "26804",
            "increaseAllowance(address,uint256)": "27095",
            "isExcludedFromFee(address)": "2654",
            "name()": "infinite",
            "owner()": "2420",
            "renounceOwnership()": "30210",
            "sellFee()": "2497",
            "setBuyFee(uint16,uint16)": "infinite",
            "setSellFee(uint16,uint16)": "infinite",
            "symbol()": "infinite",
            "tokenFromReflection(uint256)": "infinite",
            "totalSupply()": "2371",
            "transfer(address,uint256)": "infinite",
            "transferFrom(address,address,uint256)": "infinite",
            "transferOwnership(address)": "30504",
            "uniswapV2Pair()": "infinite",
            "uniswapV2Router()": "infinite",
            "updateMarketingWallet(address)": "26772"
          },
          "internal": {
            "_approve(address,address,uint256)": "infinite",
            "_getCurrentSupply()": "infinite",
            "_getRValues(uint256,uint256,uint256,uint256)": "infinite",
            "_getRate()": "infinite",
            "_getTValues(uint256)": "infinite",
            "_reflectFee(uint256,uint256)": "infinite",
            "_takeMarketing(uint256)": "infinite",
            "_tokenTransfer(address,address,uint256,bool)": "infinite",
            "_transfer(address,address,uint256)": "infinite",
            "_transferBothExcluded(address,address,uint256)": "infinite",
            "_transferFromExcluded(address,address,uint256)": "infinite",
            "_transferStandard(address,address,uint256)": "infinite",
            "_transferToExcluded(address,address,uint256)": "infinite",
            "addLiquidity(uint256,uint256)": "infinite",
            "calculateMarketingFee(uint256)": "infinite",
            "calculateTaxFee(uint256)": "infinite",
            "removeAllFee()": "infinite",
            "setBuy()": "infinite",
            "setSell()": "26403",
            "swapTokensForEth(uint256)": "infinite"
          }
        },
        "methodIdentifiers": {
          "_marketingAddress()": "caac7934",
          "allowance(address,address)": "dd62ed3e",
          "approve(address,uint256)": "095ea7b3",
          "balanceOf(address)": "70a08231",
          "buyFee()": "47062402",
          "decimals()": "313ce567",
          "decreaseAllowance(address,uint256)": "a457c2d7",
          "excludeFromFee(address)": "437823ec",
          "includeInFee(address)": "ea2f0b37",
          "increaseAllowance(address,uint256)": "39509351",
          "isExcludedFromFee(address)": "5342acb4",
          "name()": "06fdde03",
          "owner()": "8da5cb5b",
          "renounceOwnership()": "715018a6",
          "sellFee()": "2b14ca56",
          "setBuyFee(uint16,uint16)": "7afad249",
          "setSellFee(uint16,uint16)": "ec2a520a",
          "symbol()": "95d89b41",
          "tokenFromReflection(uint256)": "2d838119",
          "totalSupply()": "18160ddd",
          "transfer(address,uint256)": "a9059cbb",
          "transferFrom(address,address,uint256)": "23b872dd",
          "transferOwnership(address)": "f2fde38b",
          "uniswapV2Pair()": "49bd5a5e",
          "uniswapV2Router()": "1694505e",
          "updateMarketingWallet(address)": "aacebbe3"
        }
      },
      "metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBuyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldBuyMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BuyTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"BuyMarketing\",\"type\":\"uint256\"}],\"name\":\"BuyFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSellTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldSellMarketing\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SellTax\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"SellMarketing\",\"type\":\"uint256\"}],\"name\":\"SellFeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_marketingAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"excludeFromFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"includeInFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isExcludedFromFee\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellFee\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"name\":\"setBuyFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"tax\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"marketing\",\"type\":\"uint16\"}],\"name\":\"setSellFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"rAmount\",\"type\":\"uint256\"}],\"name\":\"tokenFromReflection\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Pair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"uniswapV2Router\",\"outputs\":[{\"internalType\":\"contract IUniswapV2Router02\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"updateMarketingWallet\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ASIX.sol\":\"ASIX_TOKEN\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/ASIX.sol\":{\"content\":\"/**\\r\\n *Submitted for verification at BscScan.com on 2022-01-19\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\n\\r\\n/**\\r\\n\\r\\n     \\\\      ___| _ _| \\\\ \\\\  /     __ __|  _ \\\\   |  /  ____|   \\\\  | \\r\\n    _ \\\\   \\\\___ \\\\   |   \\\\  /         |   |   |  ' /   __|      \\\\ | \\r\\n   ___ \\\\        |  |      \\\\         |   |   |  . \\\\   |      |\\\\  | \\r\\n _/    _\\\\ _____/ ___|  _/\\\\_\\\\       _|  \\\\___/  _|\\\\_\\\\ _____| _| \\\\_| \\r\\n                                                                  \\r\\n\\r\\n    Official Website\\r\\n    https://asixtoken.com/\\r\\n\\r\\n    Telegram Global Community\\r\\n    https://t.me/asixtoken\\r\\n\\r\\n    Twitter\\r\\n    https://twitter.com/AsixToken\\r\\n\\r\\n    Instagram\\r\\n    https://www.instagram.com/asixtoken/\\r\\n\\r\\n    Medium\\r\\n    https://medium.com/@asixtokenid\\r\\n\\r\\n    Reddit\\r\\n    https://www.reddit.com/user/AsixToken\\r\\n\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        external\\r\\n        returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\r\\n * in bugs, because programmers usually assume that an overflow raises an\\r\\n * error, which is the standard behavior in high level programming languages.\\r\\n * `SafeMath` restores this intuition by reverting the transaction when an\\r\\n * operation overflows.\\r\\n *\\r\\n * Using this library instead of the unchecked operations eliminates an entire\\r\\n * class of bugs, so it's recommended to use it always.\\r\\n */\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address payable) {\\r\\n        return payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\r\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\r\\n        // for accounts without code, i.e. `keccak256('')`\\r\\n        bytes32 codehash;\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly {\\r\\n            codehash := extcodehash(account)\\r\\n        }\\r\\n        return (codehash != accountHash && codehash != 0x0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Address: insufficient balance\\\"\\r\\n        );\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(\\r\\n            success,\\r\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data)\\r\\n        internal\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(\\r\\n                target,\\r\\n                data,\\r\\n                value,\\r\\n                \\\"Address: low-level call with value failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(\\r\\n            address(this).balance >= value,\\r\\n            \\\"Address: insufficient balance for call\\\"\\r\\n        );\\r\\n        return _functionCallWithValue(target, data, value, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 weiValue,\\r\\n        string memory errorMessage\\r\\n    ) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(\\r\\n            data\\r\\n        );\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(\\r\\n        address indexed token0,\\r\\n        address indexed token1,\\r\\n        address pair,\\r\\n        uint256\\r\\n    );\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        view\\r\\n        returns (address pair);\\r\\n\\r\\n    function allPairs(uint256) external view returns (address pair);\\r\\n\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n\\r\\n    function symbol() external pure returns (string memory);\\r\\n\\r\\n    function decimals() external pure returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\r\\n    function nonces(address owner) external view returns (uint256);\\r\\n\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\r\\n    event Burn(\\r\\n        address indexed sender,\\r\\n        uint256 amount0,\\r\\n        uint256 amount1,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint256 amount0In,\\r\\n        uint256 amount1In,\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\r\\n\\r\\n    function factory() external view returns (address);\\r\\n\\r\\n    function token0() external view returns (address);\\r\\n\\r\\n    function token1() external view returns (address);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112 reserve0,\\r\\n            uint112 reserve1,\\r\\n            uint32 blockTimestampLast\\r\\n        );\\r\\n\\r\\n    function price0CumulativeLast() external view returns (uint256);\\r\\n\\r\\n    function price1CumulativeLast() external view returns (uint256);\\r\\n\\r\\n    function kLast() external view returns (uint256);\\r\\n\\r\\n    function mint(address to) external returns (uint256 liquidity);\\r\\n\\r\\n    function burn(address to)\\r\\n        external\\r\\n        returns (uint256 amount0, uint256 amount1);\\r\\n\\r\\n    function swap(\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address to,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n\\r\\n    function skim(address to) external;\\r\\n\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountADesired,\\r\\n        uint256 amountBDesired,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        returns (\\r\\n            uint256 amountA,\\r\\n            uint256 amountB,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint256 amountTokenDesired,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        payable\\r\\n        returns (\\r\\n            uint256 amountToken,\\r\\n            uint256 amountETH,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\r\\n\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\r\\n\\r\\n    function swapExactTokensForTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactETHForTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactETH(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactTokensForETH(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapETHForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function quote(\\r\\n        uint256 amountA,\\r\\n        uint256 reserveA,\\r\\n        uint256 reserveB\\r\\n    ) external pure returns (uint256 amountB);\\r\\n\\r\\n    function getAmountOut(\\r\\n        uint256 amountIn,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountOut);\\r\\n\\r\\n    function getAmountIn(\\r\\n        uint256 amountOut,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountIn);\\r\\n\\r\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256[] memory amounts);\\r\\n\\r\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256[] memory amounts);\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountETH);\\r\\n\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable;\\r\\n\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract ASIX_TOKEN is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    mapping(address => uint256) private _rOwned;\\r\\n    mapping(address => uint256) private _tOwned;\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    mapping(address => bool) private _isExcludedFromFee;\\r\\n\\r\\n    mapping(address => bool) private _isExcluded;\\r\\n    address[] private _excluded;\\r\\n\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private _tTotal = 10 * 10**12 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n\\r\\n    address payable public _marketingAddress =\\r\\n        payable(address(0xabA88c90551AE60A1b5F94F677005d382248b8CF));\\r\\n\\r\\n    string private _name = \\\"ASIX Token\\\";\\r\\n    string private _symbol = \\\"ASIX\\\";\\r\\n    uint8 private _decimals = 9;\\r\\n\\r\\n    struct BuyFee {\\r\\n        uint16 tax;\\r\\n        uint16 marketing;\\r\\n    }\\r\\n\\r\\n    struct SellFee {\\r\\n        uint16 tax;\\r\\n        uint16 marketing;\\r\\n    }\\r\\n\\r\\n    BuyFee public buyFee;\\r\\n    SellFee public sellFee;\\r\\n\\r\\n    uint16 private _taxFee;\\r\\n    uint16 private _marketingFee;\\r\\n\\r\\n    IUniswapV2Router02 public immutable uniswapV2Router;\\r\\n    address public immutable uniswapV2Pair;\\r\\n\\r\\n    constructor() {\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n\\r\\n        buyFee.tax = 0;\\r\\n        buyFee.marketing = 7;\\r\\n\\r\\n        sellFee.tax = 0;\\r\\n        sellFee.marketing = 9;\\r\\n\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\r\\n            // 0x10ED43C718714eb63d5aA57B78B54704E256024E\\r\\n            0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D \\r\\n        );\\r\\n        // Create a uniswap pair for this new token\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\r\\n            .createPair(address(this), _uniswapV2Router.WETH());\\r\\n\\r\\n        // set the rest of the contract variables\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n\\r\\n        // exclude owner, tax wallet, and this contract from fee\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_marketingAddress] = true;\\r\\n\\r\\n        emit Transfer(address(0), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        if (_isExcluded[account]) return _tOwned[account];\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        public\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount)\\r\\n        public\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"ERC20: transfer amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue)\\r\\n        public\\r\\n        virtual\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue)\\r\\n        public\\r\\n        virtual\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].sub(\\r\\n                subtractedValue,\\r\\n                \\\"ERC20: decreased allowance below zero\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        require(\\r\\n            rAmount <= _rTotal,\\r\\n            \\\"Amount must be less than total reflections\\\"\\r\\n        );\\r\\n        uint256 currentRate = _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function updateMarketingWallet(address payable newAddress)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        _marketingAddress = newAddress;\\r\\n    }\\r\\n\\r\\n    function excludeFromFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = true;\\r\\n    }\\r\\n\\r\\n    function includeInFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = false;\\r\\n    }\\r\\n\\r\\n    event SellFeeUpdated(\\r\\n        uint256 oldSellTax,\\r\\n        uint256 oldSellMarketing,\\r\\n        uint256 SellTax,\\r\\n        uint256 SellMarketing\\r\\n    );\\r\\n\\r\\n    function setSellFee(uint16 tax, uint16 marketing) external onlyOwner {\\r\\n        require(tax + marketing <= 100, \\\"SellFee exceed 100\\\");\\r\\n        emit SellFeeUpdated(sellFee.tax, sellFee.marketing, tax, marketing);\\r\\n\\r\\n        sellFee.tax = tax;\\r\\n        sellFee.marketing = marketing;\\r\\n    }\\r\\n\\r\\n    event BuyFeeUpdated(\\r\\n        uint256 oldBuyTax,\\r\\n        uint256 oldBuyMarketing,\\r\\n        uint256 BuyTax,\\r\\n        uint256 BuyMarketing\\r\\n    );\\r\\n\\r\\n    function setBuyFee(uint16 tax, uint16 marketing) external onlyOwner {\\r\\n        require(tax + marketing <= 100, \\\"BuyFee exceed 100\\\");\\r\\n        emit BuyFeeUpdated(buyFee.tax, buyFee.marketing, tax, marketing);\\r\\n\\r\\n        buyFee.tax = tax;\\r\\n        buyFee.marketing = marketing;\\r\\n    }\\r\\n\\r\\n    //to recieve ETH from uniswapV2Router when swapping\\r\\n    receive() external payable {}\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount)\\r\\n        private\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        uint256 tFee = calculateTaxFee(tAmount);\\r\\n        uint256 tMarketing = calculateMarketingFee(tAmount);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tMarketing);\\r\\n\\r\\n        return (tTransferAmount, tFee, tMarketing);\\r\\n    }\\r\\n\\r\\n    function _getRValues(\\r\\n        uint256 tAmount,\\r\\n        uint256 tFee,\\r\\n        uint256 tMarketing,\\r\\n        uint256 currentRate\\r\\n    )\\r\\n        private\\r\\n        pure\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rMarketing = tMarketing.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rMarketing);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n    function _getRate() private view returns (uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns (uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;\\r\\n        for (uint256 i = 0; i < _excluded.length; i++) {\\r\\n            if (\\r\\n                _rOwned[_excluded[i]] > rSupply ||\\r\\n                _tOwned[_excluded[i]] > tSupply\\r\\n            ) return (_rTotal, _tTotal);\\r\\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\\r\\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\\r\\n        }\\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n\\r\\n    function _takeMarketing(uint256 tMarketing) private {\\r\\n        uint256 currentRate = _getRate();\\r\\n        uint256 rMarketing = tMarketing.mul(currentRate);\\r\\n        _rOwned[_marketingAddress] = _rOwned[_marketingAddress].add(rMarketing);\\r\\n        if (_isExcluded[_marketingAddress])\\r\\n            _tOwned[_marketingAddress] = _tOwned[_marketingAddress].add(\\r\\n                tMarketing\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\\r\\n        return _amount.mul(_taxFee).div(10**2);\\r\\n    }\\r\\n\\r\\n    function calculateMarketingFee(uint256 _amount)\\r\\n        private\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _amount.mul(_marketingFee).div(10**2);\\r\\n    }\\r\\n\\r\\n    function removeAllFee() private {\\r\\n        _taxFee = 0;\\r\\n        _marketingFee = 0;\\r\\n    }\\r\\n\\r\\n    function setBuy() private {\\r\\n        _taxFee = buyFee.tax;\\r\\n        _marketingFee = buyFee.marketing;\\r\\n    }\\r\\n\\r\\n    function setSell() private {\\r\\n        _taxFee = sellFee.tax;\\r\\n        _marketingFee = sellFee.marketing;\\r\\n    }\\r\\n\\r\\n    function isExcludedFromFee(address account) public view returns (bool) {\\r\\n        return _isExcludedFromFee[account];\\r\\n    }\\r\\n\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n\\r\\n        //indicates if fee should be deducted from transfer\\r\\n        bool takeFee = true;\\r\\n\\r\\n        //if any account belongs to _isExcludedFromFee account then remove the fee\\r\\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\\r\\n            takeFee = false;\\r\\n        }\\r\\n\\r\\n        //transfer amount, it will take tax, burn, liquidity fee\\r\\n        _tokenTransfer(from, to, amount, takeFee);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        // generate the uniswap pair path of token -> weth\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        // make the swap\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        // approve token transfer to cover all possible scenarios\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        // add the liquidity\\r\\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //this method is responsible for taking all fee, if takeFee is true\\r\\n    function _tokenTransfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount,\\r\\n        bool takeFee\\r\\n    ) private {\\r\\n        if (takeFee) {\\r\\n            removeAllFee();\\r\\n            if (sender == uniswapV2Pair) {\\r\\n                setBuy();\\r\\n            }\\r\\n            if (recipient == uniswapV2Pair) {\\r\\n                setSell();\\r\\n            }\\r\\n\\r\\n            //take fee for inter-wallet transfer\\r\\n            if ((sender != uniswapV2Pair) && (recipient != uniswapV2Pair)) {\\r\\n                setSell();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\\r\\n            _transferFromExcluded(sender, recipient, amount);\\r\\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferToExcluded(sender, recipient, amount);\\r\\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\\r\\n            _transferStandard(sender, recipient, amount);\\r\\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferBothExcluded(sender, recipient, amount);\\r\\n        } else {\\r\\n            _transferStandard(sender, recipient, amount);\\r\\n        }\\r\\n        removeAllFee();\\r\\n    }\\r\\n\\r\\n    function _transferStandard(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferToExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferFromExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferBothExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x3be6f98e6d4526e940dfa882d0a39963896233fa45c9fd0e54f517f4a500f729\",\"license\":\"MIT\"}},\"version\":1}",
      "storageLayout": {
        "storage": [
          {
            "astId": 500,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 502,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_previousOwner",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 1311,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_rOwned",
            "offset": 0,
            "slot": "2",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1315,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_tOwned",
            "offset": 0,
            "slot": "3",
            "type": "t_mapping(t_address,t_uint256)"
          },
          {
            "astId": 1321,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_allowances",
            "offset": 0,
            "slot": "4",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
          },
          {
            "astId": 1325,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_isExcludedFromFee",
            "offset": 0,
            "slot": "5",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 1329,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_isExcluded",
            "offset": 0,
            "slot": "6",
            "type": "t_mapping(t_address,t_bool)"
          },
          {
            "astId": 1332,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_excluded",
            "offset": 0,
            "slot": "7",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 1350,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_tTotal",
            "offset": 0,
            "slot": "8",
            "type": "t_uint256"
          },
          {
            "astId": 1359,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_rTotal",
            "offset": 0,
            "slot": "9",
            "type": "t_uint256"
          },
          {
            "astId": 1361,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_tFeeTotal",
            "offset": 0,
            "slot": "10",
            "type": "t_uint256"
          },
          {
            "astId": 1370,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_marketingAddress",
            "offset": 0,
            "slot": "11",
            "type": "t_address_payable"
          },
          {
            "astId": 1373,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_name",
            "offset": 0,
            "slot": "12",
            "type": "t_string_storage"
          },
          {
            "astId": 1376,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_symbol",
            "offset": 0,
            "slot": "13",
            "type": "t_string_storage"
          },
          {
            "astId": 1379,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_decimals",
            "offset": 0,
            "slot": "14",
            "type": "t_uint8"
          },
          {
            "astId": 1392,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "buyFee",
            "offset": 0,
            "slot": "15",
            "type": "t_struct(BuyFee)1384_storage"
          },
          {
            "astId": 1395,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "sellFee",
            "offset": 0,
            "slot": "16",
            "type": "t_struct(SellFee)1389_storage"
          },
          {
            "astId": 1397,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_taxFee",
            "offset": 0,
            "slot": "17",
            "type": "t_uint16"
          },
          {
            "astId": 1399,
            "contract": "contracts/ASIX.sol:ASIX_TOKEN",
            "label": "_marketingFee",
            "offset": 2,
            "slot": "17",
            "type": "t_uint16"
          }
        ],
        "types": {
          "t_address": {
            "encoding": "inplace",
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_address_payable": {
            "encoding": "inplace",
            "label": "address payable",
            "numberOfBytes": "20"
          },
          "t_array(t_address)dyn_storage": {
            "base": "t_address",
            "encoding": "dynamic_array",
            "label": "address[]",
            "numberOfBytes": "32"
          },
          "t_bool": {
            "encoding": "inplace",
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_bool)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => bool)",
            "numberOfBytes": "32",
            "value": "t_bool"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32",
            "value": "t_mapping(t_address,t_uint256)"
          },
          "t_mapping(t_address,t_uint256)": {
            "encoding": "mapping",
            "key": "t_address",
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32",
            "value": "t_uint256"
          },
          "t_string_storage": {
            "encoding": "bytes",
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(BuyFee)1384_storage": {
            "encoding": "inplace",
            "label": "struct ASIX_TOKEN.BuyFee",
            "members": [
              {
                "astId": 1381,
                "contract": "contracts/ASIX.sol:ASIX_TOKEN",
                "label": "tax",
                "offset": 0,
                "slot": "0",
                "type": "t_uint16"
              },
              {
                "astId": 1383,
                "contract": "contracts/ASIX.sol:ASIX_TOKEN",
                "label": "marketing",
                "offset": 2,
                "slot": "0",
                "type": "t_uint16"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_struct(SellFee)1389_storage": {
            "encoding": "inplace",
            "label": "struct ASIX_TOKEN.SellFee",
            "members": [
              {
                "astId": 1386,
                "contract": "contracts/ASIX.sol:ASIX_TOKEN",
                "label": "tax",
                "offset": 0,
                "slot": "0",
                "type": "t_uint16"
              },
              {
                "astId": 1388,
                "contract": "contracts/ASIX.sol:ASIX_TOKEN",
                "label": "marketing",
                "offset": 2,
                "slot": "0",
                "type": "t_uint16"
              }
            ],
            "numberOfBytes": "32"
          },
          "t_uint16": {
            "encoding": "inplace",
            "label": "uint16",
            "numberOfBytes": "2"
          },
          "t_uint256": {
            "encoding": "inplace",
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "encoding": "inplace",
            "label": "uint8",
            "numberOfBytes": "1"
          }
        }
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      },
      "solcInput": "{\n  \"language\": \"Solidity\",\n  \"sources\": {\n    \"contracts/ASIX.sol\": {\n      \"content\": \"/**\\r\\n *Submitted for verification at BscScan.com on 2022-01-19\\r\\n */\\r\\n\\r\\n// SPDX-License-Identifier: MIT\\r\\n\\r\\n\\r\\n/**\\r\\n\\r\\n     \\\\      ___| _ _| \\\\ \\\\  /     __ __|  _ \\\\   |  /  ____|   \\\\  | \\r\\n    _ \\\\   \\\\___ \\\\   |   \\\\  /         |   |   |  ' /   __|      \\\\ | \\r\\n   ___ \\\\        |  |      \\\\         |   |   |  . \\\\   |      |\\\\  | \\r\\n _/    _\\\\ _____/ ___|  _/\\\\_\\\\       _|  \\\\___/  _|\\\\_\\\\ _____| _| \\\\_| \\r\\n                                                                  \\r\\n\\r\\n    Official Website\\r\\n    https://asixtoken.com/\\r\\n\\r\\n    Telegram Global Community\\r\\n    https://t.me/asixtoken\\r\\n\\r\\n    Twitter\\r\\n    https://twitter.com/AsixToken\\r\\n\\r\\n    Instagram\\r\\n    https://www.instagram.com/asixtoken/\\r\\n\\r\\n    Medium\\r\\n    https://medium.com/@asixtokenid\\r\\n\\r\\n    Reddit\\r\\n    https://www.reddit.com/user/AsixToken\\r\\n\\r\\n\\r\\n*/\\r\\n\\r\\npragma solidity 0.8.10;\\r\\n\\r\\ninterface IERC20 {\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        external\\r\\n        returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\r\\n * checks.\\r\\n *\\r\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\r\\n * in bugs, because programmers usually assume that an overflow raises an\\r\\n * error, which is the standard behavior in high level programming languages.\\r\\n * `SafeMath` restores this intuition by reverting the transaction when an\\r\\n * operation overflows.\\r\\n *\\r\\n * Using this library instead of the unchecked operations eliminates an entire\\r\\n * class of bugs, so it's recommended to use it always.\\r\\n */\\r\\n\\r\\nlibrary SafeMath {\\r\\n    /**\\r\\n     * @dev Returns the addition of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `+` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Addition cannot overflow.\\r\\n     */\\r\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        uint256 c = a + b;\\r\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\r\\n     * overflow (when the result is negative).\\r\\n     *\\r\\n     * Counterpart to Solidity's `-` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Subtraction cannot overflow.\\r\\n     */\\r\\n    function sub(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b <= a, errorMessage);\\r\\n        uint256 c = a - b;\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\r\\n     * overflow.\\r\\n     *\\r\\n     * Counterpart to Solidity's `*` operator.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - Multiplication cannot overflow.\\r\\n     */\\r\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\r\\n        // benefit is lost if 'b' is also tested.\\r\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\r\\n        if (a == 0) {\\r\\n            return 0;\\r\\n        }\\r\\n\\r\\n        uint256 c = a * b;\\r\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\\r\\n     * division by zero. The result is rounded towards zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\r\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\r\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function div(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b > 0, errorMessage);\\r\\n        uint256 c = a / b;\\r\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\r\\n\\r\\n        return c;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\r\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\r\\n     * Reverts with custom message when dividing by zero.\\r\\n     *\\r\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\r\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\r\\n     * invalid opcode to revert (consuming all remaining gas).\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - The divisor cannot be zero.\\r\\n     */\\r\\n    function mod(\\r\\n        uint256 a,\\r\\n        uint256 b,\\r\\n        string memory errorMessage\\r\\n    ) internal pure returns (uint256) {\\r\\n        require(b != 0, errorMessage);\\r\\n        return a % b;\\r\\n    }\\r\\n}\\r\\n\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address payable) {\\r\\n        return payable(msg.sender);\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes memory) {\\r\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Collection of functions related to the address type\\r\\n */\\r\\nlibrary Address {\\r\\n    /**\\r\\n     * @dev Returns true if `account` is a contract.\\r\\n     *\\r\\n     * [IMPORTANT]\\r\\n     * ====\\r\\n     * It is unsafe to assume that an address for which this function returns\\r\\n     * false is an externally-owned account (EOA) and not a contract.\\r\\n     *\\r\\n     * Among others, `isContract` will return false for the following\\r\\n     * types of addresses:\\r\\n     *\\r\\n     *  - an externally-owned account\\r\\n     *  - a contract in construction\\r\\n     *  - an address where a contract will be created\\r\\n     *  - an address where a contract lived, but was destroyed\\r\\n     * ====\\r\\n     */\\r\\n    function isContract(address account) internal view returns (bool) {\\r\\n        // According to EIP-1052, 0x0 is the value returned for not-yet created accounts\\r\\n        // and 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470 is returned\\r\\n        // for accounts without code, i.e. `keccak256('')`\\r\\n        bytes32 codehash;\\r\\n        bytes32 accountHash = 0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470;\\r\\n        // solhint-disable-next-line no-inline-assembly\\r\\n        assembly {\\r\\n            codehash := extcodehash(account)\\r\\n        }\\r\\n        return (codehash != accountHash && codehash != 0x0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\r\\n     * `recipient`, forwarding all available gas and reverting on errors.\\r\\n     *\\r\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\r\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\r\\n     * imposed by `transfer`, making them unable to receive funds via\\r\\n     * `transfer`. {sendValue} removes this limitation.\\r\\n     *\\r\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\r\\n     *\\r\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\r\\n     * taken to not create reentrancy vulnerabilities. Consider using\\r\\n     * {ReentrancyGuard} or the\\r\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\r\\n     */\\r\\n    function sendValue(address payable recipient, uint256 amount) internal {\\r\\n        require(\\r\\n            address(this).balance >= amount,\\r\\n            \\\"Address: insufficient balance\\\"\\r\\n        );\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\r\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\r\\n        require(\\r\\n            success,\\r\\n            \\\"Address: unable to send value, recipient may have reverted\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Performs a Solidity function call using a low level `call`. A\\r\\n     * plain`call` is an unsafe replacement for a function call: use this\\r\\n     * function instead.\\r\\n     *\\r\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\r\\n     * function (like regular Solidity function calls).\\r\\n     *\\r\\n     * Returns the raw returned data. To convert to the expected return value,\\r\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `target` must be a contract.\\r\\n     * - calling `target` with `data` must not revert.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(address target, bytes memory data)\\r\\n        internal\\r\\n        returns (bytes memory)\\r\\n    {\\r\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\r\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCall(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        return _functionCallWithValue(target, data, 0, errorMessage);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\r\\n     * but also transferring `value` wei to `target`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - the calling contract must have an ETH balance of at least `value`.\\r\\n     * - the called Solidity function must be `payable`.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value\\r\\n    ) internal returns (bytes memory) {\\r\\n        return\\r\\n            functionCallWithValue(\\r\\n                target,\\r\\n                data,\\r\\n                value,\\r\\n                \\\"Address: low-level call with value failed\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\r\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\r\\n     *\\r\\n     * _Available since v3.1._\\r\\n     */\\r\\n    function functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 value,\\r\\n        string memory errorMessage\\r\\n    ) internal returns (bytes memory) {\\r\\n        require(\\r\\n            address(this).balance >= value,\\r\\n            \\\"Address: insufficient balance for call\\\"\\r\\n        );\\r\\n        return _functionCallWithValue(target, data, value, errorMessage);\\r\\n    }\\r\\n\\r\\n    function _functionCallWithValue(\\r\\n        address target,\\r\\n        bytes memory data,\\r\\n        uint256 weiValue,\\r\\n        string memory errorMessage\\r\\n    ) private returns (bytes memory) {\\r\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\r\\n\\r\\n        // solhint-disable-next-line avoid-low-level-calls\\r\\n        (bool success, bytes memory returndata) = target.call{value: weiValue}(\\r\\n            data\\r\\n        );\\r\\n        if (success) {\\r\\n            return returndata;\\r\\n        } else {\\r\\n            // Look for revert reason and bubble it up if present\\r\\n            if (returndata.length > 0) {\\r\\n                // The easiest way to bubble the revert reason is using memory via assembly\\r\\n\\r\\n                // solhint-disable-next-line no-inline-assembly\\r\\n                assembly {\\r\\n                    let returndata_size := mload(returndata)\\r\\n                    revert(add(32, returndata), returndata_size)\\r\\n                }\\r\\n            } else {\\r\\n                revert(errorMessage);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\ncontract Ownable is Context {\\r\\n    address private _owner;\\r\\n    address private _previousOwner;\\r\\n\\r\\n    event OwnershipTransferred(\\r\\n        address indexed previousOwner,\\r\\n        address indexed newOwner\\r\\n    );\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        address msgSender = _msgSender();\\r\\n        _owner = msgSender;\\r\\n        emit OwnershipTransferred(address(0), msgSender);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        require(_owner == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        emit OwnershipTransferred(_owner, address(0));\\r\\n        _owner = address(0);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(\\r\\n            newOwner != address(0),\\r\\n            \\\"Ownable: new owner is the zero address\\\"\\r\\n        );\\r\\n        emit OwnershipTransferred(_owner, newOwner);\\r\\n        _owner = newOwner;\\r\\n    }\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Factory {\\r\\n    event PairCreated(\\r\\n        address indexed token0,\\r\\n        address indexed token1,\\r\\n        address pair,\\r\\n        uint256\\r\\n    );\\r\\n\\r\\n    function feeTo() external view returns (address);\\r\\n\\r\\n    function feeToSetter() external view returns (address);\\r\\n\\r\\n    function getPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        view\\r\\n        returns (address pair);\\r\\n\\r\\n    function allPairs(uint256) external view returns (address pair);\\r\\n\\r\\n    function allPairsLength() external view returns (uint256);\\r\\n\\r\\n    function createPair(address tokenA, address tokenB)\\r\\n        external\\r\\n        returns (address pair);\\r\\n\\r\\n    function setFeeTo(address) external;\\r\\n\\r\\n    function setFeeToSetter(address) external;\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.5.0;\\r\\n\\r\\ninterface IUniswapV2Pair {\\r\\n    event Approval(\\r\\n        address indexed owner,\\r\\n        address indexed spender,\\r\\n        uint256 value\\r\\n    );\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    function name() external pure returns (string memory);\\r\\n\\r\\n    function symbol() external pure returns (string memory);\\r\\n\\r\\n    function decimals() external pure returns (uint8);\\r\\n\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    function balanceOf(address owner) external view returns (uint256);\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256);\\r\\n\\r\\n    function approve(address spender, uint256 value) external returns (bool);\\r\\n\\r\\n    function transfer(address to, uint256 value) external returns (bool);\\r\\n\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 value\\r\\n    ) external returns (bool);\\r\\n\\r\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\r\\n\\r\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\r\\n\\r\\n    function nonces(address owner) external view returns (uint256);\\r\\n\\r\\n    function permit(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 value,\\r\\n        uint256 deadline,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external;\\r\\n\\r\\n    event Mint(address indexed sender, uint256 amount0, uint256 amount1);\\r\\n    event Burn(\\r\\n        address indexed sender,\\r\\n        uint256 amount0,\\r\\n        uint256 amount1,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Swap(\\r\\n        address indexed sender,\\r\\n        uint256 amount0In,\\r\\n        uint256 amount1In,\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address indexed to\\r\\n    );\\r\\n    event Sync(uint112 reserve0, uint112 reserve1);\\r\\n\\r\\n    function MINIMUM_LIQUIDITY() external pure returns (uint256);\\r\\n\\r\\n    function factory() external view returns (address);\\r\\n\\r\\n    function token0() external view returns (address);\\r\\n\\r\\n    function token1() external view returns (address);\\r\\n\\r\\n    function getReserves()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint112 reserve0,\\r\\n            uint112 reserve1,\\r\\n            uint32 blockTimestampLast\\r\\n        );\\r\\n\\r\\n    function price0CumulativeLast() external view returns (uint256);\\r\\n\\r\\n    function price1CumulativeLast() external view returns (uint256);\\r\\n\\r\\n    function kLast() external view returns (uint256);\\r\\n\\r\\n    function mint(address to) external returns (uint256 liquidity);\\r\\n\\r\\n    function burn(address to)\\r\\n        external\\r\\n        returns (uint256 amount0, uint256 amount1);\\r\\n\\r\\n    function swap(\\r\\n        uint256 amount0Out,\\r\\n        uint256 amount1Out,\\r\\n        address to,\\r\\n        bytes calldata data\\r\\n    ) external;\\r\\n\\r\\n    function skim(address to) external;\\r\\n\\r\\n    function sync() external;\\r\\n\\r\\n    function initialize(address, address) external;\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router01 {\\r\\n    function factory() external pure returns (address);\\r\\n\\r\\n    function WETH() external pure returns (address);\\r\\n\\r\\n    function addLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 amountADesired,\\r\\n        uint256 amountBDesired,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        returns (\\r\\n            uint256 amountA,\\r\\n            uint256 amountB,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function addLiquidityETH(\\r\\n        address token,\\r\\n        uint256 amountTokenDesired,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    )\\r\\n        external\\r\\n        payable\\r\\n        returns (\\r\\n            uint256 amountToken,\\r\\n            uint256 amountETH,\\r\\n            uint256 liquidity\\r\\n        );\\r\\n\\r\\n    function removeLiquidity(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityETH(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\r\\n\\r\\n    function removeLiquidityWithPermit(\\r\\n        address tokenA,\\r\\n        address tokenB,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountAMin,\\r\\n        uint256 amountBMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountA, uint256 amountB);\\r\\n\\r\\n    function removeLiquidityETHWithPermit(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountToken, uint256 amountETH);\\r\\n\\r\\n    function swapExactTokensForTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactETHForTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapTokensForExactETH(\\r\\n        uint256 amountOut,\\r\\n        uint256 amountInMax,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapExactTokensForETH(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256[] memory amounts);\\r\\n\\r\\n    function swapETHForExactTokens(\\r\\n        uint256 amountOut,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable returns (uint256[] memory amounts);\\r\\n\\r\\n    function quote(\\r\\n        uint256 amountA,\\r\\n        uint256 reserveA,\\r\\n        uint256 reserveB\\r\\n    ) external pure returns (uint256 amountB);\\r\\n\\r\\n    function getAmountOut(\\r\\n        uint256 amountIn,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountOut);\\r\\n\\r\\n    function getAmountIn(\\r\\n        uint256 amountOut,\\r\\n        uint256 reserveIn,\\r\\n        uint256 reserveOut\\r\\n    ) external pure returns (uint256 amountIn);\\r\\n\\r\\n    function getAmountsOut(uint256 amountIn, address[] calldata path)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256[] memory amounts);\\r\\n\\r\\n    function getAmountsIn(uint256 amountOut, address[] calldata path)\\r\\n        external\\r\\n        view\\r\\n        returns (uint256[] memory amounts);\\r\\n}\\r\\n\\r\\n// pragma solidity >=0.6.2;\\r\\n\\r\\ninterface IUniswapV2Router02 is IUniswapV2Router01 {\\r\\n    function removeLiquidityETHSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external returns (uint256 amountETH);\\r\\n\\r\\n    function removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(\\r\\n        address token,\\r\\n        uint256 liquidity,\\r\\n        uint256 amountTokenMin,\\r\\n        uint256 amountETHMin,\\r\\n        address to,\\r\\n        uint256 deadline,\\r\\n        bool approveMax,\\r\\n        uint8 v,\\r\\n        bytes32 r,\\r\\n        bytes32 s\\r\\n    ) external returns (uint256 amountETH);\\r\\n\\r\\n    function swapExactTokensForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n\\r\\n    function swapExactETHForTokensSupportingFeeOnTransferTokens(\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external payable;\\r\\n\\r\\n    function swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOutMin,\\r\\n        address[] calldata path,\\r\\n        address to,\\r\\n        uint256 deadline\\r\\n    ) external;\\r\\n}\\r\\n\\r\\ncontract ASIX_TOKEN is Context, IERC20, Ownable {\\r\\n    using SafeMath for uint256;\\r\\n    using Address for address;\\r\\n\\r\\n    mapping(address => uint256) private _rOwned;\\r\\n    mapping(address => uint256) private _tOwned;\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    mapping(address => bool) private _isExcludedFromFee;\\r\\n\\r\\n    mapping(address => bool) private _isExcluded;\\r\\n    address[] private _excluded;\\r\\n\\r\\n    uint256 private constant MAX = ~uint256(0);\\r\\n    uint256 private _tTotal = 10 * 10**12 * 10**9;\\r\\n    uint256 private _rTotal = (MAX - (MAX % _tTotal));\\r\\n    uint256 private _tFeeTotal;\\r\\n\\r\\n    address payable public _marketingAddress =\\r\\n        payable(address(0xabA88c90551AE60A1b5F94F677005d382248b8CF));\\r\\n\\r\\n    string private _name = \\\"ASIX Token\\\";\\r\\n    string private _symbol = \\\"ASIX\\\";\\r\\n    uint8 private _decimals = 9;\\r\\n\\r\\n    struct BuyFee {\\r\\n        uint16 tax;\\r\\n        uint16 marketing;\\r\\n    }\\r\\n\\r\\n    struct SellFee {\\r\\n        uint16 tax;\\r\\n        uint16 marketing;\\r\\n    }\\r\\n\\r\\n    BuyFee public buyFee;\\r\\n    SellFee public sellFee;\\r\\n\\r\\n    uint16 private _taxFee;\\r\\n    uint16 private _marketingFee;\\r\\n\\r\\n    IUniswapV2Router02 public immutable uniswapV2Router;\\r\\n    address public immutable uniswapV2Pair;\\r\\n\\r\\n    constructor() {\\r\\n        _rOwned[_msgSender()] = _rTotal;\\r\\n\\r\\n        buyFee.tax = 0;\\r\\n        buyFee.marketing = 7;\\r\\n\\r\\n        sellFee.tax = 0;\\r\\n        sellFee.marketing = 9;\\r\\n\\r\\n        IUniswapV2Router02 _uniswapV2Router = IUniswapV2Router02(\\r\\n            // 0x10ED43C718714eb63d5aA57B78B54704E256024E\\r\\n            0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D \\r\\n        );\\r\\n        // Create a uniswap pair for this new token\\r\\n        uniswapV2Pair = IUniswapV2Factory(_uniswapV2Router.factory())\\r\\n            .createPair(address(this), _uniswapV2Router.WETH());\\r\\n\\r\\n        // set the rest of the contract variables\\r\\n        uniswapV2Router = _uniswapV2Router;\\r\\n\\r\\n        // exclude owner, tax wallet, and this contract from fee\\r\\n        _isExcludedFromFee[owner()] = true;\\r\\n        _isExcludedFromFee[address(this)] = true;\\r\\n        _isExcludedFromFee[_marketingAddress] = true;\\r\\n\\r\\n        emit Transfer(address(0), _msgSender(), _tTotal);\\r\\n    }\\r\\n\\r\\n    function name() public view returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    function symbol() public view returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    function decimals() public view returns (uint8) {\\r\\n        return _decimals;\\r\\n    }\\r\\n\\r\\n    function totalSupply() public view override returns (uint256) {\\r\\n        return _tTotal;\\r\\n    }\\r\\n\\r\\n    function balanceOf(address account) public view override returns (uint256) {\\r\\n        if (_isExcluded[account]) return _tOwned[account];\\r\\n        return tokenFromReflection(_rOwned[account]);\\r\\n    }\\r\\n\\r\\n    function transfer(address recipient, uint256 amount)\\r\\n        public\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        _transfer(_msgSender(), recipient, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function allowance(address owner, address spender)\\r\\n        public\\r\\n        view\\r\\n        override\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    function approve(address spender, uint256 amount)\\r\\n        public\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(_msgSender(), spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function transferFrom(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount\\r\\n    ) public override returns (bool) {\\r\\n        _transfer(sender, recipient, amount);\\r\\n        _approve(\\r\\n            sender,\\r\\n            _msgSender(),\\r\\n            _allowances[sender][_msgSender()].sub(\\r\\n                amount,\\r\\n                \\\"ERC20: transfer amount exceeds allowance\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function increaseAllowance(address spender, uint256 addedValue)\\r\\n        public\\r\\n        virtual\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].add(addedValue)\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue)\\r\\n        public\\r\\n        virtual\\r\\n        returns (bool)\\r\\n    {\\r\\n        _approve(\\r\\n            _msgSender(),\\r\\n            spender,\\r\\n            _allowances[_msgSender()][spender].sub(\\r\\n                subtractedValue,\\r\\n                \\\"ERC20: decreased allowance below zero\\\"\\r\\n            )\\r\\n        );\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    function tokenFromReflection(uint256 rAmount)\\r\\n        public\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        require(\\r\\n            rAmount <= _rTotal,\\r\\n            \\\"Amount must be less than total reflections\\\"\\r\\n        );\\r\\n        uint256 currentRate = _getRate();\\r\\n        return rAmount.div(currentRate);\\r\\n    }\\r\\n\\r\\n    function updateMarketingWallet(address payable newAddress)\\r\\n        external\\r\\n        onlyOwner\\r\\n    {\\r\\n        _marketingAddress = newAddress;\\r\\n    }\\r\\n\\r\\n    function excludeFromFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = true;\\r\\n    }\\r\\n\\r\\n    function includeInFee(address account) public onlyOwner {\\r\\n        _isExcludedFromFee[account] = false;\\r\\n    }\\r\\n\\r\\n    event SellFeeUpdated(\\r\\n        uint256 oldSellTax,\\r\\n        uint256 oldSellMarketing,\\r\\n        uint256 SellTax,\\r\\n        uint256 SellMarketing\\r\\n    );\\r\\n\\r\\n    function setSellFee(uint16 tax, uint16 marketing) external onlyOwner {\\r\\n        require(tax + marketing <= 100, \\\"SellFee exceed 100\\\");\\r\\n        emit SellFeeUpdated(sellFee.tax, sellFee.marketing, tax, marketing);\\r\\n\\r\\n        sellFee.tax = tax;\\r\\n        sellFee.marketing = marketing;\\r\\n    }\\r\\n\\r\\n    event BuyFeeUpdated(\\r\\n        uint256 oldBuyTax,\\r\\n        uint256 oldBuyMarketing,\\r\\n        uint256 BuyTax,\\r\\n        uint256 BuyMarketing\\r\\n    );\\r\\n\\r\\n    function setBuyFee(uint16 tax, uint16 marketing) external onlyOwner {\\r\\n        require(tax + marketing <= 100, \\\"BuyFee exceed 100\\\");\\r\\n        emit BuyFeeUpdated(buyFee.tax, buyFee.marketing, tax, marketing);\\r\\n\\r\\n        buyFee.tax = tax;\\r\\n        buyFee.marketing = marketing;\\r\\n    }\\r\\n\\r\\n    //to recieve ETH from uniswapV2Router when swapping\\r\\n    receive() external payable {}\\r\\n\\r\\n    function _reflectFee(uint256 rFee, uint256 tFee) private {\\r\\n        _rTotal = _rTotal.sub(rFee);\\r\\n        _tFeeTotal = _tFeeTotal.add(tFee);\\r\\n    }\\r\\n\\r\\n    function _getTValues(uint256 tAmount)\\r\\n        private\\r\\n        view\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        uint256 tFee = calculateTaxFee(tAmount);\\r\\n        uint256 tMarketing = calculateMarketingFee(tAmount);\\r\\n        uint256 tTransferAmount = tAmount.sub(tFee).sub(tMarketing);\\r\\n\\r\\n        return (tTransferAmount, tFee, tMarketing);\\r\\n    }\\r\\n\\r\\n    function _getRValues(\\r\\n        uint256 tAmount,\\r\\n        uint256 tFee,\\r\\n        uint256 tMarketing,\\r\\n        uint256 currentRate\\r\\n    )\\r\\n        private\\r\\n        pure\\r\\n        returns (\\r\\n            uint256,\\r\\n            uint256,\\r\\n            uint256\\r\\n        )\\r\\n    {\\r\\n        uint256 rAmount = tAmount.mul(currentRate);\\r\\n        uint256 rFee = tFee.mul(currentRate);\\r\\n        uint256 rMarketing = tMarketing.mul(currentRate);\\r\\n        uint256 rTransferAmount = rAmount.sub(rFee).sub(rMarketing);\\r\\n        return (rAmount, rTransferAmount, rFee);\\r\\n    }\\r\\n\\r\\n    function _getRate() private view returns (uint256) {\\r\\n        (uint256 rSupply, uint256 tSupply) = _getCurrentSupply();\\r\\n        return rSupply.div(tSupply);\\r\\n    }\\r\\n\\r\\n    function _getCurrentSupply() private view returns (uint256, uint256) {\\r\\n        uint256 rSupply = _rTotal;\\r\\n        uint256 tSupply = _tTotal;\\r\\n        for (uint256 i = 0; i < _excluded.length; i++) {\\r\\n            if (\\r\\n                _rOwned[_excluded[i]] > rSupply ||\\r\\n                _tOwned[_excluded[i]] > tSupply\\r\\n            ) return (_rTotal, _tTotal);\\r\\n            rSupply = rSupply.sub(_rOwned[_excluded[i]]);\\r\\n            tSupply = tSupply.sub(_tOwned[_excluded[i]]);\\r\\n        }\\r\\n        if (rSupply < _rTotal.div(_tTotal)) return (_rTotal, _tTotal);\\r\\n        return (rSupply, tSupply);\\r\\n    }\\r\\n\\r\\n    function _takeMarketing(uint256 tMarketing) private {\\r\\n        uint256 currentRate = _getRate();\\r\\n        uint256 rMarketing = tMarketing.mul(currentRate);\\r\\n        _rOwned[_marketingAddress] = _rOwned[_marketingAddress].add(rMarketing);\\r\\n        if (_isExcluded[_marketingAddress])\\r\\n            _tOwned[_marketingAddress] = _tOwned[_marketingAddress].add(\\r\\n                tMarketing\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function calculateTaxFee(uint256 _amount) private view returns (uint256) {\\r\\n        return _amount.mul(_taxFee).div(10**2);\\r\\n    }\\r\\n\\r\\n    function calculateMarketingFee(uint256 _amount)\\r\\n        private\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        return _amount.mul(_marketingFee).div(10**2);\\r\\n    }\\r\\n\\r\\n    function removeAllFee() private {\\r\\n        _taxFee = 0;\\r\\n        _marketingFee = 0;\\r\\n    }\\r\\n\\r\\n    function setBuy() private {\\r\\n        _taxFee = buyFee.tax;\\r\\n        _marketingFee = buyFee.marketing;\\r\\n    }\\r\\n\\r\\n    function setSell() private {\\r\\n        _taxFee = sellFee.tax;\\r\\n        _marketingFee = sellFee.marketing;\\r\\n    }\\r\\n\\r\\n    function isExcludedFromFee(address account) public view returns (bool) {\\r\\n        return _isExcludedFromFee[account];\\r\\n    }\\r\\n\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) private {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) private {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n        require(amount > 0, \\\"Transfer amount must be greater than zero\\\");\\r\\n\\r\\n        //indicates if fee should be deducted from transfer\\r\\n        bool takeFee = true;\\r\\n\\r\\n        //if any account belongs to _isExcludedFromFee account then remove the fee\\r\\n        if (_isExcludedFromFee[from] || _isExcludedFromFee[to]) {\\r\\n            takeFee = false;\\r\\n        }\\r\\n\\r\\n        //transfer amount, it will take tax, burn, liquidity fee\\r\\n        _tokenTransfer(from, to, amount, takeFee);\\r\\n    }\\r\\n\\r\\n    function swapTokensForEth(uint256 tokenAmount) private {\\r\\n        // generate the uniswap pair path of token -> weth\\r\\n        address[] memory path = new address[](2);\\r\\n        path[0] = address(this);\\r\\n        path[1] = uniswapV2Router.WETH();\\r\\n\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        // make the swap\\r\\n        uniswapV2Router.swapExactTokensForETHSupportingFeeOnTransferTokens(\\r\\n            tokenAmount,\\r\\n            0, // accept any amount of ETH\\r\\n            path,\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function addLiquidity(uint256 tokenAmount, uint256 ethAmount) private {\\r\\n        // approve token transfer to cover all possible scenarios\\r\\n        _approve(address(this), address(uniswapV2Router), tokenAmount);\\r\\n\\r\\n        // add the liquidity\\r\\n        uniswapV2Router.addLiquidityETH{value: ethAmount}(\\r\\n            address(this),\\r\\n            tokenAmount,\\r\\n            0, // slippage is unavoidable\\r\\n            0, // slippage is unavoidable\\r\\n            address(this),\\r\\n            block.timestamp\\r\\n        );\\r\\n    }\\r\\n\\r\\n    //this method is responsible for taking all fee, if takeFee is true\\r\\n    function _tokenTransfer(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 amount,\\r\\n        bool takeFee\\r\\n    ) private {\\r\\n        if (takeFee) {\\r\\n            removeAllFee();\\r\\n            if (sender == uniswapV2Pair) {\\r\\n                setBuy();\\r\\n            }\\r\\n            if (recipient == uniswapV2Pair) {\\r\\n                setSell();\\r\\n            }\\r\\n\\r\\n            //take fee for inter-wallet transfer\\r\\n            if ((sender != uniswapV2Pair) && (recipient != uniswapV2Pair)) {\\r\\n                setSell();\\r\\n            }\\r\\n        }\\r\\n\\r\\n        if (_isExcluded[sender] && !_isExcluded[recipient]) {\\r\\n            _transferFromExcluded(sender, recipient, amount);\\r\\n        } else if (!_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferToExcluded(sender, recipient, amount);\\r\\n        } else if (!_isExcluded[sender] && !_isExcluded[recipient]) {\\r\\n            _transferStandard(sender, recipient, amount);\\r\\n        } else if (_isExcluded[sender] && _isExcluded[recipient]) {\\r\\n            _transferBothExcluded(sender, recipient, amount);\\r\\n        } else {\\r\\n            _transferStandard(sender, recipient, amount);\\r\\n        }\\r\\n        removeAllFee();\\r\\n    }\\r\\n\\r\\n    function _transferStandard(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferToExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferFromExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n\\r\\n    function _transferBothExcluded(\\r\\n        address sender,\\r\\n        address recipient,\\r\\n        uint256 tAmount\\r\\n    ) private {\\r\\n        (\\r\\n            uint256 tTransferAmount,\\r\\n            uint256 tFee,\\r\\n            uint256 tMarketing\\r\\n        ) = _getTValues(tAmount);\\r\\n        (uint256 rAmount, uint256 rTransferAmount, uint256 rFee) = _getRValues(\\r\\n            tAmount,\\r\\n            tFee,\\r\\n            tMarketing,\\r\\n            _getRate()\\r\\n        );\\r\\n\\r\\n        _tOwned[sender] = _tOwned[sender].sub(tAmount);\\r\\n        _rOwned[sender] = _rOwned[sender].sub(rAmount);\\r\\n        _tOwned[recipient] = _tOwned[recipient].add(tTransferAmount);\\r\\n        _rOwned[recipient] = _rOwned[recipient].add(rTransferAmount);\\r\\n        _takeMarketing(tMarketing);\\r\\n        _reflectFee(rFee, tFee);\\r\\n        emit Transfer(sender, recipient, tTransferAmount);\\r\\n    }\\r\\n}\\r\\n\"\n    }\n  },\n  \"settings\": {\n    \"optimizer\": {\n      \"enabled\": true,\n      \"runs\": 200\n    },\n    \"outputSelection\": {\n      \"*\": {\n        \"*\": [\n          \"abi\",\n          \"evm.bytecode\",\n          \"evm.deployedBytecode\",\n          \"evm.methodIdentifiers\",\n          \"metadata\",\n          \"devdoc\",\n          \"userdoc\",\n          \"storageLayout\",\n          \"evm.gasEstimates\"\n        ],\n        \"\": [\n          \"ast\"\n        ]\n      }\n    },\n    \"metadata\": {\n      \"useLiteralContent\": true\n    }\n  }\n}",
      "solcInputHash": "de5fc20d13c49a7587da1f2f2ecb42cb",
      "transactionHash": "0x5c2d587e052956bd267f04fc4a3297c10383d926e43394de18b9d93ba8d98ed3",
      "args": []
    },
    "decoded": {
      "from": "0x5DB342FB039C1c85bec5fE89Af6734621f421D84",
      "gasPrice": "1000000",
      "gasLimit": "4463266",
      "to": null,
      "value": "0",
      "nonce": 26,
      "data": "0x60c060405269021e19e0c9bab24000006008819055620000229060001962000437565b62000030906000196200045a565b600955600b80546001600160a01b03191673aba88c90551ae60a1b5f94f677005d382248b8cf17905560408051808201909152600a8082526920a9a4ac102a37b5b2b760b11b60209092019182526200008c91600c9162000391565b5060408051808201909152600480825263082a692b60e31b6020909201918252620000ba91600d9162000391565b50600e805460ff19166009179055348015620000d557600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506009543360009081526002602090815260409182902092909255600f805463ffffffff1990811662070000179091556010805490911662090000179055805163c45a015560e01b81529051737a250d5630b4cf539739df2c5dacb4c659f2488d92839263c45a015592600480830193928290030181865afa158015620001a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001c7919062000480565b6001600160a01b031663c9c6539630836001600160a01b031663ad5c46486040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000215573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023b919062000480565b6040516001600160e01b031960e085901b1681526001600160a01b039283166004820152911660248201526044016020604051808303816000875af115801562000289573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002af919062000480565b6001600160a01b0390811660a0528116608052600160056000620002db6000546001600160a01b031690565b6001600160a01b03908116825260208083019390935260409182016000908120805495151560ff199687161790553081526005909352818320805485166001908117909155600b549091168352912080549092161790556200033a3390565b6001600160a01b031660006001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6008546040516200038291815260200190565b60405180910390a350620004ef565b8280546200039f90620004b2565b90600052602060002090601f016020900481019282620003c357600085556200040e565b82601f10620003de57805160ff19168380011785556200040e565b828001600101855582156200040e579182015b828111156200040e578251825591602001919060010190620003f1565b506200041c92915062000420565b5090565b5b808211156200041c576000815560010162000421565b6000826200045557634e487b7160e01b600052601260045260246000fd5b500690565b6000828210156200047b57634e487b7160e01b600052601160045260246000fd5b500390565b6000602082840312156200049357600080fd5b81516001600160a01b0381168114620004ab57600080fd5b9392505050565b600181811c90821680620004c757607f821691505b60208210811415620004e957634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051611d1a6200053160003960008181610372015281816110110152818161107c015281816110be01526110fb015260006101fe0152611d1a6000f3fe6080604052600436106101855760003560e01c806370a08231116100d1578063a9059cbb1161008a578063dd62ed3e11610064578063dd62ed3e146104d5578063ea2f0b371461051b578063ec2a520a1461053b578063f2fde38b1461055b57600080fd5b8063a9059cbb14610475578063aacebbe314610495578063caac7934146104b557600080fd5b806370a08231146103cd578063715018a6146103ed5780637afad249146104025780638da5cb5b1461042257806395d89b4114610440578063a457c2d71461045557600080fd5b80632d8381191161013e578063437823ec11610118578063437823ec14610319578063470624021461033b57806349bd5a5e146103605780635342acb41461039457600080fd5b80632d838119146102b7578063313ce567146102d757806339509351146102f957600080fd5b806306fdde0314610191578063095ea7b3146101bc5780631694505e146101ec57806318160ddd1461023857806323b872dd146102575780632b14ca561461027757600080fd5b3661018c57005b600080fd5b34801561019d57600080fd5b506101a661057b565b6040516101b391906119b7565b60405180910390f35b3480156101c857600080fd5b506101dc6101d7366004611a24565b61060d565b60405190151581526020016101b3565b3480156101f857600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016101b3565b34801561024457600080fd5b506008545b6040519081526020016101b3565b34801561026357600080fd5b506101dc610272366004611a50565b610624565b34801561028357600080fd5b5060105461029c9061ffff808216916201000090041682565b6040805161ffff9384168152929091166020830152016101b3565b3480156102c357600080fd5b506102496102d2366004611a91565b61068d565b3480156102e357600080fd5b50600e5460405160ff90911681526020016101b3565b34801561030557600080fd5b506101dc610314366004611a24565b610716565b34801561032557600080fd5b50610339610334366004611aaa565b61074c565b005b34801561034757600080fd5b50600f5461029c9061ffff808216916201000090041682565b34801561036c57600080fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156103a057600080fd5b506101dc6103af366004611aaa565b6001600160a01b031660009081526005602052604090205460ff1690565b3480156103d957600080fd5b506102496103e8366004611aaa565b61079a565b3480156103f957600080fd5b506103396107f9565b34801561040e57600080fd5b5061033961041d366004611ade565b61086d565b34801561042e57600080fd5b506000546001600160a01b0316610220565b34801561044c57600080fd5b506101a6610968565b34801561046157600080fd5b506101dc610470366004611a24565b610977565b34801561048157600080fd5b506101dc610490366004611a24565b6109c6565b3480156104a157600080fd5b506103396104b0366004611aaa565b6109d3565b3480156104c157600080fd5b50600b54610220906001600160a01b031681565b3480156104e157600080fd5b506102496104f0366004611b11565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205490565b34801561052757600080fd5b50610339610536366004611aaa565b610a1f565b34801561054757600080fd5b50610339610556366004611ade565b610a6a565b34801561056757600080fd5b50610339610576366004611aaa565b610b66565b6060600c805461058a90611b4a565b80601f01602080910402602001604051908101604052809291908181526020018280546105b690611b4a565b80156106035780601f106105d857610100808354040283529160200191610603565b820191906000526020600020905b8154815290600101906020018083116105e657829003601f168201915b5050505050905090565b600061061a338484610c50565b5060015b92915050565b6000610631848484610d74565b610683843361067e85604051806060016040528060288152602001611c98602891396001600160a01b038a1660009081526004602090815260408083203384529091529020549190610ef9565b610c50565b5060019392505050565b60006009548211156106f95760405162461bcd60e51b815260206004820152602a60248201527f416d6f756e74206d757374206265206c657373207468616e20746f74616c207260448201526965666c656374696f6e7360b01b60648201526084015b60405180910390fd5b6000610703610f33565b905061070f8382610f56565b9392505050565b3360008181526004602090815260408083206001600160a01b0387168452909152812054909161061a91859061067e9086610f98565b6000546001600160a01b031633146107765760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b6001600160a01b03811660009081526006602052604081205460ff16156107d757506001600160a01b031660009081526003602052604090205490565b6001600160a01b03821660009081526002602052604090205461061e9061068d565b6000546001600160a01b031633146108235760405162461bcd60e51b81526004016106f090611b85565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146108975760405162461bcd60e51b81526004016106f090611b85565b60646108a38284611bd0565b61ffff1611156108e95760405162461bcd60e51b81526020600482015260116024820152700427579466565206578636565642031303607c1b60448201526064016106f0565b600f546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f3d839c4d8187eded7cfbdfb38e8c68ae748d7c674400c8c3b8c837ba2933d1ac9181900360800190a1600f805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6060600d805461058a90611b4a565b600061061a338461067e85604051806060016040528060258152602001611cc0602591393360009081526004602090815260408083206001600160a01b038d1684529091529020549190610ef9565b600061061a338484610d74565b6000546001600160a01b031633146109fd5760405162461bcd60e51b81526004016106f090611b85565b600b80546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610a495760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b03166000908152600560205260409020805460ff19169055565b6000546001600160a01b03163314610a945760405162461bcd60e51b81526004016106f090611b85565b6064610aa08284611bd0565b61ffff161115610ae75760405162461bcd60e51b8152602060048201526012602482015271053656c6c46656520657863656564203130360741b60448201526064016106f0565b6010546040805161ffff80841682526201000090930483166020820152848316818301529183166060830152517f5453929bc359b94bdd2542a6d8391ca15fe386d74f044db5277328a36de3c6509181900360800190a16010805461ffff928316620100000263ffffffff199091169290931691909117919091179055565b6000546001600160a01b03163314610b905760405162461bcd60e51b81526004016106f090611b85565b6001600160a01b038116610bf55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106f0565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316610cb25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016106f0565b6001600160a01b038216610d135760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016106f0565b6001600160a01b0383811660008181526004602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b038316610dd85760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016106f0565b6001600160a01b038216610e3a5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016106f0565b60008111610e9c5760405162461bcd60e51b815260206004820152602960248201527f5472616e7366657220616d6f756e74206d7573742062652067726561746572206044820152687468616e207a65726f60b81b60648201526084016106f0565b6001600160a01b03831660009081526005602052604090205460019060ff1680610ede57506001600160a01b03831660009081526005602052604090205460ff165b15610ee7575060005b610ef384848484610ff7565b50505050565b60008184841115610f1d5760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611bf6565b95945050505050565b6000806000610f406112a3565b9092509050610f4f8282610f56565b9250505090565b600061070f83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250611425565b600080610fa58385611c0d565b90508381101561070f5760405162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f77000000000060448201526064016106f0565b801561113d5761100f6011805463ffffffff19169055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b0316141561107a5761107a600f54601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156110bc576110bc611453565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316846001600160a01b03161415801561113057507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614155b1561113d5761113d611453565b6001600160a01b03841660009081526006602052604090205460ff16801561117e57506001600160a01b03831660009081526006602052604090205460ff16155b156111935761118e848484611481565b611291565b6001600160a01b03841660009081526006602052604090205460ff161580156111d457506001600160a01b03831660009081526006602052604090205460ff165b156111e45761118e8484846115ba565b6001600160a01b03841660009081526006602052604090205460ff1615801561122657506001600160a01b03831660009081526006602052604090205460ff16155b156112365761118e848484611671565b6001600160a01b03841660009081526006602052604090205460ff16801561127657506001600160a01b03831660009081526006602052604090205460ff165b156112865761118e8484846116c3565b611291848484611671565b610ef36011805463ffffffff19169055565b6009546008546000918291825b6007548110156113f5578260026000600784815481106112d2576112d2611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054118061133d575081600360006007848154811061131657611316611c25565b60009182526020808320909101546001600160a01b03168352820192909252604001902054115b1561135357600954600854945094505050509091565b611399600260006007848154811061136d5761136d611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548490611740565b92506113e160036000600784815481106113b5576113b5611c25565b60009182526020808320909101546001600160a01b031683528201929092526040019020548390611740565b9150806113ed81611c3b565b9150506112b0565b5060085460095461140591610f56565b82101561141c576009546008549350935050509091565b90939092509050565b600081836114465760405162461bcd60e51b81526004016106f091906119b7565b506000610f2a8486611c56565b601054601180546201000080840461ffff90811690910263ffffffff19909216931692909217919091179055565b600080600061148f84611782565b92509250925060008060006114ad8786866114a8610f33565b6117c4565b6001600160a01b038c1660009081526003602052604090205492955090935091506114d89088611740565b6001600160a01b038a166000908152600360209081526040808320939093556002905220546115079084611740565b6001600160a01b03808b1660009081526002602052604080822093909355908a16815220546115369083610f98565b6001600160a01b03891660009081526002602052604090205561155884611814565b61156281866118d4565b876001600160a01b0316896001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef886040516115a791815260200190565b60405180910390a3505050505050505050565b60008060006115c884611782565b92509250925060008060006115e18786866114a8610f33565b6001600160a01b038c16600090815260026020526040902054929550909350915061160c9084611740565b6001600160a01b03808b16600090815260026020908152604080832094909455918b168152600390915220546116429087610f98565b6001600160a01b0389166000908152600360209081526040808320939093556002905220546115369083610f98565b600080600061167f84611782565b92509250925060008060006116988786866114a8610f33565b6001600160a01b038c1660009081526002602052604090205492955090935091506115079084611740565b60008060006116d184611782565b92509250925060008060006116ea8786866114a8610f33565b6001600160a01b038c1660009081526003602052604090205492955090935091506117159088611740565b6001600160a01b038a1660009081526003602090815260408083209390935560029052205461160c90845b600061070f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610ef9565b600080600080611791856118f8565b9050600061179e8661191a565b905060006117b6826117b08986611740565b90611740565b979296509094509092505050565b60008080806117d38886611938565b905060006117e18887611938565b905060006117ef8888611938565b90506000611801826117b08686611740565b939b939a50919850919650505050505050565b600061181e610f33565b9050600061182c8383611938565b600b546001600160a01b03166000908152600260205260409020549091506118549082610f98565b600b80546001600160a01b03908116600090815260026020908152604080832095909555925490911681526006909152205460ff16156118cf57600b546001600160a01b03166000908152600360205260409020546118b39084610f98565b600b546001600160a01b03166000908152600360205260409020555b505050565b6009546118e19083611740565b600955600a546118f19082610f98565b600a555050565b60115460009061061e9060649061191490859061ffff16611938565b90610f56565b60115460009061061e9060649061191490859062010000900461ffff165b6000826119475750600061061e565b60006119538385611c78565b9050826119608583611c56565b1461070f5760405162461bcd60e51b815260206004820152602160248201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6044820152607760f81b60648201526084016106f0565b600060208083528351808285015260005b818110156119e4578581018301518582016040015282016119c8565b818111156119f6576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114611a2157600080fd5b50565b60008060408385031215611a3757600080fd5b8235611a4281611a0c565b946020939093013593505050565b600080600060608486031215611a6557600080fd5b8335611a7081611a0c565b92506020840135611a8081611a0c565b929592945050506040919091013590565b600060208284031215611aa357600080fd5b5035919050565b600060208284031215611abc57600080fd5b813561070f81611a0c565b803561ffff81168114611ad957600080fd5b919050565b60008060408385031215611af157600080fd5b611afa83611ac7565b9150611b0860208401611ac7565b90509250929050565b60008060408385031215611b2457600080fd5b8235611b2f81611a0c565b91506020830135611b3f81611a0c565b809150509250929050565b600181811c90821680611b5e57607f821691505b60208210811415611b7f57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611bed57611bed611bba565b01949350505050565b600082821015611c0857611c08611bba565b500390565b60008219821115611c2057611c20611bba565b500190565b634e487b7160e01b600052603260045260246000fd5b6000600019821415611c4f57611c4f611bba565b5060010190565b600082611c7357634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611c9257611c92611bba565b50029056fe45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212206a61ce250d4ea20d50385394c7170095b998742700698fbe2fa2866ea707f09164736f6c634300080a0033",
      "r": "0xdabc71112b0748b045558542e4db8dcb4561b059245d669ca53e89598199376f",
      "s": "0x49b7f1b4183136285657bc6cea86fe8e330368b10d772feaffa0febf18c8ca0a",
      "v": 42,
      "chainId": 3
    }
  }
}